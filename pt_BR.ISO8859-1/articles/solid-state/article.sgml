<!-- Copyright (c) 2001 The FreeBSD Documentation Project

     Redistribution and use in source (SGML DocBook) and 'compiled' forms
     (SGML, HTML, PDF, PostScript, RTF and so forth) with or without
     modification, are permitted provided that the following conditions
     are met:

      1.  Redistributions of source code (SGML DocBook) must retain the above
	 copyright notice, this list of conditions and the following
	 disclaimer as the first lines of this file unmodified.

      2.  Redistributions in compiled form (transformed to other DTDs,
	 converted to PDF, PostScript, RTF and other formats) must reproduce
	 the above copyright notice, this list of conditions and the
	 following disclaimer in the documentation and/or other materials
	 provided with the distribution.

     THIS DOCUMENTATION IS PROVIDED BY THE FREEBSD DOCUMENTATION PROJECT "AS
     IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
     THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
     PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL NIK CLAYTON BE LIABLE FOR ANY
     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
     OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
     ANY WAY OUT OF THE USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE
     POSSIBILITY OF SUCH DAMAGE.

     $FreeBSD: doc/en_US.ISO8859-1/articles/solid-state/article.sgml,v 1.11 2003/10/18 10:39:15 simon Exp $
-->

<!DOCTYPE article PUBLIC "-//FreeBSD//DTD DocBook V4.1-Based Extension//EN" [
<!ENTITY % man PUBLIC "-//FreeBSD//ENTITIES DocBook Manual Page Entities//EN">
%man;
<!ENTITY legalnotice SYSTEM "../../share/sgml/legalnotice.sgml">

<!ENTITY % trademarks PUBLIC "-//FreeBSD//ENTITIES DocBook Trademark Entities//EN">
%trademarks;
]>

<article>
  <articleinfo>
    <title>FreeBSD e Dispositivos de Estado S&oacute;lido</title>

    <authorgroup>
      <author>
	<firstname>John</firstname>
	<surname>Kozubik</surname>

	<affiliation>
	  <address><email>john@kozubik.com</email></address>
	</affiliation>
      </author>
    </authorgroup>

    <pubdate>$FreeBSD: doc/en_US.ISO8859-1/articles/solid-state/article.sgml,v 1.11 2003/10/18 10:39:15 simon Exp $</pubdate>

    <copyright>
      <year>2001</year>
      <holder>Projeto de documenta&ccedil;&atilde;o do FreeBSD</holder>
    </copyright>

    <legalnotice id="trademarks" role="trademarks">
      &tm-attrib.freebsd;
      &tm-attrib.m-systems;
      &tm-attrib.general;
    </legalnotice>

    &legalnotice;

    <abstract>
      <para>Este artigo aborda o uso de dispositivos de armazenamento em
	estado s&oacute;lido na cria&ccedil;&atilde;o de sistemas embedded.</para>

      <para>Os sistemas Embedded possuem a vantagem de ter a sua
	estabilidade aumentada devido a aus&ecirc;ncia completa de partes
	m&oacute;veis (Discos rigidos).  Entretanto &eacute; necess&aacute;rio levar em conta
	que geralmente estes dispositivos possuem pouco espa&ccedil;o de
	disco dispon&iacute;vel, al&eacute;m de terem na durabilidade da midia de
	armazenamento outro fator cr&iacute;tico.</para>
	
      <para>Os t&oacute;picos espec&iacute;ficos a serem abordados incluiem os tipos
	atributos das m&iacute;dias de estado s&oacute;lido apropriadas para uso
	como disco no FreeBSD, as op&ccedil;&otilde;es de kernel que s&atilde;o
	interessantes neste tipo de ambiente, o funcionamento do
	<filename>rc.diskless</filename> o qual &eacute; respons&aacute;vel por
	automatizar a inicializa&ccedil;&atilde;o deste tipo de sistema e por
	suprir as necessidades de sistemas de arquivos destinados
	apenas ao modo de leitura, e a configura&ccedil;&atilde;o manual dos sistemas
	de arquivo.  O artigo ir&aacute; concluir com algumas estrat&eacute;gias
	gerais para pequenos ambientes FreeBSD que operam em modo de
	apenas leitura.</para>
    </abstract>
  </articleinfo>

  <sect1 id="intro">
    <title>Dispositivos de disco em estado s&oacute;lido</title>

    <para>O escopo deste artigo ir&aacute; se limitar aos dispositivos de
      disco em estado s&oacute;lido baseados em mem&oacute;ria flash.  A mem&oacute;ria
      flash &eacute; uma mem&oacute;ria em estado s&oacute;lido (sem nenhuma parte m&oacute;vel) a
      qual n&atilde;o &eacute; vol&aacute;til (a mem&oacute;ria mant&eacute;m os dados mesmo depois que
      todas as fontes de energia s&atilde;o desligadas).  A mem&oacute;ria flash
      pode suportar grandes choques fisicos (quedas, etc) e &eacute;
      razoavelmente r&aacute;pida (as solu&ccedil;&otilde;es de mem&oacute;ria flash abordadas neste
      artigo s&atilde;o ligeiramente mais lentas que um disco rigido EIDE
      para as opera&ccedil;&otilde;es de escrita, e muito mais r&aacute;pidas para as
      opera&ccedil;&otilde;es de leitura).  Um aspecto muito importante das mem&oacute;rias
      flash, e que cada setor possui uma capacidade limitada de
      reescrita.  Voc&ecirc; somente pode escrever, apagar, e escrever de
      novo para um setor de uma mem&oacute;ria flash um certo n&uacute;mero de de
      vezes antes que o setor se torne permanentemente inutilizado.
      Embora muitos dispositivos de mem&oacute;ria flash mapeiem
      automaticamente os blocos ruins, e embora alguns deles
      distribuam as opera&ccedil;&otilde;es de escrita atrav&eacute;s de toda a unidade,
      permanece o fato de que existe um limite para o n&uacute;mero de
      opera&ccedil;&otilde;es de escrita que se pode realizar no dispositivo.  As
      unidades competitivas possuem em sua especifica&ccedil;&atilde;o uma vida
      &uacute;til entre 1.000.000 e 10.000.000 de escritas por setor.  Esta
      vida util &eacute; vari&aacute;vel em fun&ccedil;&atilde;o da temperatura do
      ambiente.</para>

    <para>Especificamente, n&oacute;s iremos estar discutindo sobre
      unidades compact-flash compat&iacute;veis com o padr&atilde;o ATA e unidades
      de mem&oacute;ria flash &diskonchip; da M-Systems.  Os cart&otilde;es
      compact-flash compat&iacute;veis com o padr&atilde;o ATA s&atilde;o muito populares
      como m&iacute;dias de armazenamento para c&acirc;meras digitais.  O interesse
      particular neste tipo de unidade reside no fato de que elas
      podem ser conectadas ao barramento IDE, e por serem compat&iacute;veis
      com a especifica&ccedil;&atilde;o ATA.  Consequentemente, com um adapatador
      muito simples e de baixo custo, estes dispositivos podem ser
      conectados diretamente no barramento IDE de um computador.
      Ao conectar o dispositivo desta forma, os sistemas operacionais
      como o FreeBSD ir&atilde;o enxergar o dispositivo como um disco rigido
      comum (apesar de pequeno).  O produto &diskonchip; da M-Systems
      &eacute; baseado na mesma tecnologia de mem&oacute;ria flash utilizada nos cart&otilde;es
      compact flash compat&iacute;veis com o padr&atilde;o ATA, mas s&atilde;o
      comercializados no formato de um DIP (um Circuito Integrado) e
      n&atilde;o s&atilde;o compat&iacute;veis com o padr&atilde;o ATA.  Para utilizar este tipo
      de dispositivo, n&atilde;o basta instal&aacute;-lo em uma placa m&atilde;e que possua
      um socket para &diskonchip;, voc&ecirc; tamb&eacute;m precisar&aacute; gerar um novo
      kernel para o seu FreeBSD habilitando o suporte ao driver <quote>
      fla</quote>.  E mais, e isso &eacute; critico, existem dados
      espec&iacute;ficos colocados pelo fabricante no setor de boot deste
      dispositivo, desta forma voc&ecirc; deve ter o cuidado de n&atilde;o instalar
      o boot loader do FreeBSD (e nenhum outro) quando estiver
      utilizando um &diskonchip;.</para>

    <para>Existem outras solu&ccedil;&otilde;es de disco em estado s&oacute;lido, mas eles
      s&atilde;o caros, obscuros e relativamente complicados para serem abordados
      dentro do escopo deste artigo.</para>
  </sect1>

  <sect1 id="kernel">
      <title>Op&ccedil;&otilde;es do Kernel</title>

    <para>Existem poucas op&ccedil;&otilde;es no kernel que sejam de interesse
      espec&iacute;fico para a cria&ccedil;&atilde;o de um sistema FreeBSD embedded.</para>

    <para>Primeiro, todos os sistemas FreeBSD embedded que utilizam
      unidades de mem&oacute;ria flash como sistema de disco estar&atilde;o
      interessados em discos de mem&oacute;ria e sistemas de arquivos em
      mem&oacute;ria.  Devido o limitado n&uacute;mero de opera&ccedil;&otilde;es de escrita que
      pode ser realizados em uma unidade de mem&oacute;ria flash, o disco e o
      sistema de arquivo provavelmente ser&atilde;o montados em modo
      de apenas leitura.  Neste ambiente, os sistemas de arquivo tais
      como <filename>/tmp</filename> e <filename>/var</filename> ser&atilde;o
      montados em um sistema de arquivos em mem&oacute;ria RAM, de forma a
      permitir que o sistema possa criar os logs, atualizar os
      contadores e os arquivos tempor&aacute;rios.  O sistema de arquivo em
      mem&oacute;ria &eacute; um componente cr&iacute;tico para o sucesso da implementa&ccedil;&atilde;o
      de um sistema FreeBSD embedded.</para>

    <para>Voc&ecirc; deve certificar-se que as linhas abaixo existam em seu
    arquivo de configura&ccedil;&atilde;o do kernel:</para>

    <programlisting>options         MFS      # Memory Filesystem
options         MD_ROOT  # md device usable as a potential root device
pseudo-device   md       # memory disk</programlisting>

    <para>Segundo, se voc&ecirc; ir&aacute; utilizar dispositivos &diskonchip; da M-Systems,
      voc&ecirc; tamb&eacute;m ir&aacute; precisar incluir a linha abaixo:</para>

    <programlisting>device        fla0      at isa?</programlisting>
  </sect1>

  <sect1 id="ro-fs">
    <title>O <filename>rc.diskless</filename> e os sistemas de
      arquivos de apenas leitura</title>

    <para>A inicializa&ccedil;&atilde;o p&oacute;s boot em um sistema FreeBSD embedded &eacute;
      controlada pelo <filename>/etc/rc.diskless2</filename> (o
      <filename>/etc/rc.diskless1</filename> &eacute; para o boot diskless
      usando BOOTP).  Este script &eacute; chamado atrav&eacute;s da inser&ccedil;&atilde;o de
      uma linha no <filename>/etc/rc.conf</filename> como a
      seguir:</para>

    <programlisting>diskless_mount=/etc/rc.diskless2</programlisting>

    <para>O <filename>rc.diskless2</filename> monta o
      <filename>/var</filename> em um sistema de arquivo em mem&oacute;ria
      RAM, cria uma lista de diret&oacute;rios configur&aacute;veis no
      <filename>/var</filename> com o comando &man.mkdir.1;, altera as
      permiss&otilde;es de alguns destes diret&oacute;rios, e prepara uma c&oacute;pia das
      entradas de dispositivo tornando o /dev uma parti&ccedil;&atilde;o grav&aacute;vel
      (novamente um sistema de arquivo em mem&oacute;ria).  Na execu&ccedil;&atilde;o do
      <filename>/etc/rc.diskless2</filename>, uma outra vari&aacute;vel do
      <filename>rc.conf</filename> ir&aacute; ser consultada -
      <literal>varsize</literal>.  O
      <filename>/etc/rc.diskless2</filename> cria a parti&ccedil;&atilde;o
      <filename>/var</filename> com um tamanho baseado no valor desta
      vari&aacute;vel do <filename>rc.conf</filename>:</para>

    <programlisting>varsize=8192</programlisting>

    <para>Lembre-se que este valor est&aacute; em setores.  A cria&ccedil;&atilde;o da
      parti&ccedil;&atilde;o <filename>/dev</filename> pelo
      <filename>/etc/rc.diskless2</filename>, entretanto, &eacute; governada
      por um valor pr&eacute;-definido de 4096 setores.  &Eacute; muito simples
      alterar essa entrada no <filename>/etc/rc.diskless2</filename>,
      embora voc&ecirc; n&atilde;o precise de mais espa&ccedil;o para o
      <filename>/dev</filename>.</para>

    <para>&Eacute; imporante lembrar que o script
      <filename>/etc/rc.diskless2</filename> assume que voc&ecirc; j&aacute; removeu
      a sua parti&ccedil;&atilde;o <filename>/tmp</filename> convencional e que j&aacute; a
      subistituiu por um link simb&oacute;lico para
      <filename>/var/tmp</filename>.  Como o <filename>tmp</filename>
      &eacute; um dos diret&oacute;rios criados no <filename>/var</filename> pelo
      script <filename>/etc/rc.diskless2</filename>, e uma vez que o
      <filename>/var</filename> &eacute; um sistema de arquivo em mem&oacute;ria (o
      qual &eacute; montado com permiss&atilde;o para escrita e leitura), o
      <filename>/tmp</filename> agora tamb&eacute;m ir&aacute; permitir opera&ccedil;&otilde;es de
      leitura e escrita.</para>

    <para>O fato do <filename>/var</filename> e do
      <filename>/dev</filename> serem sistemas de arquivos com
      permiss&otilde;es de leitura e escrita &eacute; uma importante distin&ccedil;&atilde;o, uma
      vez que a parti&ccedil;&atilde;o <filename>/</filename> (e qualquer outra que
      voc&ecirc; tenha em sua midia flash) deve ser montada em modo de
      apenas leitura.  Lembre-se que na <xref linkend="intro"> n&oacute;s
      detalhamos as limita&ccedil;&otilde;es da mem&oacute;ria flash - especificamente a
      capacidade limitada de escrita por setor.  A import&acirc;ncia de n&atilde;o
      montar os sistemas de arquivo da sua unidade flash em modo de
      leitura e escrita, e a import&acirc;ncia de n&atilde;o utilizar uma area de
      swap, n&atilde;o pode ser menosprezada.  Uma area de swap em um sistema
      de produ&ccedil;&atilde;o sob alta demanda, pode inutilizar uma unidade flash
      em menos de um ano de uso.  A gera&ccedil;&atilde;o intensa de arquivos de
      logs, bem como a cria&ccedil;&atilde;o e remo&ccedil;&atilde;o de arquivos tempor&aacute;rios em
      larga escala podem fazer o mesmo.  Consequentemente, em
      complemento a remo&ccedil;&atilde;o das entradas de <literal>swap</literal> e
      do <literal>/proc</literal> do seu arquivo
      <filename>/etc/fstab</filename>, voc&ecirc; deve alterar as op&ccedil;&otilde;es de
      cada um dos sistemas de arquivos para <literal>ro</literal>
      (apenas leitura) como mostrado a seguir:</para>

    <programlisting># Device      Mountpoint  FStype  Options  Dump  Pass#
/dev/ad0s1a   /           ufs     ro       1     1</programlisting>

    <para>Algumas aplica&ccedil;&otilde;es em um sistema m&eacute;dio ir&atilde;o come&ccedil;ar a
      apresentar problemas imediatamente como resultado desta
      altera&ccedil;&atilde;o.  Por exemplo, n&atilde;o ser&aacute; possivel instalar um port
      a partir da &aacute;rvore de ports porque o arquivo
      <filename>/var/db/port.mkversion</filename> n&atilde;o existe, o cron
      n&atilde;o ir&aacute; executar de forma correta como resultado da inexist&ecirc;ncia
      dos cron tabs no <filename>/var</filename> criado pelo
      <filename>/etc/rc.diskless2</filename>, e o syslog e o dhcp ir&atilde;o
      encontrar problemas como resultado do sistema de arquivo em modo
      de apenas leitura e da inexist&ecirc;ncia de arquivos no
      <filename>/var</filename> que o
      <filename>/etc/rc.diskless2</filename> criou.  Estes s&atilde;o apenas
      problemas tempor&aacute;rios, os quais j&aacute; est&atilde;o endere&ccedil;ados, juntamente
      com outras solu&ccedil;&otilde;es para a execu&ccedil;&atilde;o de outros pacotes de
      software comuns na sess&atilde;o <xref linkend="strategies">.</para>

    <para>Um conceito importante de se ter em mente &eacute; que um sistema
      de arquivos foi montado como apenas leitura pelo
      <filename>/etc/fstab</filename> pode ser alterado para o modo de
      leitura e escrita a qualquer momento atrav&eacute;s do uso do seguinte
      comando:</para>

    <screen>&prompt.root; <userinput>/sbin/mount -uw <replaceable>partition</replaceable></userinput></screen>

    <para>e pode ser convertido de volta para o modo apenas de leitura com o comando:</para>

    <screen>&prompt.root; <userinput>/sbin/mount -ur <replaceable>partition</replaceable></userinput></screen>
  </sect1>

  <sect1>
    <title>Cria&ccedil;&atilde;o manual de um sistema de arquivos.</title>

    <para>Devido a compatibilidade com o padr&atilde;o ATA os cart&otilde;es
      Compact-Flash s&atilde;o vistos pelo FreeBSD como um disco rigido IDE
      normal, assim como o ocorre com uma unidade &diskonchip; da
      M-Systems (quando voc&ecirc; est&aacute; utilizando um kernel com suporte ao
      driver fla habilitado), voc&ecirc; pode teoricamente instalar o FreeBSD
      apartir da rede utilizando os disquetes de boot (kern e mfsroot)
      ou apartir do CD.  Al&eacute;m do fato de que voc&ecirc; n&atilde;o deve instalar o
      boot loader quando estiver usando um dispositivo M-Systems, n&atilde;o &eacute;
      necess&aacute;rio nenhuma outra instru&ccedil;&atilde;o especial.</para>

    <para>Entretanto, ao instalar o FreeBSD pelos procedimentos
      normais (mesmo para uma pequena instala&ccedil;&atilde;o), pode produzir um
      sistema com um tamanho superior a 200 megabytes.  Como a maioria
      das pessoas costumam utilizar dispositivos de mem&oacute;ria flash com
      uma capacidade menor que esta (128 Mb &eacute; considerado muitas vezes
      um exagero, sendo que unidades entre 16 e 32 s&atilde;o consideradas
      normais) uma instala&ccedil;&atilde;o usando os mecanismos normais n&atilde;o &eacute;
      possivel &mdash; pois simplesmente n&atilde;o existe espa&ccedil;o suficiente
      nem mesmo para a instala&ccedil;&atilde;o minima do m&eacute;todo convencional.</para>

    <para>A forma mais simples de superar esta limita&ccedil;&atilde;o do espa&ccedil;o &eacute;
      instalar o FreeBSD usando os meios convencionais em um HD normal.
      Deposi que a instala&ccedil;&atilde;o estiver completa, remova os itens
      desnecess&aacute;rios para os seus objetivos at&eacute; que o sistema caiba na
      sua unidade de mem&oacute;ria flash, ent&atilde;o fa&ccedil;a um tar do sistema de
      arquivos inteiro.  Os passos seguintes ir&atilde;o guia-lo atrav&eacute;s do
      processo de prepara&ccedil;&atilde;o de uma unidade de mem&oacute;ria flash para o
      seu sistema de arquivos targeado.  Lembre-se, que uma vexz que
      n&atilde;o estaremos realizando a instala&ccedil;&atilde;o pelos m&eacute;todos normais, as
      opera&ccedil;&otilde;es tais como particionamento, cria&ccedil;&atilde;o dos slices,
      cria&ccedil;&atilde;o do sistema de arquivos, etc ter&atilde;o que ser realizados
      manualmente.  Al&eacute;m dos discos kern.flp e mfsroot.flp, voc&ecirc;
      tamb&eacute;m ir&aacute; precisar do disco de fixit.  Se voc&ecirc; estiver
      utilizando um &diskonchip; da M-Systems, o kernel utilizando com
      o seu disquete do kerne.flp ir&aacute; precisar do suporte ao driver
      <literal>fla</literal> habilitado, como detalhado no item <xref
      linkend="kernel">  Por favor consulte a sess&atilde;o <xref
      linkend="kern.flp">, para obter maiores informa&ccedil;&otilde;es sobre como
      criar um novo kernel para o <filename>kern.flp</filename>.</para>

    <procedure>
      <step>
	<title>Particionando o seu dispositivo de mem&oacute;ria flash</title>

	<para>Apos dar o boot com os disquetes do kernel e do mfsroot,
	  escolha a op&ccedil;&atilde;o <literal>custom</literal> no menu de
	  instala&ccedil;&atilde;o.  No menu de instala&ccedil;&atilde;o customizada, escolha a
	  op&ccedil;&atilde;o <literal>partition</literal>.  No menu de parti&ccedil;&otilde;es,
	  voc&ecirc; deve deletar todas as parti&ccedil;&otilde;es existentes utilizando a
	  tecla <keycap>d</keycap>.  Depois de deletar todas as
	  parti&ccedil;&otilde;es, crie uma parti&ccedil;&atilde;o utilizando a tecla
	  <keycap>c</keycap> e aceite o valor padr&atilde;o para o tamanho da
	  parti&ccedil;&atilde;o.  Quando lhe for indagado qual o tipo da parti&ccedil;&atilde;o,
	  certifique-se que o valor est&aacute; definido como
	  <literal>165</literal>.  Agora grave a tabela de
	  particionamento para o disco pressionando a tecla
	  <keycap>w</keycap> (esta &eacute; uma op&ccedil;&atilde;o oculta nesta tela).
	  Quando for apresentado o menu para que voc&ecirc; escolha o
	  gerenciador de boot, tenha o cuidado de selecionar
	  <literal>None</literal> se voc&ecirc; estiver utilizando um
	  dispositivo &diskonchip; da M-Systems.  Se voc&ecirc; estiver
	  utilizando um cart&atilde;o de mem&oacute;ria flash compativel com o
	  padr&atilde;o ATA, voc&ecirc; deve escolher a op&ccedil;&atilde;o "FreeBSD Boot
	  Manager".  Agora pressione a tecla <keycap>q</keycap> para
	  sair do menu de parti&ccedil;&otilde;es.  O menu de escolha do boot
	  manager ser&aacute; exibido novamente - repita a escolha que voc&ecirc;
	  fez anteriormente.</para>
      </step>

      <step>
	<title>Criando o sistema de arquivo no seu dispositivo de mem&oacute;ria flash.</title>

	<para>Saia do menu de instala&ccedil;&atilde;o customizada, e no menu
	  principal da instala&ccedil;&atilde;o, escolha a op&ccedil;&atilde;o
	  <literal>fixit</literal>.  Depois de entrar no ambiente de
	  recupera&ccedil;&atilde;o, execute os seguintes comandos:</para>
	
	<informaltable frame="none">
	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry align="center">Compat&iacute;veis com ATA</entry>

		<entry align="center">&diskonchip;</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry><para><screen>&prompt.root; <userinput>mknod /dev/ad0a c 116 0</userinput>
&prompt.root; <userinput>mknod /dev/ad0c c 116 2</userinput>		
&prompt.root; <userinput>disklabel -e /dev/ad0c</userinput></screen></para></entry>

		<entry><para><screen>&prompt.root; <userinput>mknod /dev/fla0a c 102 0</userinput>
&prompt.root; <userinput>mknod /dev/fla0c c 102 2</userinput>
&prompt.root; <userinput>disklabel -e /dev/fla0c</userinput></screen></para></entry>
	      </row>
	    </tbody>
	  </tgroup>
	</informaltable>

	<para>Neste ponto voc&ecirc; ter&aacute; entrado no editor vi o qual est&aacute;
	  sob controle do comando disklabel.  Se voc&ecirc; esta utilizando
	  um &diskonchip;, o primeiro passo ser&aacute; alterar o valor do
	  tipo pr&oacute;ximo do inicio do arquivo de <literal>EDSI</literal>
	  para <literal>DOC2K</literal>.  Em seguida,
	  independentemente se voc&ecirc; est&aacute; utilizando um &diskonchip; ou
	  um dispositivo de mem&oacute;ria flash compativel com o padr&atilde;o ATA,
	  voc&ecirc; precisara adicionar uma linha <literal>a:</literal>
	  no final do arquivo.  Esta linha <literal>a:</literal> deve
	  se paracer com a linha abaixo:</para>
	
	<programlisting>a:    <replaceable>123456</replaceable>  0     4.2BSD  0   0</programlisting>

	<para>Onde <replaceable>123456</replaceable> &eacute; um n&uacute;mero que
	  &eacute; exatamente o mesmo que existe na linha <literal>c:</literal>
	  referente ao tamanho.  Basicamente voc&ecirc; esta duplicando a
	  linha <literal>c:</literal> existente para a linha
	  <literal>a:</literal>, certifique-se de que o fstype &eacute;
	  <literal>4.2BSD</literal>.  Salve o arquivo e saia.</para>
	
	<informaltable frame="none">
	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry align="center">Compat&iacute;veis com ATA</entry>

		<entry align="center">&diskonchip;</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry><para><screen>&prompt.root; <userinput>disklabel -B -r /dev/ad0c</userinput>
&prompt.root; <userinput>newfs /dev/ad0a</userinput></screen></para></entry>

		<entry><para><screen>&prompt.root; <userinput>disklabel -B -r /dev/fla0c</userinput>
&prompt.root; <userinput>newfs /dev/fla0a</userinput></screen></para></entry>
	      </row>
	    </tbody>
	  </tgroup>
	</informaltable>
      </step>

      <step>
	<title>Colocando o seu sistema de arquivos no seu dispositivo
	de mem&oacute;ria flash.</title>

	<para>Monte a sua unidade de mem&oacute;ria flash rec&eacute;m
	preparada:</para>

	<informaltable frame="none">
	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry align="center">Compat&iacute;veis com ATA</entry>

		<entry align="center">&diskonchip;</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry><para><screen>&prompt.root; <userinput>mount /dev/ad0a /flash</userinput></screen></para></entry>

		<entry><para><screen>&prompt.root; <userinput>mount /dev/fla0a /flash</userinput></screen></para></entry>
	      </row>
	    </tbody>
	  </tgroup>
	</informaltable>
	
	<para>Coloque a m&aacute;quina acess&iacute;vel na rede de forma que possamos
	  transferir o nosso arquivo tar para ela e para
	  que possamos descompact&aacute;-lo no sistema de arquivos da
	  unidade de mem&oacute;ria flash.  Um exemplo de como fazer
	  isso &eacute;:</para>
	
	<screen>&prompt.root; <userinput>ifconfig xl0 192.168.0.10 netmask 255.255.255.0</userinput>
&prompt.root; <userinput>route add default 192.168.0.1</userinput></screen>

	<para>Agora que a m&aacute;quina j&aacute; esta acess&iacute;vel na rede, transfira
	  o seu arquivo tar para ela.  Neste momento voc&ecirc; pode se ver
	  diante de um pequeno dilema - Se a sua unidade de mem&oacute;ria
	  flash possui 128 Mb, por exemplo, e o seu arquivo tar &eacute;
	  maior que 64 Mb, voc&ecirc; n&atilde;o pode ter o arquivo na sua unidade
	  flash ao mesmo tempo em que esta descompactando-o - voc&ecirc; ir&aacute;
	  ficar sem espa&ccedil;o.  Uma solu&ccedil;&atilde;o para este problema, se voc&ecirc;
	  estiver utilizando FTP, &eacute; descompactar o arquivo enquanto
	  ele &eacute; transferido por FTP.  Se voc&ecirc; realizar a sua
	  transfer&ecirc;ncia desta forma, voc&ecirc; nunca ir&aacute; ter o arquivo tar
	  e o conte&uacute;do do arquivo tar no seu disco ao mesmo
	  tempo:</para>
	
	<screen><prompt>ftp></prompt> <userinput>get tarfile.tar "| tar xvf -"</userinput></screen>

	<para>Se o seu arquivo tar estiver gzipado, voc&ecirc; poder&aacute; fazer
	  o mesmo procedimento, bastando um pequeno ajuste:</para>

	<screen><prompt>ftp></prompt> <userinput>get tarfile.tar "| zcat | tar xvf -"</userinput></screen>

	<para>Depois que o conte&uacute;do do seu sistema de
	  arquivos targeado tiver sido descompactado sobre o
	  sistema de arquivos da sua unidade de mem&oacute;ria flash,
	  voc&ecirc; pode desmontar a unidade e rebootar:</para>

	<screen>&prompt.root; <userinput>cd /</userinput>
&prompt.root; <userinput>umount /flash</userinput>
&prompt.root; <userinput>exit</userinput></screen>

	<para>Assumindo que voc&ecirc; configurou corretamente o sistema
	  de arquivos no seu HD normal (com os sistemas de arquivos
	  sendo montados em modo de apenas leitura, e com as op&ccedil;&otilde;es
	  necess&aacute;rias compiladas no Kernel) voc&ecirc; deve estar bootando
	  com sucesso o seu sistema FreeBSD embedded.</para>
      </step>
    </procedure>
  </sect1>

  <sect1 id="kern.flp">
    <title>Preparando um disquete de boot (<filename>kern.flp
      </filename>) com o driver fla habilitado</title>

    <note>
      <para>Esta sess&atilde;o do artigo &eacute; relevante apenas para quem
	estiver utilizando uma unidade &diskonchip; da M-Systems.</para>
    </note>

    <para>&Eacute; poss&iacute;vel que o seu disco de boot
      <filename>kern.flp</filename> n&atilde;o utilize um kernel com suporte ao
      driver <devicename>fla</devicename> habilitado, o que &eacute;
      necess&aacute;rio para que o sistema reconhe&ccedil;a um dispositivo
      &diskonchip;.  Se voc&ecirc; deu boot no sistema com os disquetes de
      instala&ccedil;&atilde;o padr&otilde;es e foi informado pelo sistema de que n&atilde;o
      existe nenhum disco presente, ent&atilde;o &eacute; muito prov&aacute;vel que o
      driver <devicename>fla</devicename> n&atilde;o exista no seu
      kernel.</para>

    <para>Depois que voc&ecirc; tiver compilado um kernel com suporte ao driver
      <devicename>fla</devicename>, que seja menor que 1.4 Mb, voc&ecirc; pode
      criar uma imagem customizada do kern.flp com ele, seguindo as
      seguintes instru&ccedil;&otilde;es:</para>

    <procedure>
      <step>
	<para>Obtenha uma copia do arquivo kern.flp</para>
      </step>

      <step>
	<para><screen>&prompt.root; <userinput>vnconfig vn0c kern.flp</userinput></screen></para>
      </step>

      <step>
	<para><screen>&prompt.root; <userinput>mount /dev/vn0c /mnt</userinput></screen></para>
      </step>

      <step>
	<para>Coloque o seu kernel no diret&oacute;rio <filename>/mnt</filename>
	, substituindo o que j&aacute; existe.</para>
      </step>

      <step>
	<para><screen>&prompt.root; <userinput>vnconfig -d vn0c</userinput></screen></para>
      </step>
    </procedure>

    <para>O seu arquivo <filename>kern.flp</filename> agora possui um novo kernel.</para>
  </sect1>

  <sect1 id="strategies">
    <title>Estrat&eacute;gias para configura&ccedil;&atilde;o de sistemas reduzidos e com
      sistemas de arquivos em modo de apenas leitura</title>

    <para>Na sess&atilde;o <xref linkend="ro-fs">, foi mencionado que o
      sistema de arquivos <filename>/var</filename> criado pelo
      <filename>/etc/rc.diskless2</filename> e a presen&ccedil;a de uma
      parti&ccedil;&atilde;o raiz em modo de apenas leitura causariam problemas com
      muitos softwares utilizados normalmente com o FreeBSD.  Nesta
      sess&atilde;o vamos dar algumas sugest&otilde;es para rodar com sucesso o
      cron, o syslogd, o web server apache, instala&ccedil;&atilde;o de
      aplicativos via ports.</para>

    <sect2>
      <title>cron</title>

      <para>No <filename>/etc/rc.diskless2</filename> existe uma
	vari&aacute;vel chamada <literal>var_dirs</literal>.  Esta vari&aacute;vel
	consiste em uma lista de diret&oacute;rios (separados por espa&ccedil;o em
	branco) os quais ser&atilde;o criados dentro do
	<filename>/var</filename> depois que ele for montado como um
	sistema de arquivo em mem&oacute;ria.  O diret&oacute;rio <filename>cron</filename>
	e o <filename>cron/tabs</filename> n&atilde;o est&atilde;o nesta lista, e
	sem estes diret&oacute;rios, o cron n&atilde;o ir&aacute; executar.  Inserindo o
	<literal>cron</literal>, <literal>cron/tabs</literal>, e se
	poss&iacute;vel tamb&eacute;m o <literal>at</literal>, e o
	<literal>at/jobs</literal> como elementos desta vari&aacute;vel, voc&ecirc;
	ir&aacute; possibilitar a execu&ccedil;&atilde;o dos daemons &man.cron.8; e
	&man.at.1;.</para>

      <para>Entretanto, isto n&atilde;o resolve o problema de manuten&ccedil;&atilde;o das
	tabs do cron entre um boot e outro.  Quando o sistema reseta,
	o sistema de arquivos <filename>/var</filename> que esta em
	mem&oacute;ria ir&aacute; desaparecer, e qualquer tab do cron que voc&ecirc; tenha
	nele ir&aacute; desaparecer tamb&eacute;m.  Desta forma, uma solu&ccedil;&atilde;o pode
	ser criar as tabs do cron para os usu&aacute;rios que precisam
	delas, monte o seu <filename>/</filename> em modo de leitura e
	esscrita e copie as tabs do cron para algum lugar seguro, como
	por exemplo para <filename>/etc/tabs</filename>, e ent&atilde;o
	adicione uma linha no final do <filename>/etc/rc.diskless2
	</filename> que copie estas crontabs para o diret&oacute;rio
	<filename>/var/cron/tabs</filename> depois que o diret&oacute;rio
	tiver sido criado durante a inicializa&ccedil;&atilde;o do sistema.  Voc&ecirc;
	pode precisar adicionar uma linha que altere as permiss&otilde;es dos
	diret&oacute;rios que voc&ecirc; criou e dos arquivos que voc&ecirc; copiou com o
	<filename>/etc/rc.diskless2</filename>.</para>
    </sect2>

    <sect2>
      <title>syslog</title>

      <para>O <filename>syslog.conf</filename> especifica a
	localiza&ccedil;&atilde;o de certos arquivos de log que precisam existir no
	diret&oacute;rio <filename>/var/log</filename>.  Estes arquivos n&atilde;o
	s&atilde;o criados pelo <filename>/etc/rc.diskless2</filename>
	durante a inicializa&ccedil;&atilde;o do sistema.  Desta forma, em algum
	lugar no <filename>/etc/rc.diskless2</filename>, depois da
	sess&atilde;o que cria os diret&oacute;rios no <filename>/var</filename>,
	voc&ecirc; vai precisar criar algo como:</para>

      <screen>&prompt.root; <userinput>touch /var/log/security /var/log/maillog /var/log/cron /var/log/messages</userinput>
&prompt.root; <userinput>chmod 0644 /var/log/*</userinput></screen>

      <para>Voce tamb&eacute;m ter&aacute; que adicionar o diret&oacute;rio <literal>log
	</literal> a lista de diret&oacute;rios que o
	<filename>/etc/rc.diskless2</filename> cria.</para>
    </sect2>

    <sect2>
      <title>Instala&ccedil;&atilde;o de aplicativos via ports</title>

      <para>Antes de iniciar a discuss&atilde;o sobre as altera&ccedil;&otilde;es
	necess&aacute;rias para usar com sucesso a &aacute;rvore do ports, &eacute;
	necess&aacute;rio um lembrete a respeito da natureza de apenas
	leitura do seu sistema de arquivos na sua unidade de mem&oacute;ria
	flash.  Uma vez que ele &eacute; montado em modo de apenas leitura,
	voc&ecirc; ir&aacute; precisar mont&aacute;-lo temporariamente em modo de leitura
	e escrita usando a sintaxe de comando mostrada na sess&atilde;o
	<xref linkend="ro-fs">.  Voc&ecirc; deve remontar esses
	sistemas de arquivos em modo de apenas leitura sempre que
	finalizar qualquer tipo de manuten&ccedil;&atilde;o - opera&ccedil;&otilde;es de escrita
	desnecess&aacute;rias podem encurtar consideravelmente a vida &uacute;til
	da sua mem&oacute;ria flash.</para>
	
      <para>Para que seja possivel entrar no diret&oacute;rio de um port e
	executar com sucesso o comando <command>make install</command>,
	e necess&aacute;rio que o arquivo <filename>/var/db/port.mkversion
	</filename> exista, e que contenha a data correta.  Al&eacute;m
	disso, n&oacute;s precisamos criar um diret&oacute;rio para os pacotes em um
	sistema de arquivo que n&atilde;o seja montado em mem&oacute;ria RAM, o qual
	ir&aacute; manter o registro dos nossos pacotes entre um boot e
	outro.  Por causa disso &eacute; necess&aacute;rio montar o seu sistema de
	arquivos em modo leitura e escrita sempre que que for
	necess&aacute;rio instalar algum aplicativo, de forma que &eacute; correto
	assumir que teremos que reservar uma &aacute;rea em nossa unidade
	flash na qual as informa&ccedil;&otilde;es dos pacotes ser&atilde;o
	gravadas.</para>
	
      <para>Primeiro, crie um diret&oacute;rio para conter o banco de dados
	dos pacotes.  Ele normalmente fica localizado no <filename>
	/var/db/pkg</filename>, mas n&oacute;s n&atilde;o podemos coloc&aacute;-lo ali, pois
	do contr&aacute;rio ele ir&aacute; desaparecer sempre que o sistema for
	resetado.  Desta forma precisamos coloc&aacute;-lo em um local seguro,
	por exemplo:</para>

      <screen>&prompt.root; <userinput>mkdir /etc/pkg</userinput></screen>

      <para>Agora, adicione uma linha ao <filename>/etc/rc.diskless2
	</filename> a qual cria um link simb&oacute;lico do
	<filename>/var/db/pkg</filename> para o diret&oacute;rio
	<filename>/etc/pkg </filename>.  Algo como:</para>

      <screen>&prompt.root; <userinput>ln -s /etc/pkg /var/db/pkg</userinput></screen>

      <para>Adicione uma outra linha no <filename>/etc/rc.diskless2
	</filename> a qual cria e povoa o arquivo
	<filename>/var/db/port.mkversion</filename></para>

      <screen>&prompt.root; <userinput>touch /var/db/port.mkversion</userinput>
&prompt.root; <userinput>chmod 0644 /var/db/port.mkversion</userinput>
&prompt.root; <userinput>echo <replaceable>20010412</replaceable> >> /var/db/port.mkversion</userinput></screen>

      <para>onde <replaceable>20010412</replaceable> deve ser a data
	apropriada para a sua vers&atilde;o espec&iacute;fica do FreeBSD.</para>

      <para>Agora, sempre que voc&ecirc; montar o seu sistema de arquivo em
      	modo de leitura e escrita e instalar um pacote, o comando
	<command>make install</command> ir&aacute; funcionar corretamente,
	pois ele ir&aacute; encontrar um <filename>/var/db/port.mkversion
	</filename> adequado, e as informa&ccedil;&otilde;es do pacote ser&atilde;o
	gravadas com sucesso no <filename>/etc/pkg</filename> (porque
	o sistema de arquivo estar&aacute;, neste momento, montado em modo de
	leitura e escrita) o qual estar&aacute; sempre dispon&iacute;vel para o
	sistema operacional como <filename>/var/db/pkg</filename>.</para>
    </sect2>

    <sect2>
      <title>Web Server Apache</title>

      <para>O apache mant&eacute;m seus arquivos de processo (pids) e logs no
	<filename><replaceable>apache_install</replaceable>/logs</filename>.
	Uma vez que este diret&oacute;rio fica localizado no sistema de
	arquivo montado em modo de apenas leitura, ele n&atilde;o ir&aacute;
	funcionar.  E necess&aacute;rio adicionar um novo diret&oacute;rio a lista
	de diret&oacute;rios que o <filename>/etc/rc.diskless2</filename>
	cria no <filename>/var</filename>, para linkar o
	<filename><replaceable>apache_install</replaceable>/logs</filename>
	para o <filename>/var/log/apache</filename>.  Tamb&eacute;m ser&aacute;
	necess&aacute;rio configurar as permiss&otilde;es e o proprietario deste
	novo diret&oacute;rio.</para>

      <para>Primeiro, adicione o diret&oacute;rio <literal>log/apache</literal>
	&agrave; lista de diret&oacute;rios a serem criados pelo
	<filename>/etc/rc.diskless2</filename>.</para>

      <para>Segundo, adicione os comandos abaixo ao
	<filename>/etc/rc.diskless2</filename> logo depois da sess&atilde;o
	de cria&ccedil;&atilde;o dos diret&oacute;rios:</para>

      <screen>&prompt.root; <userinput>chmod 0774 /var/log/apache</userinput>
&prompt.root; <userinput>chown nobody:nobody /var/log/apache</userinput></screen>

      <para>Finalmente, remova o diret&oacute;rio <filename><replaceable>apache_install
	</replaceable>/logs</filename>, e o substitua por um link
	simb&oacute;lico:</para>

      <screen>&prompt.root; <userinput>rm -rf (apache_install)/logs</userinput>
&prompt.root; <userinput>ln -s /var/log/apache (apache_install)/logs</userinput></screen>
    </sect2>
  </sect1>
</article>
