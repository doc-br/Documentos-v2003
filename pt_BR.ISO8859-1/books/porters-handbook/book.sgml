<!--
     The FreeBSD Documentation Project

     $FreeBSD: doc/en_US.ISO8859-1/books/porters-handbook/book.sgml,v 1.349 2004/01/09 21:11:48 ceri Exp $
-->

<!DOCTYPE BOOK PUBLIC "-//FreeBSD//DTD DocBook V4.1-Based Extension//EN" [
<!ENTITY % man PUBLIC "-//FreeBSD//ENTITIES DocBook Manual Page Entities//EN">
%man;

<!ENTITY % bookinfo PUBLIC "-//FreeBSD//ENTITIES DocBook BookInfo Entities//EN">
%bookinfo;

<!ENTITY % authors PUBLIC "-//FreeBSD//ENTITIES DocBook Author Entities//EN"> %authors;
<!ENTITY % teams PUBLIC "-//FreeBSD//ENTITIES DocBook Team Entities//EN">
%teams;
<!ENTITY % mailing-lists PUBLIC "-//FreeBSD//ENTITIES DocBook Mailing List Entities//PTBR">
%mailing-lists;

]>

<book>
  <bookinfo>
    <title>Manual do Porter do FreeBSD</title>

    <authorgroup>
      <corpauthor>O Projeto de Documenta&ccedil;&atilde;o do FreeBSD</corpauthor>
    </authorgroup>

    <pubdate>Abril de 2000</pubdate>

    <copyright>
      <year>2000</year>
      <year>2001</year>
      <year>2002</year>
      <year>2003</year>
      <year>2004</year>
      <holder role="mailto:doc@FreeBSD.org">O Projeto de Documenta&ccedil;&atilde;o do
	FreeBSD</holder>
    </copyright>

    &bookinfo.trademarks;

    &bookinfo.legalnotice;
  </bookinfo>


    <chapter id="own-port">
      <title>Fazendo um port si mesmo</title>

      <para>Assim, agora voc&ecirc; est&aacute; interessado em fazer seu pr&oacute;prio port ou
        melhorando existente? Otimo!</para>

      <para>O que segue s&atilde;o alguns guias para criar um novo port para
        o FreeBSD.  Se voc&ecirc; quiser melhorar um port existente, voc&ecirc; deve
	ler isto e ent&atilde;o ler <xref linkend="port-upgrading">.</para>

      <para>Quando este documento n&atilde;o &eacute; suficientemente detalhado, voc&ecirc; deve
        consultar o <filename>/usr/ports/Mk/bsd.port.mk</filename>, qual
	todo port inclui Makefiles.  Mesmo se voc&ecirc; n&atilde;o hackeie Makefiles
	diariamente, ele &eacute; bem comentado, e voc&ecirc; ainda ganhar&aacute; muito
	conhecimento dele.  Adicionalmente, voc&ecirc; pode enviar perguntas espec&iacute;ficas
	para the &a.ports;.</para>

      <note>
        <para>Somente uma fra&ccedil;&atilde;o das vari&aacute;veis
          (<makevar><replaceable>VAR</replaceable></makevar>) que pode ser
          overridden s&atilde;o mencionados neste documento.  A maioria (se n&atilde;o todas)
	  est&atilde;o documentadas no inicio do <filename>bsd.port.mk</filename>.
	  Este arquivo usa um n&atilde;o-padr&atilde;o conjunto de tab.
	  <application>Emacs</application> e
	  <application>Vim</application> deve reconhecer as defini&ccedil;&otilde;es
	  carregando o arquivo.  Ambos &man.vi.1; e
	  &man.ex.1; podem ser definidos para usar o valor correto
	  digitando <command>:set tabstop=4</command> uma vez arquivos tenham sido
	  carregados.</para>
      </note>
    </chapter>

    <chapter id="quick-porting">
      <title>Portando R&aacute;pido</title>

      <para>Esta se&ccedil;&atilde;o lhe diz como fazer um r&aacute;pido port.  Em muitos casos, isto
        n&atilde;o &eacute; suficiente, mas n&oacute;s veremos.</para>

      <para>Primeiro, obter o tarball original e coloca-lo dentro
        <makevar>DISTDIR</makevar>, qual defaults to
        <filename>/usr/ports/distfiles</filename>.</para>

      <note>
        <para>O seguinte sup&otilde;e que o software compilado out-of-the-box,
          ex., n&atilde;o havia absolutamente nenhuma mudan&ccedil;a necess&aacute;ria para o port funcionar 
          em seu FreeBSD box.  Se voc&ecirc; necessitar mudar algo, voc&ecirc; ter&aacute;
          consultar a pr&oacute;xima se&ccedil;&atilde;o tamb&eacute;m.</para>
      </note>

      <sect1 id="porting-makefile">
        <title>Escrevendo o <filename>Makefile</filename></title>

        <para>O <filename>Makefile</filename> minimo pareceria algo
          como isto:</para>

        <programlisting># New ports collection makefile for:   oneko
# Date created:        5 December 1994
# Whom:                asami
#
# &dollar;FreeBSD&dollar;
#

PORTNAME=      oneko
PORTVERSION=   1.1b
CATEGORIES=    games
MASTER_SITES=  ftp://ftp.cs.columbia.edu/archives/X11R5/contrib/

MAINTAINER=    asami@FreeBSD.org
COMMENT=       A cat chasing a mouse all over the screen

MAN1=          oneko.1
MANCOMPRESSED= yes
USE_IMAKE=     yes

.include &lt;bsd.port.mk&gt;</programlisting>

        <para>Veja se voc&ecirc; pode comprende-lo.  N&atilde;o se preocupe sobre os &iacute;ndices
          da linha <literal>&dollar;FreeBSD&dollar;</literal> , ser&aacute;
          preenchido automaticamente pelo CVS quando o port est&aacute; importado ao nossa arvore
          de ports principal.  Voc&ecirc; pode encontrar um exemplo mais detalhado na se&ccedil;&atilde;o <link
            linkend="porting-samplem">Makefile de exemplo</link>.</para>
      </sect1>

      <sect1 id="porting-desc">
        <title>Escrevendo o arquivos de descri&ccedil;&atilde;o</title>

        <para>Existem dois arquivos de descri&ccedil;&atilde;o que s&atilde;o necess&aacute;rios para
          qualquer port, se eles s&atilde;o realmente pacotes ou n&atilde;o. Eles s&atilde;o
          <filename>pkg-descr</filename> e
          <filename>pkg-plist</filename>.  Seus
          prefixos <filename>pkg-</filename> distingue-os de
          outros arquivos.</para>

        <sect2>
          <title><filename>pkg-descr</filename></title>

          <para>Esta &eacute; uma descri&ccedil;&atilde;o mais longa do port.  Um a alguns
            par&aacute;grafos concietizamente explicando o que o port faz &eacute;
            suficiente.</para>

          <note>
            <para>Este <emphasis>n&atilde;o</emphasis> &eacute; um manual ou uma descri&ccedil;&atilde;o
              aprofundada em como usar ou compilar o port! <emphasis>Por favor
              tenha cautela se voc&ecirc; est&aacute; compiando do
              <filename>README</filename> ou manpage</emphasis>; t&atilde;o frequentemente
              eles n&atilde;o s&atilde;o uma descri&ccedil;&atilde;o concisa do port ou est&aacute; em um formato
              de dif&iacute;cil manipula&ccedil;&atilde;o (ex., manpages tem espa&ccedil;amento justificado).  Se o
              software portado tem uma homepage WWW oficial, voc&ecirc; deve lista-la
              aqui.  Prefix <emphasis>one</emphasis> do websites com
              <literal>WWW:</literal> assim ferramentas automatizadas
              funcionar&atilde;o corretamente.</para>
          </note>

          <para>Isto &eacute; recomendado que voc&ecirc; assine seu nome no final deste
            arquivo, como em:</para>

          <programlisting>Este &eacute; um port do oneko, em qual um gato persegue um pobre rato por
a tela.
 :
(etc.)

WWW: http://www.oneko.org/

- Satoshi
asami@cs.berkeley.edu</programlisting>
        </sect2>

        <sect2>
          <title><filename>pkg-plist</filename></title>

          <para>Este arquivo lista todos os arquivos instalados pelo port.  Ele &eacute;
            tambem chamado de <quote>packing list</quote> porque o pacote &eacute;
            gerado pelo empacotamento dos arquivos listados aqui.  Os pathnames s&atilde;o
            relativos ao prefixo de instala&ccedil;&atilde;o (normalmente
            <filename>/usr/local</filename> ou
            <filename>/usr/X11R6</filename>).  Se voc&ecirc; est&aacute; usando o
            <makevar>MAN<replaceable>n</replaceable></makevar> vari&aacute;veis (as
            you should be), n&atilde;o liste nenhum manpages aqui.</para>

          <para>Aqui est&aacute; um pequeno exemplo:</para>

          <programlisting>bin/oneko
lib/X11/app-defaults/Oneko
lib/X11/oneko/cat1.xpm
lib/X11/oneko/cat2.xpm
lib/X11/oneko/mouse.xpm
@dirrm lib/X11/oneko</programlisting>

          <para>Consulte o &man.pkg.create.1; manual page para detalhes na
            lista de empacotamento.</para>

          <note>
            <para>Voc&ecirc; deve listar todos arquivos, mas n&atilde;o o nomes de diret&oacute;rios,
              na lista.  Tamb&eacute;m, se o port cria diret&oacute;rios para si mesmo
              durante a instala&ccedil;&atilde;o, certifique-se de adicionar linhas
              <literal>@dirrm</literal> t&atilde;o necess&aacute;ria para remove-los quando o port &eacute;
              apagado.</para>

            <para>&Eacute; recomendav&eacute;l que voc&ecirc; mantenha todos nomes de arquivos neste
              arquivo sortidos alfabeticamente.  Isto far&aacute; a verifica&ccedil;&atilde;o de mudan&ccedil;as
              quando voc&ecirc; upgrade o port muito mais f&aacute;cil.</para>

            <para>Cria&ccedil;&atilde;o de uma lista de empacotamento manualmente pode ser uma tarefa
              muito intediante.  Se o port instala um grande numero de arquivos, <link
                linkend="porting-autoplist">criando lista de empacotamento
                automaticamente</link> pode economizar tempo.</para>
          </note>
        </sect2>
      </sect1>

      <sect1 id="porting-checksum">
        <title>Criando o arquivo de checksum</title>

        <para>So digite <command>make makesum</command>. As regras do make do ports
          gerar&aacute; automaticamente o arquivo
          <filename>distinfo</filename>.</para>
      </sect1>

      <sect1 id="porting-testing">
        <title>Testando o port</title>

        <para>Voc&ecirc; deve certificar-se que a regras do port faz exatamente o que voc&ecirc;
          quer que ele fa&ccedil;a, incluindo empacotamento do port.  Estes s&atilde;o os
          pontos importantes que voc&ecirc; precisa verificar.</para>

        <itemizedlist>
          <listitem>
            <para><filename>pkg-plist</filename> n&atilde;o cont&eacute;m nada instalado pelo
              seu port</para>
          </listitem>

          <listitem>
            <para><filename>pkg-plist</filename> cont&eacute;m tudo o que est&aacute;
              instalado pelo seu port</para>
          </listitem>

          <listitem>
            <para>Seu port pode ser instalado multiplas vezes usando o
              <maketarget>reinstall</maketarget> target</para>
          </listitem>

          <listitem>
            <para>Seu port <link linkend="porting-cleaning">cleans up</link>
              depois ele mesmo desinstala</para>
          </listitem>
        </itemizedlist>

        <procedure>
          <title>Ordem de teste recomendada</title>

          <step>
            <para><command>make install</command></para>
          </step>

          <step>
            <para><command>make package</command></para>
          </step>

          <step>
            <para><command>make deinstall</command></para>
          </step>

          <step>
            <para><command>pkg_add <replaceable>package-name</replaceable>
              </command></para>
          </step>

          <step>
            <para><command>make deinstall</command></para>
          </step>

          <step>
            <para><command>make reinstall</command></para>
          </step>

          <step>
            <para><command>make package</command></para>
          </step>
        </procedure>

        <para>Certifique-se que n&atilde;o ha quet&otilde;es avisos em nenhum dos est&aacute;gios
          <maketarget>package</maketarget> e
          <maketarget>deinstall</maketarget>.  Depois do passo 3, verifique para
          ver se todos os novos diret&oacute;rios est&atilde;o corretamente apagados.  Tamb&eacute;m, tente
          usando o software depois do passo 4, para assegurar que est&aacute; funciona corretamente
          quando instalado de um pacote.</para>
      </sect1>

      <sect1 id="porting-portlint">
        <title>Verficando seu port com <command>portlint</command></title>

        <para>Por favor use <command>portlint</command> para ver se seu port
          ajusta-se ao nossas orienta&ccedil;&otilde;es.  O programa <command>portlint</command>
          &eacute; parte da cole&ccedil;&atilde;o do ports.  Em particular, voc&ecirc; pode querer
          verificar se o <link linkend="porting-samplem">Makefile</link> est&aacute; na
          forma certa e o  <link
            linkend="porting-pkgname">package</link> est&aacute; nomeado
          apropriadamente.</para>
      </sect1>

      <sect1 id="porting-submitting">
        <title>Enviando o port</title>

        <para>Primeiro, certifique-se de ter lido a se&ccedil;&atilde;o <link
            linkend="porting-dads">FAZERes e N&Atilde;O-FAZERes</link>.</para>

        <para>Agora que voc&ecirc; est&aacute; feliz com seu port, a unica coisa restante
          &eacute; coloca-lo na arvore do ports principal do FreeBSD e fazer todos else
          feliz sobre ele tamb&eacute;m.  N&oacute;s n&atilde;o necessitamos seu diret&oacute;rio <filename>work</filename>
          ou o pacote <filename>pkgname.tgz</filename>, assim apague-os
          agora.  Pr&oacute;ximo, simplesmente inclua a saida do <command>shar `find
            port_dir`</command> em um bug report e envie-o com o
            &man.send-pr.1; programa (veja <ulink url="../../articles/contributing/contrib-how.html#CONTRIB-GENERAL">Bug
            Reports and General Commentary</ulink> para mais informa&ccedil;&otilde;es sobre
            &man.send-pr.1;).  Se o port descomprimido &eacute; maior que 20KB,
          voc&ecirc; deve comprimir ele dentro de um arquivo tar e usar &man.uuencode.1;
          antes de inclui-lo no  bug report (uuencoded tarfiles s&atilde;o
          aceit&aacute;veis mesmo se o bug report &eacute; menor que 20KB mas n&atilde;o s&atilde;o
          preferidos).  Esteja certo ao classificar o bug report como a categoria
          <literal>ports</literal> e classe
          <literal>change-request</literal>  (N&atilde;o marque o report
          <literal>confidential</literal>!).
          Tamb&eacute;m adicione um curta descri&ccedil;&atilde;o do programa que voc&ecirc; portou
          ao campo <quote>Description</quote> do PR e
          o arquivo tar do shar ou uuencoded ao campo
          <quote>Fix</quote>.  A ultima ajuda os committers
          muito, quem usa scripts para o ports-funcionar.</para>

        <para>Uma vez mais, <emphasis>n&atilde;o inclua a fonte original
            distfile, o diret&oacute;rio <filename>work</filename>, ou o pacote
            que voc&ecirc; construiu com <command>make package</command></emphasis>.</para>

        <note>
          <para>No passado, nos perguntavamos a voc&ecirc; para upload novo port submissions em
            nosso site ftp (<hostid role="fqdn">ftp.FreeBSD.org</hostid>). Este
            n&atilde;o &eacute; longer recomendado assim o acesso a leitura &eacute; desativado no
            diret&oacute;rio <filename>incoming/</filename> daquele site devido ao
            grande quantidade de software pirata aparecendo l&aacute;.</para>
        </note>

	<para>Depois que voc&ecirc; have enviou seu port, por favor seja paciente.
	  As vezes it pode levar a alguns meses antes que um port seja incluido
	  no FreeBSD, embora possa somente levar alguns dias.  Voc&ecirc; pode
	  ver a lista de ports <ulink
	  url="http://www.FreeBSD.org/cgi/query-pr-summary.cgi?category=ports">
	  esperando para ser committed ao FreeBSD</ulink>.</para>

        <para>Uma vez que n&oacute;s olharemos seu port, retornaremos para voc&ecirc; se necess&aacute;rio, e
          coloca-lo na arvore.  Seu nome tamb&eacute;m aparecer&aacute;  na lista de
          <ulink url="../../articles/contributors/contrib-additional.html">Contribuidores Adicionais do FreeBSD</ulink>
          e outros arquivos. N&atilde;o &eacute; &oacute;timo?!? <!-- smiley
          -->:-)</para>

        <note>
          <para>>Voc&ecirc; pode facilitar nosso trabalho, se voc&ecirc; usa uma boa
            descri&ccedil;&atilde;o na sinopse do relat&oacute;rio do problema.
            N&oacute;s preferimos algo como
            <quote>New port: &lt;curta descri&ccedil;&atilde;o do port&gt;</quote> para
            novos ports e
            <quote>Update port: &lt;categoria&gt;/&lt;port&gt; &lt;curta descri&ccedil;&atilde;o
            da atualiza&ccedil;&atilde;o&gt;</quote> para atualiza&ccedil;&atilde;o do port.
            Se voc&ecirc; stick a este esquema, a chance que alguem olhe
            seu PR cedo &eacute; muito maior.</para>
        </note>
      </sect1>
    </chapter>

    <chapter id="slow">
      <title>Slow Porting</title>

      <para>Ok, assim n&atilde;o era aquilo simples, e o port necessita algumas
        modifica&ccedil;&otilde;es para funcionar.  Nesta se&ccedil;&atilde;o, n&oacute;s explicaremos,
        passo a passo, como modifica-lo para funcionar com os paradigmas
        do ports.</para>

      <sect1 id="slow-work">
        <title>Como as coisas funcionam</title>

        <para>Primeiro, esta &eacute; sequencia de eventos que ocorrem quando o usu&aacute;rio
          primeiro digita <command>make</command> em seu diret&oacute;rio do port.
          Voc&ecirc; pode encontrar que contem <filename>bsd.port.mk</filename> em uma outra
          janela enquanto voc&ecirc; le isto realmente ajuda compreende-lo.</para>

        <paraMas n&atilde;o se preocupe se voc&ecirc; n&atilde;o entendeu realmente o que
          <filename>bsd.port.mk</filename> est&aacute; fazendo, muitas pessoas n&atilde;o entendem...
          <!-- smiley --><emphasis>:-&gt;</emphasis></para>

        <procedure>

          <step>
            <para>O <maketarget>fetch</maketarget> target &eacute; executado.  The
              <maketarget>fetch</maketarget> target &eacute; responsavel por certificar-se
              que o tarball existe localmente em
              <makevar>DISTDIR</makevar>. Se <maketarget>fetch</maketarget>
              n&atilde;o pode encontrar os arquivos necess&aacute;rios em <makevar>DISTDIR</makevar> it
              procurar&aacute; a URL <makevar>MASTER_SITES</makevar>, qual est&aacute;
              definida no Makefile, t&atilde;o bem quanto em nosso site principal de ftp em <ulink
                url="ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/"></ulink>,
              onde n&oacute;s colocamos sansionado distfiles como backup.  Ent&atilde;o
              tentar&aacute; buscar o arquivo distribui&ccedil;&atilde;o chamado com
              <makevar>FETCH</makevar>, assumindo que o site pedido tenha
              acesso direto a Internet.  Se sucedido, salvar&aacute;
              o arquivo em <makevar>DISTDIR</makevar> para uso futuro e
              proseguir.</para>
          </step>

          <step>
            <para>The <maketarget>extract</maketarget> target &eacute; executado.  Procurar&aacute;
              em seu arquivo de distribui&ccedil;&atilde;o do port (tipicamente um gzip'd
              tarball) em <makevar>DISTDIR</makevar> e desempacota-lo dentro de um
              especifico subdiret&oacute;rio tempor&aacute;rio pelo <makevar>WRKDIR</makevar>
              (defaults to <filename>work</filename>).</para>
          </step>

          <step>
            <para>The <maketarget>patch</maketarget> target &eacute; executado.  Primeiro,
              quaisquer patches definidos em <makevar>PATCHFILES</makevar> s&atilde;o
              aplicados.  Segundo, se quaisquer arquivos patch chamados
              <filename>patch-<replaceable>*</replaceable></filename> s&atilde;o encontrados em
              <makevar>PATCHDIR</makevar> (defaults ao
              subdiret&oacute;rio <filename>files</filename>), eles s&atilde;o aplicados neste
              tempo em ordem alfabetica.</para>
          </step>

          <step>
            <para>The <maketarget>configure</maketarget> target &eacute; executado.  Isto
              pode fazer qualquer de v&aacute;rias coisas diferentes.</para>

            <orderedlist>
              <listitem>
                <para>Se existe, <filename>scripts/configure</filename> &eacute;
                  executado.</para>
              </listitem>

              <listitem>
                <para>Se <makevar>HAS_CONFIGURE</makevar> ou
                  <makevar>GNU_CONFIGURE</makevar> &eacute; definido,
                  <filename><makevar>WRKSRC</makevar>/configure</filename> &eacute;
                  executado.</para>
              </listitem>

              <listitem>
                <para>Se <makevar>USE_IMAKE</makevar> &eacute; definido,
                  <makevar>XMKMF</makevar> (default: <command>xmkmf
                    -a</command>) &eacute; executado.</para>
              </listitem>
            </orderedlist>
          </step>

          <step>
            <para>The <maketarget>build</maketarget> target &eacute; executado.  Este &eacute;
              responsavel por ir descendo dentro do diret&oacute;rio de trabalho privado
              do port (<makevar>WRKSRC</makevar>) e construindo-o.  Se
              <makevar>USE_GMAKE</makevar> &eacute; definido, GNU <command>make</command>
              ser&aacute; usado, caso contr&aacute;rio <command>make</command> do sistema
              ser&aacute; usado.</para>
          </step>
        </procedure>

        <para>Acima s&atilde;o as a&ccedil;&otilde;es.  Adicionalmente, voc&ecirc; pode definir
          targets
          <maketarget>pre-<replaceable>something</replaceable></maketarget> ou
          <maketarget>post-<replaceable>something</replaceable></maketarget>,
          ou colocar os scripts com aqueles nomes, no subdiret&oacute;rio
          <filename>scripts</filename>, e eles ser&atilde;o executados antes ou depois das
          a&ccedil;&otilde;es default serem feitas.</para>

        <para>Por exemplo, se voc&ecirc; tem um <maketarget>post-extract</maketarget>
          target definido em seu <filename>Makefile</filename>, e um arquivo
          <filename>pre-build</filename> no subdiret&oacute;rio
          <filename>scripts</filename>, the <maketarget>post-extract</maketarget> target
          ser&aacute; chamado depois das a&ccedil;&otilde;es de extra&ccedil;&atilde;o regular, e o script
          <filename>pre-build</filename> ser&aacute; executado antes das
          regras de constru&ccedil;&atilde;o default serem feitas.  &Eacute; recomendavel que voc&ecirc; use
          <filename>Makefile</filename> targets se as a&ccedil;&otilde;es s&atilde;o simples
          bastante, porque ser&aacute; mais f&aacute;cil para alguem compreender que tipo
          de a&ccedil;&atilde;o non-default o port necessita.</para>

        <para>As a&ccedil;&otilde;es default s&atilde;o feitas pelos
          <filename>bsd.port.mk</filename> targets
          <maketarget>do-<replaceable>something</replaceable></maketarget>.
          Por exemplo, os comandos para extrair um port est&atilde;o no target
          <maketarget>do-extract</maketarget>.  Se voc&ecirc; n&atilde;o est&aacute; feliz com o
          default target, voc&ecirc; pode conserta-lo redefinindo o
          <maketarget>do-<replaceable>something</replaceable></maketarget>
          target em seu <filename>Makefile</filename>.</para>

        <note>
          <para>As <quote>principais</quote> targets (ex.,
            <maketarget>extract</maketarget>,
            <maketarget>configure</maketarget>, etc.) n&atilde;o fazem nada mais que
            certificar todos os est&aacute;gios acima daquele est&atilde;o completos e chama
            os targets ou scripts reais, e eles n&atilde;o intended a ser
            mudados.  Se voc&ecirc; quer consertar a extra&ccedil;&atilde;o, conserte
            <maketarget>do-extract</maketarget>, mas nunca jamais toque
            <maketarget>extract</maketarget>!</para>
        </note>

        <para>Agora que voc&ecirc; entendeu que est&aacute; acontecendo quando o usu&aacute;rios digita
          <command>make</command>, deixe-nos ir atrav&eacute;s dos passos recomendados para
          criar o port perfeito.</para>
      </sect1>

      <sect1 id="slow-sources">
        <title>Obtendo os fontes originais</title>

        <para>Obter os fontes originais (normalmente) como um tarball comprimido
          (<filename><replaceable>foo</replaceable>.tar.gz</filename> ou
          <filename><replaceable>foo</replaceable>.tar.Z</filename>) e copie-o
          dentro <makevar>DISTDIR</makevar>.  Sempre use
          <emphasis>mainstream</emphasis> fontes quando quando e onde voc&ecirc;
          possa.</para>

        <para>Se voc&ecirc; n&atilde;o possa encontrar um site FTP/HTTP que est&aacute; bem-conectado a
          rede, ou pode somente encontrar sites que tenham formatos irritantemente
          n&atilde;o-padr&atilde;o, voc&ecirc; pode querer colocar uma copia em um confiavel servidor
          FTP or HTTP que voc&ecirc; controla (ex., sua home page).  Certifique-se de definir
          <makevar>MASTER_SITES</makevar> a refletir sua escolha.</para>

        <para>Se voc&ecirc; n&atilde;o pode encontrar algo conveniente e confiavel para colocar o
          distfile
          n&oacute;s podemos <quote>house</quote> it ourselves
          em <hostid>ftp.FreeBSD.org</hostid>.
          O distfile tem que colocado dentro
          <filename>~/public_distfiles/</filename> of someone's
          <hostid>freefall</hostid> account.
          Pergunte as pessoa quem commits seu port para fazer isto.
          Esta pessoa tamb&eacute;m definir&aacute; <makevar>MASTER_SITES</makevar> ao
          <makevar>MASTER_SITE_LOCAL</makevar> e
          <makevar>MASTER_SITE_SUBDIR</makevar> ao seu
          <hostid>freefall</hostid> username.</para>

        <para>Se seu distfile do port muda todo tempo por isso n&atilde;o &eacute; boa raz&atilde;o,
          considere colocando o distfile em sua home page e listando-o como
          o primeiro <makevar>MASTER_SITES</makevar>.  Isto empedir&aacute; usu&aacute;rios
          de obterem erros <errorname>checksum mismatch</errorname>, e
          tamb&eacute;m reduzir a carga de trabalho dos mantedores de nosso site ftp.  
          Tamb&eacute;m, se h&aacute; somente um site master para o port, &eacute; recomendado que
          voc&ecirc; aloje um backup em seu site e liste-o como segundo
          <makevar>MASTER_SITES</makevar>.</para>

        <para>Se seu port necessita alguns `patches' adicionais que est&atilde;o
          dispon&iacute;veis na Internet, busca-los tamb&eacute;m e coloca-los em
          <makevar>DISTDIR</makevar>.  N&atilde;o se preocupe se eles virem de um outro
          site de que onde voc&ecirc; obteve o tarball do fonte principal, n&oacute;s temos um
          meio para handle estas situa&ccedil;&otilde;es (veja a descri&ccedil;&atilde;o do <link
            linkend="porting-patchfiles">PATCHFILES</link> abaixo).</para>
      </sect1>

      <sect1 id="slow-modifying">
        <title>Modificando o port</title>

        <para>Desempacote uma copia do tarball em um diret&oacute;rio privado e fa&ccedil;a
          quaisquer muda&ccedil;as que s&atilde;o necess&aacute;rias para obter o port compilar
          corretamente sob the vers&atilde;o atual do FreeBSD.  Keep <emphasis>careful
            track</emphasis> of tudo que voc&ecirc; fez, assim voc&ecirc; estar&aacute; automatizando
          o processo shortly.  Tudo, incluindo o exclus&atilde;o, adi&ccedil;&atilde;o,
          ou modifica&ccedil;&atilde;o dos arquivos deve ser feita usando um arquivo script
          ou patch automatizado quando seu port &eacute; finalizado.</para>

        <para>Se seu port necessita significantes intera&ccedil;&atilde;o/customiza&ccedil;&atilde;o
          para compilar ou instalar, voc&ecirc; deve procurar um dos scripts cl&aacute;ssicos
          do Larry Wall<application>Configure</application> scripts e perhaps faz
          algo similar si mesmo.  A meta das novas cole&ccedil;&atilde;o de ports &eacute;
          fazer cada port como <quote>plug-and-play</quote> assim possivel para o
          usu&aacute;rio-final enquanto usando o minimo de espa&ccedil;o de disco.</para>

        <note>
          <para>Ao menos explicitamente stated, arquivos patch, scripts, e outros
            arquivos voc&ecirc; criou e contribuiu a cole&ccedil;&atilde;o de ports do FreeBSD
            est&atilde;o assumidos a ser cobertos pelas condi&ccedil;&otilde;es padr&otilde;es do
            BSD copyright.</para>
        </note>
      </sect1>

      <sect1 id="slow-patch">
        <title>Patching</title>

        <para>Na prepara&ccedil;&atilde;o do port, arquivos que foram adicionados ou
          mudados podem ser picked up com um recursivo &man.diff.1;
          para depois feeding to &man.patch.1;.  Cada conjunto de patches que voc&ecirc;
          deseja aplicar deve ser coletado um arquivo chamado
          <filename>patch-<replaceable>*</replaceable></filename> onde
          <replaceable>*</replaceable> denotas a sequencia em qual os
          patches ser&atilde;o aplicados &mdash; estes s&atilde;o feitos em
          <emphasis>ordem alfabetica</emphasis>, assim <literal>aa</literal>
          primeiro, <literal>ab</literal> segundo e assim por diante.  Se voc&ecirc; deseja,
          voc&ecirc; pode usar nomes que indicam os pathnames dos arquivos que
          s&atilde;o patched, como <filename>patch-Imakefile</filename> ou
          <filename>patch-src-config.h</filename>.  Estes arquivos devem
          ser armazenados em <makevar>PATCHDIR</makevar>, de onde eles ser&atilde;o
          automaticamente aplicados.  Todos patches devem ser relativos ao
          <makevar>WRKSRC</makevar> (normalmente o diret&oacute;rio que seu tarball do port
          se desempacota dentro, que estando onde a constru&ccedil;&atilde;o &eacute; feita).
          Para fazer consertos e melhorias facilmente, voc&ecirc; deve evitar ter mais
          de um patch de conserto do mesmo arquivo (ex., <filename>patch-aa</filename> e
          <filename>patch-ab</filename> ambos mudando
          <filename><makevar>WRKSRC</makevar>/foobar.c</filename>).</para>

        <para>N&atilde;o coloque RCS strings nos patches.  CVS mutilar&aacute;-los quando n&oacute;s
          colocamos os arquivos dentro da arvore do ports, e quando n&oacute;s verificamos-as sa&iacute;das novamente,
          eles sair&atilde;o diferentes e o patch falhar&aacute;.  RCS strings
          s&atilde;o cercadas por sinais de dollar (<literal>&dollar;</literal>), e
          tipicamente inicia com <literal>&dollar;Id</literal> ou
          <literal>&dollar;RCS</literal>.</para>

        <para>Usando o recurso op&ccedil;&atilde;o (<option>-r</option>) para
          &man.diff.1; gerar patches &eacute; sutil, mas por favor de olhe
          a look at the resulting patches para certificar-se que voc&ecirc; n&atilde;o tem nada
          desnecess&aacute;rio junk em l&aacute;.  Em particular, diffs entre dois arquivos
          backup, <filename>Makefile</filename>s quando o port usa
          <command>Imake</command> ou GNU <command>configure</command>, etc.,
          s&atilde;o desnecess&aacute;rios e devem ser apagados.  Se voc&ecirc; teve que editar
          <filename>configure.in</filename> e executar
          <command>autoconf</command> para gerar
          <command>configure</command>, n&atilde;o pegue os diffs do
          <command>configure</command> (frequentemente cresce algumas milhares de
          linhas!); defina <literal>USE_AUTOCONF=yes</literal> e pegue os
          diffs do <filename>configure.in</filename>.</para>

        <para>Tamb&eacute;m, se voc&ecirc; teve que apagar um arquivo, ent&atilde;o voc&ecirc; pode faze-lo no
          <maketarget>post-extract</maketarget> target rather than as part of
          the patch.  Uma vez voc&ecirc; est&aacute; feliz com o resulting diff, por favor divida-o
          dentro de um arquivo fonte por arquivo patch.</para>
      </sect1>

      <sect1 id="slow-configure">
        <title>Configurando</title>

        <para>Incluir quaisquer comandos adicionais de customiza&ccedil;&otilde;es em seu
          script <filename>configure</filename> e salva-o no subdiret&oacute;rio
          <filename>scripts</filename>.  Como mencionado acima, voc&ecirc;
          pode tamb&eacute;m fazer isto com <filename>Makefile</filename> targets e/ou
          scripts com o nome <filename>pre-configure</filename> ou
          <filename>post-configure</filename>.</para>
      </sect1>

      <sect1 id="slow-user-input">
        <title>Manuseando a entrada do usu&aacute;rio</title>

        <para>Se seu port necessita de entrada do usu&aacute;rio para construir, configurar, ou instalar,
          ent&atilde;o defina <makevar>IS_INTERACTIVE</makevar> em seu <filename>Makefile</filename>.  Isto
          permitir&aacute;  <quote>overnight builds</quote> para skip seu port se as
          defini&ccedil;&otilde;es do usu&aacute;rio vari&aacute;vel <envar>BATCH</envar> em seu ambiente (e
          se o usu&aacute;rio define a vari&aacute;vel <envar>INTERACTIVE</envar>, ent&atilde;o
          <emphasis>somente</emphasis> aqueles ports necessintando intera&ccedil;&atilde;o s&atilde;o
          construido).</para>

        <para>&Eacute; tamb&eacute;m recomendado que se h&aacute; respostas razo&aacute;veis default
          para as perguntas, voc&ecirc; deve verificar a vari&aacute;vel
          <makevar>PACKAGE_BUILDING</makevar> e desativar o
          iscript interativo quando ele &eacute; definido.  Isto permitir&aacute;-nos construir os
          pacotes aos CDROMs e FTP.</para>
      </sect1>
    </chapter>

    <chapter id="makefile">
      <title>Configurando o Makefile</title>

      <para>Configurando o <filename>Makefile</filename> e bastante simples, e novamente n&oacute;s sugerimos
        que voc&ecirc; olhe em exemplos existentes antes de iniciar. Tamb&eacute;m, h&aacute; 
        <link linkend="porting-samplem">exemplo de Makefile</link> neste
        manual, assim de um olhada e por favor siga as orderns das vari&aacute;veis
        ae se&ccedil;&otilde;es naquele template para fazer seu port facilmente para outros
        lerem.</para>

      <para>Agora, considerando os seguintes problemas em sequencia como voc&ecirc; design
        seu novo <filename>Makefile</filename>:</para>

      <sect1 id="makefile-source">
        <title>>O fonte original</title>

        <para>Ele mora em <makevar>DISTDIR</makevar> como em um padr&atilde;o
	  gzip'd tarball chamado algo como
	  <filename>foozolix-1.2.tar.gz</filename>? Se sim, voc&ecirc; pode ir ao
	  ao pr&oacute;ximo passo.  Se n&atilde;o, voc&ecirc; deve olhar em sobrescrevendo qualquer das
	  vari&aacute;veis <makevar>DISTNAME</makevar>, <makevar>EXTRACT_CMD</makevar>,
	  <makevar>EXTRACT_BEFORE_ARGS</makevar>,
	  <makevar>EXTRACT_AFTER_ARGS</makevar>,
	  <makevar>EXTRACT_SUFX</makevar>, ou <makevar>DISTFILES</makevar>,
	  dependendo em como alien um formato a seu arquivo distribui&ccedil;&atilde;o
	  &eacute;.  (O mais caso comum &eacute;
	  <literal>EXTRACT_SUFX=.tar.Z</literal>, quando o tarball est&aacute;
	  condensado regularmente <command>compress</command>, n&atilde;o
	  <command>gzip</command>.)</para>

        <para>No pior caso, voc&ecirc; pode simplesmente criar seu pr&oacute;prio
	  <maketarget>do-extract</maketarget> target para sobrescrever o
	  default, embora este deve ser raramente, se for,
	  necess&aacute;rio.</para>
      </sect1>
    
    <sect1 id="makefile-naming">
      <title>Nomeando</title>

      <para>A primeira parte do <filename>Makefile</filename> do port nomeia
	o port, descreve seu n&uacute;mero da vers&atilde;o, e lista-os na categoria
	correta.</para>

      <sect2>
        <title><makevar>PORTNAME</makevar> and <makevar>PORTVERSION</makevar></title>

        <para>Voc&ecirc; deve definir <makevar>PORTNAME</makevar> ao
          nome da base de seu port, e <makevar>PORTVERSION</makevar>
          ao n&uacute;mero da vers&atilde;o do port.</para>
      </sect2>

      <sect2>
	<title><makevar>PORTREVISION</makevar> e
	  <makevar>PORTEPOCH</makevar></title>

	<sect3>
	  <title><makevar>PORTREVISION</makevar></title>

	  <para>A vari&aacute;vel <makevar>PORTREVISION</makevar> &eacute; uma
	    monotonically aumentando o valor qual &eacute; redefinido a 0 com
	    cada aumento da <makevar>PORTVERSION</makevar> (ex.
	    cada vez que um oficial vendor release &eacute; feita), e
	    appended ao nome do pacote se n&atilde;o-zero.
	    <makevar>PORTREVISION</makevar> &eacute; aumentado cada vez que
	    uma mudan&ccedil;a &eacute; feita ao port do FreeBSD qual significantemente
	    afeta o conte&uacute;do ou estutura dos pacotes
	    derivados.</para>

	  <para>Exemplos de quando <makevar>PORTREVISION</makevar>
	    deve ser bumped:</para>

	  <itemizedlist>
	    <listitem>
	      <para>Adi&ccedil;&atilde;o de patches para corrigir as vulnerabilidades
		de seguran&ccedil;a, bugs, ou para adicionar novas funcionalidades ao
		port do FreeBSD.</para>
	    </listitem>

	    <listitem>
	      <para>Mudan&ccedil;as ao <filename>Makefile</filename> do port para abilitar ou disabilitar
		op&ccedil;&otilde;es no tempo de compila&ccedil;&atilde;o no pacote.</para>
	    </listitem>

	    <listitem>
	      <para>Mudan&ccedil;as na lista de empacotamento ou no tempo-da-instala&ccedil;&atilde;o
		comportamento do pacote (ex. mudan&ccedil;a ao script
		qual gera initial data para o pacote, como chaves ssh do
		host).</para>
	    </listitem>

	    <listitem>
	      <para>Version bump de umas dependencias da biblioteca
		compartilhada do port (neste caso, alguem tentando instalar o pacote
		antigo depois da instalado uma nova vers&atilde;o da
		dependencia falhar&aacute; desde que ele procurar o antigo
		libfoo.x ao inv&eacute;s de libfoo.(x+1)).</para>
	    </listitem>

	    <listitem>
	      <para>Silent changes ao distfile do port qual tem
		significantes diferen&ccedil;as funcionais, ex. mudan&ccedil;as ao
		distfile necessitando de uma corre&ccedil;&atilde;o ao
		<filename>distinfo</filename> com mudan&ccedil;a n&atilde;o correspondente ao
		<makevar>PORTVERSION</makevar>, onde um <command>diff
		-ru</command> do antigo e novas vers&otilde;es mostra
		mudan&ccedil;as n&atilde;o-triviais ao c&oacute;digo.</para>
	    </listitem>
	  </itemizedlist>

	  <para>Exemplos de mudan&ccedil;as qual n&atilde;o necessitam uma
	    <makevar>PORTREVISION</makevar> bump:</para>

	  <itemizedlist>
	    <listitem>
	      <para>Mudan&ccedil;as de estilo ao esqueleto do port com mudan&ccedil;as
		n&atilde;o funcionais para que apare&ccedil;am no pacote
		resultante.</para>
	    </listitem>

	    <listitem>
	      <para>Mudan&ccedil;as ao <makevar>MASTER_SITES</makevar> ou
		outras mudan&ccedil;as funcionais ao port qual n&atilde;o
		afeta o pacote resultante.</para>
	    </listitem>

	    <listitem>
	      <para>Trivial patches ao distfile como corre&ccedil;&atilde;o
		de typos, qual n&atilde;o s&atilde;o suficiente importante que usu&aacute;rios
		do pacote devem ir a problemas de
		upgrading.</para>
	    </listitem>

	    <listitem>
	      <para>Build fixes qual causa uma pacote torna-se
		compil&aacute;vel onde ele estava anteriormente falhando (as long as
		as mudan&ccedil;as n&atilde;o introduziram quaisquer mudan&ccedil;as funcionais em
		quaisquer outras platformas em qual o port foi construido
		anteriormente). Desde <makevar>PORTREVISION</makevar> reflita
		o conte&uacute;do do pacote, se nenhum pacote foi
		anteriormente contrutivel ent&atilde;o n&atilde;o h&aacute; necessidade para aumentar
		<makevar>PORTREVISION</makevar> para marcar uma
		mudan&ccedil;a.</para>
	    </listitem>
	  </itemizedlist>

	  <para>Uma regra do thumb &eacute; perguntar a si mesmo se uma mudan&ccedil;a
	    committed a um port &eacute; algo qual alguem, algum local,
	    would benefit from having (either because of an
	    enhancement, fix, or by virtue that the new package will
	    actually work for them). If yes, the
	    <makevar>PORTREVISION</makevar> should be bumped so that
	    automated tools (e.g.  &man.pkg.version.1;)
	    ir&aacute; highlight o fata que um novo pacote est&aacute;
	    dispon&iacute;vel.</para>
	</sect3>

	<sect3>
	  <title><makevar>PORTEPOCH</makevar></title>

	  <para>De tempos em tempos um software vendor ou porter do FreeBSD
	    far&aacute; algo silly e release uma vers&atilde;o de seus
	    software qual est&aacute; atualmente numericamente abaixo da
	    vers&atilde;o anterior. Um exemplo disto &eacute; um port qual foi
	    de foo-20000801 para foo-1.0 (o former ser&aacute;
	    tratado incorretamente como uma vers&atilde;o mais nova desde 20000801 &eacute; um
	    valor numericamente superior que 1).</para>

	  <para>Em situa&ccedil;&otilde;es como esta, a vers&atilde;o
	    <makevar>PORTEPOCH</makevar> deve ser aumentada.
	    Se <makevar>PORTEPOCH</makevar> &eacute; n&atilde;o-zero ele &eacute; appended
	    ao nome do pacote como descrito na se&ccedil;&atilde;o 0 acima.
	    <makevar>PORTEPOCH</makevar> nunca &eacute; diminuido ou redefinido
	    a zero, porque aquilo causaria compara&ccedil;&atilde;o a um pacote
	    de um anterior epoch a falhar (ex. o pacote n&atilde;o seria
	    detectado como fora de data): o novo numero de vers&atilde;o (ex.
	    <literal>1.0,1</literal> no exemplo acima) &eacute; ainda
	    numericamente menor que a vers&atilde;o anterior (2000801), mas
	    ferramentas automatizadas e encontradas para ser maior que o implica
	    sufixo <literal>,0</literal> no pacote anterior.</para>

	  <para>&Eacute; esperado que <makevar>PORTEPOCH</makevar> n&atilde;o ser&aacute;
	    usado pela maioria dos ports, e que sensivel
	    uso do <makevar>PORTVERSION</makevar> pode frequentemente pre-empt
	    ele tornando-se necess&aacute;rio se uma futura release do software
	    deve mudar a estrutura da vers&atilde;o. Entretanto, cuidado &eacute;
	    necess&aacute;rio pelos porters do FreeBSD quando um vendor release &eacute; feito
	    sem um n&uacute;mero de vers&atilde;o oficial &mdash; como um c&oacute;digo
	    <quote>snapshot</quote> release.  A tenta&ccedil;&atilde;o &eacute; rotular a
	    release com a data da release, qual causar&aacute; problemas
	    assim no exemplo acima quando uma nova release <quote>oficial</quote> &eacute;
	    feita.</para>

	  <para>Por exemplo, se um snapshot release &eacute; feita na data
	    20000917, e a vers&atilde;o anterior do software foi a
	    vers&atilde;o 1.2, a snapshot release deve ser dada a
	    <makevar>PORTVERSION</makevar> de 1.2.20000917 ou similar,
	    n&atilde;o 20000917, assim que a posterior release, diz 1.3, &eacute;
	    ainda um valor numericamente superior.</para>
	</sect3>

	<sect3>
	  <title>Exemplo de uso do <makevar>PORTREVISION</makevar> e
	    <makevar>PORTEPOCH</makevar></title>

	  <para>O port <literal>gtkmumble</literal>, vers&atilde;o
	    <literal>0.10</literal>, &eacute; committed a cole&ccedil;&atilde;o de
	    ports:</para>

	  <programlisting>PORTNAME=	gtkmumble
PORTVERSION=	0.10</programlisting>

	  <para><makevar>PKGNAME</makevar> torna-se
	    <literal>gtkmumble-0.10</literal>.</para>

	  <para>Um buraco na seguran&ccedil;a &eacute; descoberto qual necessita um patch
	    local do FreeBSD. <makevar>PORTREVISION</makevar> &eacute; bumped
	    de modo devido.</para>

	  <programlisting>PORTNAME=	gtkmumble
PORTVERSION=	0.10
PORTREVISION=	1</programlisting>

	  <para><makevar>PKGNAME</makevar> torna-se
	    <literal>gtkmumble-0.10_1</literal></para>

	  <para>Uma nova vers&atilde;o &eacute; released pelo vendor, numerada <literal>0.2</literal>
	    (it turns out the author actually intended
	    <literal>0.10</literal> para atualmente mean
	    <literal>0.1.0</literal>, n&atilde;o <quote>que vem depois
	      0.9</quote> - oops, t&atilde;o tarde agora). Desde o novo minor
	    version <literal>2</literal> &eacute; numericamente abaixo que a
	    vers&atilde;o anterior <literal>10</literal> o
	    <makevar>PORTEPOCH</makevar> tem que ser bumped para for&ccedil;ar
	    manualmente o novo pacote ser apagado como <quote>newer</quote>. Desde que ele
	    &eacute; um novo vendor release do c&oacute;digo,
	    <makevar>PORTREVISION</makevar> &eacute; redefinido a 0 (ou removido
	    do <filename>Makefile</filename>).</para>

	  <programlisting>PORTNAME=	gtkmumble
PORTVERSION=	0.2
PORTEPOCH=	1</programlisting>

	  <para><makevar>PKGNAME</makevar> torna-se
	    <literal>gtkmumble-0.2,1</literal></para>

	  <para>A pr&oacute;xima release &eacute; 0.3. Desde
	    <makevar>PORTEPOCH</makevar> nunca diminuiu, as vari&aacute;veis
	     vers&atilde;o s&atilde;o agora:</para>
	    
	  <programlisting>PORTNAME=	gtkmumble
PORTVERSION=	0.3
PORTEPOCH=	1</programlisting>

	  <para><makevar>PKGNAME</makevar> torna-se
	    <literal>gtkmumble-0.3,1</literal></para>

          <note>
            <para>Se <makevar>PORTEPOCH</makevar> foi redefinido
              a <literal>0</literal> com esta melhoria, alguem que tinha
              instalado o pacote <literal>gtkmumble-0.10_1</literal> n&atilde;o detectaria
              o pacote <literal>gtkmumble-0.3</literal> como mais novo, desde
              <literal>3</literal> &eacute; ainda numericmente menor que
              <literal>10</literal>.</para>
	  </note>
        </sect3>
      </sect2>

      <sect2>
        <title><makevar>PKGNAMEPREFIX</makevar> e <makevar>PKGNAMESUFFIX</makevar></title>

	<para>Duas vari&aacute;veis opcionais, <makevar>PKGNAMEPREFIX</makevar> e
	  <makevar>PKGNAMESUFFIX</makevar>, s&atilde;o combinadas com
	  <makevar>PORTNAME</makevar> e
	  <makevar>PORTVERSION</makevar> ao 
          form <makevar>PKGNAME</makevar> assim
          <literal>${PKGNAMEPREFIX}${PORTNAME}${PKGNAMESUFFIX}-${PORTVERSION}</literal>.
          Certifique-se que este conforme ao nossa orienta&ccedil;&atilde;o <link
          linkend="porting-pkgname"> para um bom nome de
          pacote</link>.  Em particular, voce n&atilde;o est&aacute; permitido a usar um
          h&iacute;fen (<literal>-</literal>) em
          <makevar>PORTVERSION</makevar>.  Tamb&eacute;m, se o nome do pacote
          tem a <replaceable>language-</replaceable> ou o
          <replaceable>-compiled.specifics</replaceable> part, use
          <makevar>PKGNAMEPREFIX</makevar> e
          <makevar>PKGNAMESUFFIX</makevar>, respectivamentes.  N&atilde;o fa&ccedil;a-os
          parte do <makevar>PORTNAME</makevar>.</para>
      </sect2>

    <sect2 id="porting-pkgname">
      <title>Package Naming Conventions</title>

      <para>Os seguintes s&atilde;o as conven&ccedil;&otilde;es que voce deve seguir nomeando seus
        pacotes.  Isto &eacute; ter nosso diret&oacute;rio de pacote f&aacute;cil de scan, como
        h&aacute; j&aacute; muitos e muitos de pacotes e usu&aacute;rios are going to
        turn away se eles ferirem seus olhos!</para>

      <para>O nome do pacote deve parecer como
        <filename><replaceable><optional>language<optional>_region</optional></optional>-name<optional><optional>-</optional>compiled.specifics</optional>-version.numbers</replaceable></filename>.</para>

      <para>O nome do pacote &eacute; definido como
        <literal>${PKGNAMEPREFIX}${PORTNAME}${PKGNAMESUFFIX}-${PORTVERSION}</literal>.
        Certifique-se de definir as vari&aacute;veis to conform a aquele fornato.</para>

      <orderedlist>
        <listitem>
          <para>FreeBSD strives suportar a lingua nativa de seus usu&aacute;rios.
            A parte <replaceable>language-</replaceable> deve ser a abrevia&ccedil;&atilde;o
            de duas letras da lingua natural definida pelo ISO-639 se
            o port &eacute; especifico a uma certa lingua.  Exemplos s&atilde;o
            <literal>ja</literal> para Japones, <literal>ru</literal> para
            Russo, <literal>vi</literal> para Vietnames,
            <literal>zh</literal> para Chines, <literal>ko</literal> para
            Koreano e <literal>de</literal> para Alem&atilde;o.</para>

	  <para>Se o port &eacute; especifica a certa regi&atilde;o within the
            language area, adicione as duas letras do c&oacute;digo do pa&iacute;s bem assim.
            Examples are <literal>en_US</literal> for US English and
            <literal>fr_CH</literal> para Swiss French.</para>

          <para>A parte <replaceable>language-</replaceable> deve
            ser definida na vari&aacute;vel <makevar>PKGNAMEPREFIX</makevar>.</para>
        </listitem>

        <listitem>
          <para>A primeira letra da parte do <filename>nome</filename>
            deve ser lowercase.  (O resto do nome pode conter
            letras capitais, assim use sua pr&oacute;pria descri&ccedil;&atilde;o quando voce est&aacute;
            convertendo um nome de software que tem algumas letras capitais nela.)
            H&aacute; uma tradi&ccedil;&atilde;o de nameamento de m&oacute;dulos <literal>perl 5</literal> por
            prepending <literal>p5-</literal> e convertendo o separador
            dois-pontos a um h&iacute;fen; por exemplo, o
            m&oacute;dulo <literal>Data::Dumper</literal> torna-se
            <literal>p5-Data-Dumper</literal>.  Se o software em quest&atilde;o
            tem n&uacute;meros, h&iacute;fens, ou underscores em seu nome, voce pode inclui-los
            bem assim (como <literal>kinput2</literal>).</para>
        </listitem>

        <listitem>
          <para>Se o port pode ser construido com diferentes <link
              linkend="porting-masterdir">hardcoded defaults</link> (normalmente
            parte do nome do diret&oacute;rio na familia do ports), a
            parte <replaceable>-compiled.specifics</replaceable> deve state
            the compiled-in defaults (o h&iacute;fen &eacute; opcional).  Exemplos s&atilde;o
            tamanho de papel e unidades de fontes.</para>

          <para>A parte <replaceable>-compiled.specifics</replaceable>
            deve ser definido na vari&aacute;vel
            <makevar>PKGNAMESUFFIX</makevar>.</para>
        </listitem>

        <listitem>
          <para>A string da vers&atilde;o deve seguir um dash
            (<literal>-</literal>) e ser um separada-po-periodo lista de
            inteiros e single lowercase alphabetics.  Em particular,
            n&atilde;o &eacute; permissivel ter um outro dash dentro da string
            da vers&atilde;o.  A &uacute;nica exece&ccedil;&atilde;o &eacute; a string
            <literal>pl</literal> (meaning <quote>patchlevel</quote>), qual pode ser
            usada <emphasis>somente</emphasis> quando n&atilde;o h&aacute; numeros de vers&atilde;o
            maior e menor no software.  Se a vers&atilde;o
            do software tem strings como <quote>alpha</quote>, <quote>beta</quote>, <quote>rc</quote>, ou <quote>pre</quote>, pegue
            a primeira letra e coloque-a imediatamente depois de um periodo.
            Se a string da vers&atilde;o continua depois daqueles nomes, os
            numeros devem seguir o alfabeto somente sem um periodo extra
            entre eles.</para>

          <para>A id&eacute;ia &eacute; faze-lo mais f&aacute;cil para sortir os ports considerando
            a string da vers&atilde;o.  Em particular, certifique-se que o numero da vers&atilde;o
            dos componentes est&atilde;o sempre delimitados por um periodo, e
            se a data &eacute; parte  da string, use o formato
            <literal><replaceable>yyyy</replaceable>.<replaceable>mm</replaceable>.<replaceable>dd</replaceable></literal>
            , n&atilde;o
            <literal><replaceable>dd</replaceable>.<replaceable>mm</replaceable>.<replaceable>yyyy</replaceable></literal>
            ou a n&atilde;o-Y2K compliant
            <literal><replaceable>yy</replaceable>.<replaceable>mm</replaceable>.<replaceable>dd</replaceable></literal>
            format.</para>
        </listitem>
      </orderedlist>

      <para>Aqui est&aacute; alguns exemplos (reais) em como converter o nome
        assim chamado pelos autores do software a um nome de pacote
         suitable:</para>

      <informaltable frame="none">
        <tgroup cols="6">
          <thead>
            <row>
              <entry>Distribution Name</entry>
              <entry><makevar>PKGNAMEPREFIX</makevar></entry>
              <entry><makevar>PORTNAME</makevar></entry>
              <entry><makevar>PKGNAMESUFFIX</makevar></entry>
              <entry><makevar>PORTVERSION</makevar></entry>
              <entry>Reason</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>mule-2.2.2</entry>
              <entry>(empty)</entry>
              <entry>mule</entry>
              <entry>(empty)</entry>
              <entry>2.2.2</entry>
              <entry>No changes required</entry>
            </row>

            <row>
              <entry>XFree86-3.3.6</entry>
              <entry>(empty)</entry>
              <entry>XFree86</entry>
              <entry>(empty)</entry>
              <entry>3.3.6</entry>
              <entry>No changes required</entry>
            </row>

            <row>
              <entry>EmiClock-1.0.2</entry>
              <entry>(empty)</entry>
              <entry>emiclock</entry>
              <entry>(empty)</entry>
              <entry>1.0.2</entry>
              <entry>No uppercase names for single programs</entry>
            </row>

            <row>
              <entry>rdist-1.3alpha</entry>
              <entry>(empty)</entry>
              <entry>rdist</entry>
              <entry>(empty)</entry>
              <entry>1.3.a</entry>
              <entry>No strings like <literal>alpha</literal>
                allowed</entry>
            </row>

            <row>
              <entry>es-0.9-beta1</entry>
              <entry>(empty)</entry>
              <entry>es</entry>
              <entry>(empty)</entry>
              <entry>0.9.b1</entry>
              <entry>No strings like <literal>beta</literal>
                allowed</entry>
            </row>

            <row>
              <entry>mailman-2.0rc3</entry>
              <entry>(empty)</entry>
              <entry>mailman</entry>
              <entry>(empty)</entry>
              <entry>2.0.r3</entry>
              <entry>No strings like <literal>rc</literal>
                allowed</entry>
            </row>

            <row>
              <entry>v3.3beta021.src</entry>
              <entry>(empty)</entry>
              <entry>tiff</entry>
              <entry>(empty)</entry>
              <entry>3.3</entry>
              <entry>What the heck was that anyway?</entry>
            </row>

            <row>
              <entry>tvtwm</entry>
              <entry>(empty)</entry>
              <entry>tvtwm</entry>
              <entry>(empty)</entry>
              <entry>pl11</entry>
              <entry>Version string always required</entry>
            </row>

            <row>
              <entry>piewm</entry>
              <entry>(empty)</entry>
              <entry>piewm</entry>
              <entry>(empty)</entry>
              <entry>1.0</entry>
              <entry>Version string always required</entry>
            </row>

            <row>
              <entry>xvgr-2.10pl1</entry>
              <entry>(empty)</entry>
              <entry>xvgr</entry>
              <entry>(empty)</entry>
              <entry>2.10.1</entry>
              <entry><literal>pl</literal> allowed only when no
                major/minor version numbers</entry>
            </row>

            <row>
              <entry>gawk-2.15.6</entry>
              <entry>ja-</entry>
              <entry>gawk</entry>
              <entry>(empty)</entry>
              <entry>2.15.6</entry>
              <entry>Japanese language version</entry>
            </row>

            <row>
              <entry>psutils-1.13</entry>
              <entry>(empty)</entry>
              <entry>psutils</entry>
              <entry>-letter</entry>
              <entry>1.13</entry>
              <entry>Papersize hardcoded at package build time</entry>
            </row>

            <row>
              <entry>pkfonts</entry>
              <entry>(empty)</entry>
              <entry>pkfonts</entry>
              <entry>300</entry>
              <entry>1.0</entry>
              <entry>Package for 300dpi fonts</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>Se h&aacute; absolutamnete nenhum tra&ccedil;o da informa&ccedil;&atilde;o da vers&atilde;o no
        fonte original e ele &eacute; unlikely original que o autor sempre liberar&aacute;
        uma outra vers&atilde;o, s&oacute; defina a string da vers&atilde;o a
        <literal>1.0</literal> (como o <literal>piewm</literal> exemplo acima).  Caso contr&aacute;rio, pergunte
        o autor do original ou use a string da data
        (<literal><replaceable>yyyy</replaceable>.<replaceable>mm</replaceable>.<replaceable>dd</replaceable></literal>)
	as the version.</para>
    </sect2>
    </sect1>

    <sect1 id="makefile-categories">
      <title>Categorization</title>

      <sect2>
        <title><makevar>CATEGORIES</makevar></title>

        <para>Quando um pacote &eacute; criado, ele &eacute; colocado baixo de
          <filename>/usr/ports/packages/All</filename> e links s&atilde;o feitos de
          um ou mais subdiret&oacute;rios do
          <filename>/usr/ports/packages</filename>.  Os nomes destes
          subdiret&oacute;rios s&atilde;o especificados pela vari&aacute;vel
          <makevar>CATEGORIES</makevar>.  It is intended to fazer a vida mais f&aacute;cil
          para os usu&aacute;rios quando ele est&aacute; andando na pilha de pacotes no
          site FTP ou CDROM.  Por favor take a look at the existing <link
            linkend="porting-categories">categories</link> and pick the ones
          that are suitable para seu port.</para>

        <para>Esta lista tamb&eacute;m determina onde na arvore do ports o port  est&aacute;
          importado.  Se voc&ecirc; colocar mais que uma categoria aqui, it &eacute; assumed
          that os arquivos do port ser&atilde;o colocados no subdiret&oacute;rio com o nome na
          primeira categoria.  Veja a se&ccedil;&atilde;o <link
            linkend="porting-categories">categories</link> para mais
          discuss&otilde;es sobre como escolher as categorias certas.</para>

        <para>Se seu port realmente pertence a algo que &eacute; diferente de
          todos os existentes, voc&ecirc; pode at&eacute; criar uma novo nome da categoria.  Nesse
          caso, por favor envie um mail para os &a.ports; para propor uma nova
          categoria.</para>
      </sect2>

      <sect2 id="porting-categories">
        <title>Lista atual das categorias</title>

        <para>Primeiro, esta &eacute; a lista atual de categorias dos ports.  Aquelas
          marcadas com um asterisco (<literal>*</literal>) s&atilde;o
          categorias&mdash; <emphasis>virtuais</emphasis> aquelas que n&atilde;o teem
          um subdiret&oacute;rio correspondente na arvore do ports.</para>

        <note>
          <para>Para categorias n&atilde;o-virtuais, voc&ecirc; encontrar&aacute; uma
            descri&ccedil;&atilde;o de uma-linha no arquivo <filename>pkg/COMMENT</filename> naquele
            subdiret'rrio (ex.,
            <filename>archivers/pkg/COMMENT</filename>).</para>
        </note>

        <informaltable frame="none">
          <tgroup cols="2">
            <thead>
              <row>
                <entry>Category</entry>
                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><filename>accessibility*</filename></entry>
                <entry>Ports to help disabled users.</entry>
              </row>

              <row>
                <entry><filename>afterstep*</filename></entry>
                <entry>Ports to support the AfterStep window manager.</entry>
              </row>

              <row>
                <entry><filename>arabic</filename></entry>
                <entry>Arabic language support.</entry>
              </row>

              <row>
                <entry><filename>archivers</filename></entry>
                <entry>Archiving tools.</entry>
              </row>

              <row>
                <entry><filename>astro</filename></entry>
                <entry>Astronomical ports.</entry>
              </row>

              <row>
                <entry><filename>audio</filename></entry>
                <entry>Sound support.</entry>
              </row>

              <row>
                <entry><filename>benchmarks</filename></entry>
                <entry>Benchmarking utilities.</entry>
              </row>

              <row>
                <entry><filename>biology</filename></entry>
                <entry>Biology-related software.</entry>
              </row>

              <row>
                <entry><filename>cad</filename></entry>
                <entry>Computer aided design tools.</entry>
              </row>

              <row>
                <entry><filename>chinese</filename></entry>
                <entry>Chinese language support.</entry>
              </row>

              <row>
                <entry><filename>comms</filename></entry>
                <entry>Communication software.  Mostly software to talk to
                  your serial port.</entry>
              </row>

              <row>
                <entry><filename>converters</filename></entry>
                <entry>Character code converters.</entry>
              </row>

              <row>
                <entry><filename>databases</filename></entry>
                <entry>Databases.</entry>
              </row>

              <row>
                <entry><filename>deskutils</filename></entry>
                <entry>Things that used to be on the desktop before
                  computers were invented.</entry>
              </row>

              <row>
                <entry><filename>devel</filename></entry>
                <entry>Development utilities.  Do not put libraries here just
                  because they are libraries&mdash;unless they truly do not
                  belong anywhere else, they should not be in this
                  category.</entry>
              </row>

	      <row>
		<entry><filename>dns</filename></entry>
		<entry>DNS-related software.</entry>
	      </row>
	      
              <row>
                <entry><filename>editors</filename></entry>
                <entry>General editors.  Specialized editors go in the section
                  for those tools (e.g., a mathematical-formula editor will go
                  in <filename>math</filename>).</entry>
              </row>

              <row>
                <entry><filename>elisp*</filename></entry>
                <entry>Emacs-lisp ports.</entry>
              </row>

              <row>
                <entry><filename>emulators</filename></entry>
                <entry>Emulators for other operating systems.  Terminal
                  emulators do <emphasis>not</emphasis> belong
                  here&mdash;X-based ones should go to
                  <filename>x11</filename> and text-based ones to either
                  <filename>comms</filename> or <filename>misc</filename>,
                  depending on the exact functionality.</entry>
              </row>

              <row>
                <entry><filename>finance</filename></entry>
                <entry>Monetary, financial and related applications.</entry>
              </row>

              <row>
                <entry><filename>french</filename></entry>
                <entry>French language support.</entry>
              </row>

              <row>
                <entry><filename>ftp</filename></entry>
                <entry>FTP client and server utilities.  If your
                  port speaks both FTP and HTTP, put it in
                  <filename>ftp</filename> with a secondary
                  category of <filename>www</filename>.</entry>
              </row>

              <row>
                <entry><filename>games</filename></entry>
                <entry>Games.</entry>
              </row>

              <row>
                <entry><filename>german</filename></entry>
                <entry>German language support.</entry>
              </row>

              <row>
                <entry><filename>gnome*</filename></entry>
                <entry>Ports from the GNU Object Model Environment (GNOME)
                  Project.</entry>
              </row>

              <row>
                <entry><filename>graphics</filename></entry>
                <entry>Graphics utilities.</entry>
              </row>

              <row>
                <entry><filename>haskell*</filename></entry>
                <entry>Software related to the Haskell language.</entry>
              </row>

              <row>
                <entry><filename>hebrew</filename></entry>
                <entry>Hebrew language support.</entry>
              </row>

              <row>
                <entry><filename>hungarian</filename></entry>
                <entry>Hungarian language support.</entry>
              </row>

              <row>
                <entry><filename>ipv6*</filename></entry>
                <entry>IPv6 related software.</entry>
              </row>

              <row>
                <entry><filename>irc</filename></entry>
                <entry>Internet Relay Chat utilities.</entry>
              </row>

              <row>
                <entry><filename>japanese</filename></entry>
                <entry>Japanese language support.</entry>
              </row>

              <row>
                <entry><filename>java</filename></entry>
                <entry>Software related to the Java language.</entry>
              </row>

              <row>
                <entry><filename>kde*</filename></entry>
                <entry>Ports from the K Desktop Environment (KDE)
                  Project.</entry>
              </row>

              <row>
                <entry><filename>korean</filename></entry>
                <entry>Korean language support.</entry>
              </row>

              <row>
                <entry><filename>lang</filename></entry>
                <entry>Programming languages.</entry>
              </row>

              <row>
                <entry><filename>linux*</filename></entry>
                <entry>Linux applications and support utilities.</entry>
              </row>

              <row>
                <entry><filename>lisp*</filename></entry>
                <entry>Software related to the Lisp language.</entry>
              </row>

              <row>
                <entry><filename>mail</filename></entry>
                <entry>Mail software.</entry>
              </row>

              <row>
                <entry><filename>math</filename></entry>
                <entry>Numerical computation software and other utilities
                  for mathematics.</entry>
              </row>

              <row>
                <entry><filename>mbone</filename></entry>
                <entry>MBone applications.</entry>
              </row>

              <row>
                <entry><filename>misc</filename></entry>
                <entry>Miscellaneous utilities&mdash;basically things that
                  do not belong anywhere else.  This is the only category
                  that should not appear with any other non-virtual category.
                  If you have <literal>misc</literal> with something else in
                  your <makevar>CATEGORIES</makevar> line, that means you can
                  safely delete <literal>misc</literal> and just put the port
                  in that other subdirectory!</entry>
              </row>

              <row>
                <entry><filename>multimedia</filename></entry>
                <entry>Multimedia software.</entry>
              </row>

              <row>
                <entry><filename>net</filename></entry>
                <entry>Miscellaneous networking software.</entry>
              </row>

              <row>
                <entry><filename>news</filename></entry>
                <entry>USENET news software.</entry>
              </row>

              <row>
                <entry><filename>offix*</filename></entry>
                <entry>Ports from the OffiX suite.</entry>
              </row>

              <row>
                <entry><filename>palm</filename></entry>
                <entry>Software support for the Palm(tm) series.</entry>
              </row>

              <row>
                <entry><filename>parallel*</filename></entry>
                <entry>Applications dealing with parallelism in computing.</entry>
              </row>

              <row>
                <entry><filename>pear*</filename></entry>
                <entry>Ports related to the Pear PHP framework.</entry>
              </row>

              <row>
                <entry><filename>perl5*</filename></entry>
                <entry>Ports that require <literal>perl</literal> version 5 to run.</entry>
              </row>

              <row>
                <entry><filename>picobsd</filename></entry>
                <entry>Ports to support PicoBSD.</entry>
              </row>

              <row>
                <entry><filename>plan9*</filename></entry>
                <entry>Various programs from Plan9.</entry>
              </row>

	      <row>
		<entry><filename>polish</filename></entry>
		<entry>Polish language support.</entry>
	      </row>

              <row>
                <entry><filename>portuguese</filename></entry>
                <entry>Portuguese language support.</entry>
              </row>

              <row>
                <entry><filename>print</filename></entry>
                <entry>Printing software.  Desktop publishing tools
                  (previewers, etc.) belong here too.</entry>
              </row>

              <row>
                <entry><filename>python*</filename></entry>
                <entry>Software related to the Python language.</entry>
              </row>

              <row>
                <entry><filename>ruby*</filename></entry>
                <entry>Software related to the Ruby language.</entry>
              </row>

              <row>
                <entry><filename>russian</filename></entry>
                <entry>Russian language support.</entry>
              </row>

              <row>
                <entry><filename>science</filename></entry>
                <entry>Scientific ports that do not fit into other
                  categories such as <filename>astro</filename>,
                  <filename>biology</filename> and
                  <filename>math</filename>.</entry>
              </row>

              <row>
                <entry><filename>security</filename></entry>
                <entry>Security utilities.</entry>
              </row>

              <row>
                <entry><filename>shells</filename></entry>
                <entry>Command line shells.</entry>
              </row>

              <row>
                <entry><filename>sysutils</filename></entry>
                <entry>System utilities.</entry>
              </row>

              <row>
                <entry><filename>tcl76*</filename></entry>
                <entry>Ports that use Tcl version 7.6 to run.</entry>
              </row>

              <row>
                <entry><filename>tcl80*</filename></entry>
                <entry>Ports that use Tcl version 8.0 to run.</entry>
              </row>

              <row>
                <entry><filename>tcl81*</filename></entry>
                <entry>Ports that use Tcl version 8.1 to run.</entry>
              </row>

              <row>
                <entry><filename>tcl82*</filename></entry>
                <entry>Ports that use Tcl version 8.2 to run.</entry>
              </row>

              <row>
                <entry><filename>tcl83*</filename></entry>
                <entry>Ports that use Tcl version 8.3 to run.</entry>
              </row>

              <row>
                <entry><filename>textproc</filename></entry>
                <entry>Text processing utilities.  It does not include
                  desktop publishing tools, which go to <filename>print</filename>.</entry>
              </row>

              <row>
                <entry><filename>tk42*</filename></entry>
                <entry>Ports that use Tk version 4.2 to run.</entry>
              </row>

              <row>
                <entry><filename>tk80*</filename></entry>
                <entry>Ports that use Tk version 8.0 to run.</entry>
              </row>

              <row>
                <entry><filename>tk81*</filename></entry>
                <entry>Ports that use Tk version 8.1 to run.</entry>
              </row>

              <row>
                <entry><filename>tk82*</filename></entry>
                <entry>Ports that use Tk version 8.2 to run.</entry>
              </row>

              <row>
                <entry><filename>tk83*</filename></entry>
                <entry>Ports that use Tk version 8.3 to run.</entry>
              </row>

              <row>
                <entry><filename>tkstep80*</filename></entry>
                <entry>Ports that use TkSTEP version 8.0 to run.</entry>
              </row>

              <row>
                <entry><filename>ukrainian</filename></entry>
                <entry>Ukrainian language support.</entry>
              </row>

              <row>
                <entry><filename>vietnamese</filename></entry>
                <entry>Vietnamese language support.</entry>
              </row>

              <row>
                <entry><filename>windowmaker*</filename></entry>
                <entry>Ports to support the WindowMaker window
                  manager.</entry>
              </row>

              <row>
                <entry><filename>www</filename></entry>
                <entry>Software related to the World Wide Web.  HTML language
                  support belongs here too.</entry>
              </row>

              <row>
                <entry><filename>x11</filename></entry>
                <entry>The X Window System and friends.  This category is only
                  for software that directly supports the window system.  Do not
                  put regular X applications here.  If your port is an X
                  application, define <makevar>USE_XLIB</makevar> (implied by
                  <makevar>USE_IMAKE</makevar>) and put it in the appropriate
                  categories.  Also, many of them go into other
                  <filename>x11-*</filename> categories (see below).</entry>
              </row>

              <row>
                <entry><filename>x11-clocks</filename></entry>
                <entry>X11 clocks.</entry>
              </row>

              <row>
                <entry><filename>x11-fm</filename></entry>
                <entry>X11 file managers.</entry>
              </row>

              <row>
                <entry><filename>x11-fonts</filename></entry>
                <entry>X11 fonts and font utilities.</entry>
              </row>

              <row>
                <entry><filename>x11-servers</filename></entry>
                <entry>X11 servers.</entry>
              </row>

              <row>
                <entry><filename>x11-toolkits</filename></entry>
                <entry>X11 toolkits.</entry>
              </row>

              <row>
                <entry><filename>x11-wm</filename></entry>
                <entry>X11 window managers.</entry>
              </row>

              <row>
                <entry><filename>zope*</filename></entry>
                <entry>Zope support.</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>Escolhendo a categoria certa</title>

        <para>Como muitas das categorias coincidem, voc&ecirc; frequentemente tem que escolher
          qual das categorias deve ser a categoria prim&aacute;ria de seu port.
          H&aacute; v&aacute;rias regras que governam esta quest&atilde;o.  Aqui est&aacute; a lista de
          prioridades, em diminuindo a ordem de precedencia:</para>

        <itemizedlist>
          <listitem>
            <para>Categorias espec&iacute;fica de lingua sempre vem primeiro.  Por
              exemplo, se seu port instala fontes X11 Japonesas, ent&atilde;o sua
              linha de <makevar>CATEGORIES</makevar> leria <filename>japanese
                x11-fonts</filename>.</para>
          </listitem>

          <listitem>
            <para>Categorias espec&iacute;ficas conquistam as menos-espec&iacute;ficas.  Para
              instancia, um editor HTML deve ser listado como <filename>www
                editors</filename>, n&atilde;o the other way around.  Tamb&eacute;m, voc&ecirc; n&atilde;o
              precisa listar <filename>net</filename> quando o port pertence a
              quaisquer do <filename>irc</filename>, <filename>mail</filename>,
              <filename>mbone</filename>, <filename>news</filename>,
              <filename>security</filename>, ou <filename>www</filename>.</para>
          </listitem>

          <listitem>
            <para><filename>x11</filename> &eacute; usado como uma categoria secund&aacute;ria somente
              quando a categoria prim&aacute;ria &eacute; uma lingua natural.  Em particular,
              voc&ecirc; n&atilde;o deve colocar <filename>x11</filename> na linha de categoria
              para aplica&ccedil;&otilde;es do X.</para>
          </listitem>

          <listitem>
            <para><application>Emacs</application> modes devem ser
	      colocados na mesma categoria do ports como a aplica&ccedil;&atilde;o
	      suportada pelo o mode, n&atilde;o em
	      <filename>editors</filename>.  Por exemplo, um
	      <application>Emacs</application> mode para editar arquivos
	      fontes de algumas linguagens de programa&ccedil;&atilde;o deve entrar em
	      <filename>lang</filename>.
              </para>
          </listitem>

          <listitem>
            <para>Se seu port realmente n&atilde;o pertence a nenhum local mais, coloque-o em
              <filename>misc</filename>.</para>
          </listitem>
        </itemizedlist>

        <para>Se voc&ecirc; n&atilde;o est&aacute; certo sobre que categoria, por favor coloque um coment&aacute;rio para
          que effect em seu &man.send-pr.1; submission so n&oacute;s podemos
          discut&iacute;-lo antes que n&oacute;s o importemos.  Se voc&ecirc; &eacute; um committer, envie uma nota
          para o &a.ports; assim n&oacute;s podemos discut&iacute;-lo primeiro&mdash;muito frequentemente novos
          ports s&atilde;o importados a categoria errada somente para ser movidos para certa.</para>
      </sect2>
    </sect1>

    <sect1 id="makefile-distfiles">
      <title>Os arquivos de distribui&ccedil;&atilde;o</title>

      <para>A segunda parte do <filename>Makefile</filename> descreve os
	arquivos que tem que ser obtidos em ordem para construir o port, e de onde
	eles podem ser obtidos.</para>

      <sect2>
        <title><makevar>DISTNAME</makevar></title>

        <para><makevar>DISTNAME</makevar> &eacute; o nome do port assim
          chamado pelos autores do software.
          <makevar>DISTNAME</makevar> defaults to
          <literal>${PORTNAME}-${PORTVERSION}</literal>, so override it se necess&aacute;rio.
          <makevar>DISTNAME</makevar> &eacute; somente usado em dois lugares.
          Primeiro, a lista do arquivo de distribui&ccedil;&atilde;o
          (<makevar>DISTFILES</makevar>) defaults to
          <makevar>${DISTNAME}</makevar><makevar>${EXTRACT_SUFX}</makevar>.
          Segundo, o arquivo de distribui&ccedil;&atilde;o &eacute; experado para extrair dentro de um
          subdiret&oacute;rio chamado <makevar>WRKSRC</makevar>, qual defaults
          a <filename>work/<makevar>${DISTNAME}</makevar></filename>.</para>

	<note>
          <para><makevar>PKGNAMEPREFIX</makevar> e
            <makevar>PKGNAMESUFFIX</makevar> n&atilde;o afeta
            <makevar>DISTNAME</makevar>.  Tamb&eacute;m note que quando
            <makevar>WRKSRC</makevar> &eacute; igual ao
            <filename>work/<makevar>${PORTNAME}-${PORTVERSION}</makevar></filename>
            while o arquivo fonte original &eacute; chamado algo outro que
            <makevar>${PORTNAME}-${PORTVERSION}${EXTRACT_SUFX}</makevar>,
            voc&ecirc; deve provavelmente deixar <makevar>DISTNAME</makevar>
            alone&mdash; voc&ecirc; est&aacute; melhor definindo
            <makevar>DISTFILES</makevar> que tendo que definir ambos
            <makevar>DISTNAME</makevar> e <makevar>WRKSRC</makevar>
            (and possibly <makevar>EXTRACT_SUFX</makevar>).</para>
	</note>
      </sect2>

      <sect2>
        <title><makevar>MASTER_SITES</makevar></title>

        <para>Record a parte do diret&oacute;rio do FTP/HTTP-URL apontando no
          original tarball em <makevar>MASTER_SITES</makevar>.  N&atilde;o esque&ccedil;a
          the trailing slash (<filename>/</filename>)!</para>

        <para>Os macros do <command>make</command> tentar&atilde;o usar esta
          especifica&ccedil;&atilde;o para grabbing o arquivo de distribui&ccedil;&atilde;o com
          <makevar>FETCH</makevar> se eles n&atilde;o podem encontra-lo j&aacute; no
          sistema.</para>

        <para>It is recommended que voc&ecirc; coloque multiplos sites nesta lista,
          preferencialmente de continentes diferentes.  Isto proteger&aacute; contra
          problemas de rede de area-distantes, e n&oacute;s estamos at&eacute; planejando adicionar suporte
          para determinar automaticamente o mais pr&oacute;ximo master site e fetching
          de l&aacute;!</para>

        <para>Se o original tarball &eacute; parte de um dos arquivos populares
          como X-contrib, GNU, ou Perl CPAN, voce pode ser capaz
          referenciar a aqueles sites em uma forma f&aacute;cil e compacta usando
          <makevar>MASTER_SITE_<replaceable>*</replaceable></makevar>
          (ex., <makevar>MASTER_SITE_XCONTRIB</makevar> e
          <makevar>MASTER_SITE_PERL_GNU</makevar>).  Simplesmente defina
          <makevar>MASTER_SITES</makevar> a uma dessas vari&aacute;veis e 
          <makevar>MASTER_SITE_SUBDIR</makevar> ao path com o
          arquivo.  Aqui est&aacute; um exemplo:</para>

        <programlisting>MASTER_SITES=         ${MASTER_SITE_XCONTRIB}
MASTER_SITE_SUBDIR=   applications</programlisting>

        <para>Estas vari&aacute;veis s&atilde;o definidas em
          <filename>/usr/ports/Mk/bsd.sites.mk</filename>.  H&aacute;
          novos arquivos adicionados todo o tempo, assim certifique-se de verificar a
          ultima vers&atilde;o deste arquivo antes do envio de um port.</para>

        <para>O usu&aacute;rio pode tamb&eacute;m definir as vari&aacute;veis <makevar>MASTER_SITE_*</makevar>
          em <filename>/etc/make.conf</filename> para override nossas
          escolhas, e usar seus mirrors favoritos destes arquivos populares
          ao inv&eacute;s.</para>
      </sect2>

      <sect2>
	<title><makevar>EXTRACT_SUFX</makevar></title>

	<para>Se voc&ecirc; tem um arquivo de ditribui&ccedil;&atilde;o, e ele usa um antigo sufixo para
	  indicar o mecanismo de compress&atilde;o, defina
	  <makevar>EXTRACT_SUFX</makevar>.</para>
	
	<para>Por exemplo, se o arquivo de distribui&ccedil;&atilde;o foi chamado
	  <filename>foo.tgz</filename> ao inv&eacute;s do mais normal
	  <filename>foo.tar.gz</filename>, voc&ecirc; escreveria:</para>

	<programlisting>DISTNAME=      foo
EXTRACT_SUFX=  .tgz</programlisting>

	<para>As vari&aacute;veis <makevar>USE_BZIP2</makevar> e <makevar>USE_ZIP</makevar>
	  automaticamente defina <makevar>EXTRACT_SUFX</makevar> a
	  <literal>.bz2</literal> ou <literal>.zip</literal> como necess&aacute;rio.  Se
	  neither destes s&atilde;o definidos ent&atilde;o <makevar>EXTRACT_SUFX</makevar>
	  defaults to <literal>.tar.gz</literal>.</para>

	<para>Voc&ecirc; nunca precisou definir ambos <makevar>EXTRACT_SUFX</makevar> e
	  <makevar>DISTFILES</makevar>.</para>
      </sect2>

      <sect2>
	<title><makevar>DISTFILES</makevar></title>

	<para>Algumas vezes os nomes dos arquivos para ser obtidos tem que n&atilde;o
	  parecer com o nome do port.  Por exemplo, ele pode ser
	  chamado <filename>source.tar.gz</filename> ou similar.  Em outros
	  casos os c&oacute;digos fontes da aplica&ccedil;&atilde;o pode be em v&aacute;rios arquivos
	  diferentes, todo do qual tem que ser obtido.</para>

	<para>Se este &eacute; o caso, defina <makevar>DISTFILES</makevar> para ser uma
	  lista separada de espa&ccedil;o de todos os arquivos que tem que ser
	  obtidos.</para>

	<programlisting>DISTFILES=     source1.tar.gz source2.tar.gz</programlisting>

	<para>Se n&atilde;o explicitamente definido, <makevar>DISTFILES</makevar> defaults to
	  <literal>${DISTNAME}${EXTRACT_SUFX}</literal>.</para>
      </sect2>

      <sect2>
	<title><makevar>EXTRACT_ONLY</makevar></title>

	<para>Se somente alguns dos <makevar>DISTFILES</makevar> tem que ser
	  extraidos&mdash;por exemplo, um deles &eacute; o c&oacute;digo fonte, enquanto
	  um outro &eacute; um documento uncompressed&mdash;lista os nomes de arquivos que
	  tem que ser extraido em <makevar>EXTRACT_ONLY</makevar>.</para>

	<programlisting>DISTFILES=     source.tar.gz manual.html
EXTRACT_ONLY=  source.tar.gz</programlisting>

	<para>Se <emphasis>nenhum</emphasis> dos <makevar>DISTFILES</makevar>
	  deve ser uncompressed ent&atilde;o defina <makevar>EXTRACT_ONLY</makevar> a
	  string vazia.</para>

	<programlisting>EXTRACT_ONLY=</programlisting>
      </sect2>

      <sect2 id="porting-patchfiles">
        <title><makevar>PATCHFILES</makevar></title>

        <para>Se seu port precisa algums patches adicionais que est&atilde;o dispon&iacute;veis
          por FTP ou HTTP, defina <makevar>PATCHFILES</makevar> aos nomes dos
          arquivos e <makevar>PATCH_SITES</makevar> a URL do
          diret&oacute;rio que os cont&eacute;m (o formato &eacute;  o mesmo assim
          <makevar>MASTER_SITES</makevar>).</para>

        <para>Se o patch n&atilde;o &eacute; relativo ao top da arvore do fonte
          (i.e., <makevar>WRKSRC</makevar>) porque ele cont&eacute;m algums pathnames
           extras, defina <makevar>PATCH_DIST_STRIP</makevar> accordingly. Para
          inst&acirc;ncia, se todos os pathnames no patch tem um extra
          <literal>foozolix-1.0/</literal> em frente dos nomes dos arquivos, ent&atilde;o defina
          <literal>PATCH_DIST_STRIP=-p1</literal>.</para>

        <para>N&atilde;o se preocupe se os patches est&atilde;o compressed; eles ser&atilde;o
          decompressed automaticamnte os nomes dos arquivos finalizados com
          <filename>.gz</filename> ou <filename>.Z</filename>.</para>

        <para>Se o patch &eacute; distribu&iacute;do com alguns outros arquivos, como
          documenta&ccedil;&atilde;o, em um gzip'd tarball, voc&ecirc; n&atilde;o pode somente usar
          <makevar>PATCHFILES</makevar>.  Se aquele &eacute; o caso, adicione o nome
          e a localiza&ccedil;&atilde;o do patch tarball ao
          <makevar>DISTFILES</makevar> e <makevar>MASTER_SITES</makevar>.
          Ent&atilde;o, use a vari&aacute;vel <makevar>EXTRA_PATCHES</makevar> para
          indicar aqueles arquivos e <filename>bsd.port.mk</filename>
          automaticamente aplicar&atilde;o-lhes para voc&ecirc;.  Em particular,
          <emphasis>n&atilde;o</emphasis> copie arquivos patch dentro do
          diret&oacute;rio&mdash; <makevar>PATCHDIR</makevar> aquele diret&oacute;rio pode
          n&atilde;o ser grav&aacute;vel.</para>

        <note>
          <para>O tarball ter&aacute; que ser extraido alongside the
            regular source by then, assim n&atilde;o h&aacute; necessidade para extrair explicitamente
            it se ele &eacute; um regular gzip'd ou compress'd tarball. Se voc&ecirc; fazer o
            latter, tome cuidado extra  para n&atilde;o overwrite alguma coisa que j&aacute;
            existe naquele diret&oacute;rio.  Tamb&eacute;m, n&atilde;o esque&ccedil;a de adicionar um comando para
            remover o patch copiado no <maketarget>pre-clean</maketarget>
            target.</para>
        </note>
      </sect2>

      <sect2 id="porting-master-sites-n">
	<title>Arquivos de distribu&ccedil;&atilde;o multipla ou patches de diferentes
	  sites e subdiret&oacute;rios
	  (<literal>MASTER_SITES:n</literal>)</title>

	<para>Esta se&ccedil;&atilde;o tinha informa&ccedil;&atilde;o sobre o mecanismo busca
	  conhecido como ambos <literal>MASTER_SITES:n</literal> e
	  <literal>MASTER_SITES_NN</literal>.  N&oacute;s referenciaremos a este
	  mecanismo assim <literal>MASTER_SITES:n</literal>
	  hereon.</para>

	<para>A little background first.  OpenBSD tem uma engenhosa caracteristica
	  dentro de ambas vari&aacute;veis <makevar>DISTFILES</makevar> e
	  <makevar>PATCHFILES</makevar>, ambos arquivos e
	  patches podem ser postfixed com identificadores <literal>:n</literal>
	  onde <literal>n</literal> ambos podem ser
	  <literal>[0-9]</literal> e denotar um grupo designa&ccedil;&atilde;o.
	  Por exemplo:</para>

	<programlisting>DISTFILES=      alpha:0 beta:1</programlisting>

	<para>No OpenBSD, o arquivo de distribui&ccedil;&atilde;o <filename>alpha</filename>
	  estar&aacute; associado com a vari&aacute;vel
	  <makevar>MASTER_SITES0</makevar> ao inv&eacute;s de nosso comum
	  <makevar>MASTER_SITES</makevar> e
	  <filename>beta</filename> com
	  <makevar>MASTER_SITES1</makevar>.</para>

	<para>Isto &eacute; uma caracter&iacute;stica muito interessante qual pode diminuir
	  aquela intermin&aacute;vel procura ao correto site para a obten&ccedil;&atilde;o.</para>

	<para>Just picture 2 files in <makevar>DISTFILES</makevar> e
	  20 sites em <makevar>MASTER_SITES</makevar>, os sites slow
	  as hell where <filename>beta</filename> est&aacute; carried by all
	  sites em <makevar>MASTER_SITES</makevar>, e
	  <filename>alpha</filename> pode somente ser encontrado no 20th
	  site.  It would be such a waste to verificar todos all of them se
	  maintainer knew this beforehand, would not it?  N&atilde;o &eacute; um bom
	  come&ccedil;o para aquele fim-de-semana agrad&aacute;vel!</para>

	<para>Agora que voc&ecirc; got the picture, s&oacute; imagine mais
	  <makevar>DISTFILES</makevar> e mais
	  <makevar>MASTER_SITES</makevar>.  Certamente nossos
	  <quote>distfiles survey meister</quote> would appreciate the
	  network strain relieve this would bring.</para>

	<para>Nas pr&oacute;ximas se&ccedil;&otilde;es, informa&ccedil;&atilde;o seguir&aacute; na
	  implementa&ccedil;&atilde;o FreeBSD desta id&eacute;ia.	N&oacute;s melhoramos um pouco o
	  conceito do OpenBSD.</para>

	<sect3>
	  <title>Informa&ccedil;&atilde;o Simplificada</title>

	  <para>Esta se&ccedil;&atilde;o lhe diz como preparar rapidamente fine
	    grained buscando de arquivos de distribu&ccedil;&atilde;o multipla e
	    patches de diferentes sites e subdiret&oacute;rios.  N&oacute;s
	    descrevemos aqui um caso simplificado
	    <literal>MASTER_SITES:n</literal> usage.  Isto ser&aacute;
	    suficiente para most scenarios.  Entretanto, se voc&ecirc; precisar
	    further informa&ccedil;&atilde;o, voc&ecirc; ter&aacute; que referir ao pr&oacute;xima
	    se&ccedil;&atilde;o.</para>

	  <para>Algumas aplica&ccedil;&otilde;es consiste de multiplos arquivos de distribu&ccedil;&atilde;o
	    que tem que ser obtidos deum numero de diferentes
	    sites.  Por exemplo,
	    <application>Ghostscript</application> consiste do
	    core do programa, e ent&atilde;o um grande numero de arquivos driver
	    que s&atilde;o usados dependendo da impressora do useu&aacute;rio.  Alguns
	    destes arquivos driver s&atilde;o fornecidos com o core, mas muitos
	    outros tem que ser obtidos dee uma variedade de diferentes
	    sites.</para>

	  <para>Para suportar isto, cada entrada em
	    <makevar>DISTFILES</makevar> pode ser seguido por um colon
	    e um <quote>tag name</quote>.  Cada site listado em
	    <makevar>MASTER_SITES</makevar> &eacute; ent&atilde;o seguido por um
	    colon, e a tag que indica quais arquivos de distribu&ccedil;&atilde;o
	    deve ser obtidos deste site.</para>

	  <para>Por exemplo, considere uma aplica&ccedil;&atilde;o com o fonte
	    dividido em duas partes, <filename>source1.tar.gz</filename>
	    e <filename>source2.tar.gz</filename>, qual tem que ser
	    obtidos de dois diferentes sites.  O
	    <filename>Makefile</filename> do port incluiria linhas como
	    <xref
	      linkend="ports-master-sites-n-example-simple-use-one-file-per-site">.</para>

	  <example
	    id="ports-master-sites-n-example-simple-use-one-file-per-site">
	    <title>Simplified use of <literal>MASTER_SITES:n</literal>
	      with 1 file per site</title>

	    <programlisting>MASTER_SITES=   ftp://ftp.example1.com/:source1 \
                ftp://ftp.example2.com/:source2
DISTFILES=      source1.tar.gz:source1 \
                source2.tar.gz:source2</programlisting>
	  </example>

	  <para>Arquivos de distribui&ccedil;&atilde;o multiplas podem ter a mesma tag.
	    Continuando o exemplo  anterior, suppose que havia um
	    terceiro distfile, <filename>source3.tar.gz</filename>, que
	    deve ser obtido de
	    <hostid>ftp.example2.com</hostid>.	O
	    <filename>Makefile</filename> ent&atilde;o seria escrito como
	    <xref
	      linkend="ports-master-sites-n-example-simple-use-more-than-one-file-per-site">.</para>

	  <example
	    id="ports-master-sites-n-example-simple-use-more-than-one-file-per-site">
	    <title>Simplificado uso do <literal>MASTER_SITES:n</literal>
	      com mais de 1 arquivo por site</title>

	    <programlisting>MASTER_SITES=   ftp://ftp.example1.com/:source1 \
                ftp://ftp.example2.com/:source2
DISTFILES=      source1.tar.gz:source1 \
                source2.tar.gz:source2 \
                source3.tar.gz:source2</programlisting>
	  </example>
	</sect3>

	<sect3>
	  <title>Informa&ccedil;&atilde;o detalhada</title>

	  <para>Okay, assim o exemplo da se&ccedil;&atilde;o anterior n&atilde;o refletia
	    suas necessidades?	 Nesta se&ccedil;&atilde;o n&oacute;s explicaremos em detalhes como
	    the fine grained fetching mechanism
	    <literal>MASTER_SITES:n</literal> works and how you can
	    modify your ports to use it.</para>

	  <orderedlist>
	    <listitem>
	      <para>Elementos podem ser postfixed com
		<literal>:<replaceable>n</replaceable></literal> onde
		<replaceable>n</replaceable> &eacute;
		<literal>[^:,]+</literal>, ex.,
		<replaceable>n</replaceable> pode conceitualmente ser qualquer
		string alfanumerica mas n&oacute;s o limitaremos a
		<literal>[a-zA-Z_][0-9a-zA-Z_]+</literal> por
		agora.</para>

	      <para>Alem do mais, comparamento de string &eacute; case sensitive;
		ex., <literal>n</literal> &eacute; diferente de
		<literal>N</literal>.</para>

	      <para>No entanto, as palavras seguintes  n&atilde;o podem ser usadas para
		postfixing purposes dedse que elas produzam um significado especial:
		<literal>default</literal>, <literal>all</literal> e
		<literal>ALL</literal> (elas s&atilde;o usadas internamente no
		item <xref
		  linkend="porting-master-sites-n-what-changes-in-port-targets">).
		Furthermore, <literal>DEFAULT</literal> is a special
		purpose word (verifique o item <xref
		  linkend="porting-master-sites-n-DEFAULT-group">).</para>
	    </listitem>

	    <listitem>
	      <para>Elementos postfixed com <literal>:n</literal>
		pertencem ao grupo <literal>n</literal>,
		<literal>:m</literal> pertencem ao grupo
		<literal>m</literal> e assim quarto.</para>
	    </listitem>

	    <listitem id="porting-master-sites-n-DEFAULT-group">
	      <para>Elementos sem um postfix s&atilde;o groupless, ex.,
		eles todos pertencem ao frupo especial
		<literal>DEFAULT</literal>.  Se voc&ecirc; postfix quaisquer
		elementos com <literal>DEFAULT</literal>, voc&ecirc; est&aacute; s&oacute;
		sendo redundante unless voc&ecirc; quer ter um elemento
		pertencendo a ambos <literal>DEFAULT</literal> e outros
		grupos ao mesmo tempo (verifique o item <xref
		  linkend="porting-master-sites-n-comma-operator">).</para>

	      <para>Os exemplos seguintes s&atilde;o equivalentes mas o
		primeiro deles &eacute; preferido:</para>

	      <programlisting>MASTER_SITES=   alpha

MASTER_SITES=   alpha:DEFAULT</programlisting>
	    </listitem>

	    <listitem>
	      <para>Grupos n&atilde;o s&atilde;o exclusivos, um elemento pode pertencer a
		v&aacute;rios diferentes grupos ao mesmo tempo e um grupo
		pode tamb&eacute;m ter tamb&eacute;m v&aacute;rios elementos diferentes ou
		nenhum em todos.  Elementos repetidos com o mesmo grupo
		ser&aacute; simplesmente aquilo, elementos repetidos.</para>
	    </listitem>

	    <listitem id="porting-master-sites-n-comma-operator">
	      <para>Quando voc&ecirc; quer um elemento perten&ccedil;a a v&aacute;rios
		grupos ao mesmo tempo, voc&ecirc; pode usar uma operador
		virgula (<literal>,</literal>).</para>

	      <para>Ao inv&eacute;s de repetir-lo v&aacute;rias vezes, cada vez
		com um diferente postfix, n&oacute;s podemos listar v&aacute;rios grupos
		de uma vez no unico postfix.  Para instancia,
		<literal>:m,n,o</literal> marca um elemento que
		pertence ao group <literal>m</literal>,
		<literal>n</literal> e <literal>o</literal>.</para>

	      <para>Todos os exemplos seguintes s&atilde;o equivalentes mas o
		ultimo &eacute; preferido:</para>

	      <programlisting>MASTER_SITES=   alpha alpha:SOME_SITE

MASTER_SITES=   alpha:DEFAULT alpha:SOME_SITE

MASTER_SITES=   alpha:SOME_SITE,DEFAULT

MASTER_SITES=   alpha:DEFAULT,SOME_SITE</programlisting>
	    </listitem>

	    <listitem>
	      <para>Todos sites com um given group s&atilde;o sortidos
		conforme o <makevar>MASTER_SORT_AWK</makevar>.  Todos
		grupos com <makevar>MASTER_SITES</makevar> e
		<makevar>PATCH_SITES</makevar> s&atilde;o sortidos bem
		assim.</para>
	    </listitem>

	    <listitem id="porting-master-sites-n-group-semantics">
	      <para>Grupos semantics podem ser usados em quaisquer das
		seguintes vari&aacute;veis <makevar>MASTER_SITES</makevar>,
		<makevar>PATCH_SITES</makevar>,
		<makevar>MASTER_SITE_SUBDIR</makevar>,
		<makevar>PATCH_SITE_SUBDIR</makevar>,
		<makevar>DISTFILES</makevar>, e
		<makevar>PATCHFILES</makevar> conforme a
		seguinte sintaxe:</para>

	      <orderedlist>
		<listitem>
		  <para>Todos elementos <makevar>MASTER_SITES</makevar>,
		    <makevar>PATCH_SITES</makevar>,
		    <makevar>MASTER_SITE_SUBDIR</makevar> e
		    <makevar>PATCH_SITE_SUBDIR</makevar> tem que
		    ser terminados com o caractere barra invertida
		    <literal>/</literal>.  Se quaisquer elementos
		    pertecem a quaisquer grupos, o grupo postfix
		    <literal>:<replaceable>n</replaceable></literal>
		    tem que vir a direta depois do terminator
		    <literal>/</literal>.  O mecanismo
		    <literal>MASTER_SITES:n</literal> depende da
		    existencia do terminator
		    <literal>/</literal> para evitar confusing elementos
		    onde uma <literal>:n</literal> &eacute; uma parte valida do
		    elemento com ocurrences onde
		    <literal>:n</literal> denota o grupo
		    <literal>n</literal>.  Para propositos de compatibilidade,
		    desde o <literal>/</literal> terminator n&atilde;o foi
		    necess&aacute;rio antes em ambos elementos
		    <makevar>MASTER_SITE_SUBDIR</makevar> e
		    <makevar>PATCH_SITE_SUBDIR</makevar>, se
		    o postfix immediate precedindo caractere n&atilde;o &eacute;
		    uma <literal>/</literal> ent&atilde;o <literal>:n</literal>
		    ser&aacute; considerada uma parte valida do elemento
		    ao inv&eacute;s de um grupo postfix even se um elemento &eacute;
		    postfixed com <literal>:n</literal>.  Veja ambos
		    <xref
		      linkend="ports-master-sites-n-example-detailed-use-master-site-subdir">
		    and <xref
		      linkend="ports-master-sites-n-example-detailed-use-complete-example-master-sites">.</para>

		  <example id="ports-master-sites-n-example-detailed-use-master-site-subdir">
		    <title>Uso detalhado do
		      <literal>MASTER_SITES:n</literal> em
		      <makevar>MASTER_SITE_SUBDIR</makevar></title>

		    <programlisting>MASTER_SITE_SUBDIR=     old:n new/:NEW</programlisting>

		    <itemizedlist>
		      <listitem>
			<para>Diret&oacute;rios com grupo
			  <literal>DEFAULT</literal> -> old:n</para>
		      </listitem>

		      <listitem>
			<para>Diret&oacute;rios com grupo
			  <literal>NEW</literal> -> new</para>
		      </listitem>
		    </itemizedlist>
		  </example>

		  <example
		    id="ports-master-sites-n-example-detailed-use-complete-example-master-sites">
		      <title>Uso detalhado do
			<literal>MASTER_SITES:n</literal> com operador
			virgula, multiplos arquivos, multiplos sites e
			multiplos subdiret&oacute;rios</title>

		    <programlisting>MASTER_SITES=   http://site1/%SUBDIR%/ http://site2/:DEFAULT \
                http://site3/:group3 http://site4/:group4 \
                http://site5/:group5 http://site6/:group6 \
                http://site7/:DEFAULT,group6 \
                http://site8/%SUBDIR%/:group6,group7 \
                http://site9/:group8
DISTFILES=      file1 file2:DEFAULT file3:group3 \
                file4:group4,group5,group6 file5:grouping \
                file6:group7
MASTER_SITE_SUBDIR=     directory-trial:1 directory-n/:groupn \
                        directory-one/:group6,DEFAULT \
                        directory</programlisting>

		    <para>O exemplo anterior resulta no
		      seguinte fine grained fetching.	Sites s&atilde;o
		      listados  na ordem exata que eles ser&atilde;o
		      usados.</para>

		    <itemizedlist>
		      <listitem>
			<para><filename>file1</filename> ser&aacute;
			  buscado de</para>

			<itemizedlist>
			  <listitem>
			    <para><makevar>MASTER_SITE_OVERRIDE</makevar></para>
			  </listitem>

			  <listitem>
			    <para>http://site1/directory/</para>
			  </listitem>

			  <listitem>
			    <para>http://site1/directory-one/</para>
			  </listitem>

			  <listitem>
			    <para>http://site1/directory-trial:1/</para>
			  </listitem>

			  <listitem>
			    <para>http://site2/</para>
			  </listitem>

			  <listitem>
			    <para>http://site7/</para>
			  </listitem>

			  <listitem>
			    <para><makevar>MASTER_SITE_BACKUP</makevar></para>
			  </listitem>
			</itemizedlist>
		      </listitem>

		      <listitem>
			<para><filename>file2</filename> ser&aacute;
			  buscado exatamente assim
			  <filename>file1</filename> desde que eles
			  ambos perten&ccedil;am ao mesmo grupo</para>

			<itemizedlist>
			  <listitem>
			    <para><makevar>MASTER_SITE_OVERRIDE</makevar></para>
			  </listitem>

			  <listitem>
			    <para>http://site1/directory/</para>
			  </listitem>

			  <listitem>
			    <para>http://site1/directory-one/</para>
			  </listitem>

			  <listitem>
			    <para>http://site1/directory-trial:1/</para>
			  </listitem>

			  <listitem>
			    <para>http://site2/</para>
			  </listitem>

			  <listitem>
			    <para>http://site7/</para>
			  </listitem>

			  <listitem>
			    <para><makevar>MASTER_SITE_BACKUP</makevar></para>
			  </listitem>
			</itemizedlist>
		      </listitem>

		      <listitem>
			<para><filename>file3</filename> ser&aacute;
			  buscado de</para>

			<itemizedlist>
			  <listitem>
			    <para><makevar>MASTER_SITE_OVERRIDE</makevar></para>
			  </listitem>

			  <listitem>
			    <para>http://site3/</para>
			  </listitem>

			  <listitem>
			    <para><makevar>MASTER_SITE_BACKUP</makevar></para>
			  </listitem>
			</itemizedlist>
		      </listitem>

		      <listitem>
			<para><filename>file4</filename> ser&aacute;
			  buscado de</para>

			<itemizedlist>
			  <listitem>
			    <para><makevar>MASTER_SITE_OVERRIDE</makevar></para>
			  </listitem>

			  <listitem>
			    <para>http://site4/</para>
			  </listitem>

			  <listitem>
			    <para>http://site5/</para>
			  </listitem>

			  <listitem>
			    <para>http://site6/</para>
			  </listitem>

			  <listitem>
			    <para>http://site7/</para>
			  </listitem>

			  <listitem>
			    <para>http://site8/directory-one/</para>
			  </listitem>

			  <listitem>
			    <para><makevar>MASTER_SITE_BACKUP</makevar></para>
			  </listitem>
			</itemizedlist>
		      </listitem>

		      <listitem>
			<para><filename>file5</filename> ser&aacute;
			  buscado de</para>

			<itemizedlist>
			  <listitem>
			    <para><makevar>MASTER_SITE_OVERRIDE</makevar></para>
			  </listitem>

			  <listitem>
			    <para><makevar>MASTER_SITE_BACKUP</makevar></para>
			  </listitem>
			</itemizedlist>
		      </listitem>

		      <listitem>
			<para><filename>file6</filename> ser&aacute;
			  buscado de</para>

			<itemizedlist>
			  <listitem>
			    <para><makevar>MASTER_SITE_OVERRIDE</makevar></para>
			  </listitem>

			  <listitem>
			    <para>http://site8/directory-one/</para>
			  </listitem>

			  <listitem>
			    <para><makevar>MASTER_SITE_BACKUP</makevar></para>
			  </listitem>
			</itemizedlist>
		      </listitem>
		    </itemizedlist>
		  </example>
		</listitem>
	      </orderedlist>
	    </listitem>

	    <listitem>
	      <para>Como eu fa&ccedil;o um grupo das vari&aacute;veis especiais de
		<filename>bsd.sites.mk</filename>, ex.,
		<makevar>MASTER_SITE_SOURCEFORGE</makevar>?</para>

	      <para>Veja <xref
		  linkend="ports-master-sites-n-example-detailed-use-master-site-sourceforge">.</para>

	      <example
		id="ports-master-sites-n-example-detailed-use-master-site-sourceforge">
		<title>Uso detalhado do
		  <literal>MASTER_SITES:n</literal> com
		  <makevar>MASTER_SITE_SOURCEFORGE</makevar></title>

		<programlisting>MASTER_SITES=   http://site1/ ${MASTER_SITE_SOURCEFORGE:S/$/:sourceforge,TEST/}
DISTFILES=      something.tar.gz:sourceforge</programlisting>
	      </example>

	      <para><filename>something.tar.gz</filename> ser&aacute;
		buscado de todos sites com
		<makevar>MASTER_SITE_SOURCEFORGE</makevar>.</para>
	    </listitem>

	    <listitem>
	      <para>Como eu uso isto com vari&aacute;veis
		<makevar>PATCH*</makevar>?</para>

	      <para>Todos exemplos onde feitps com
		vari&aacute;veis <makevar>MASTER*</makevar> mas eles funciar&atilde;o
		exatamente o mesmo para as <makevar>PATCH*</makevar> assim
		pode ser vistas em <xref
		  linkend="ports-master-sites-n-example-detailed-use-patch-sites">.</para>

	      <example
		id="ports-master-sites-n-example-detailed-use-patch-sites">
		<title>Uso simplificado do
		  <literal>MASTER_SITES:n</literal> com
		  <makevar>PATCH_SITES</makevar>.</title>

		<programlisting>PATCH_SITES=    http://site1/ http://site2/:test
PATCHFILES=     patch1:test</programlisting>
	      </example>
	    </listitem>
	  </orderedlist>
	</sect3>

	<sect3>
	  <title>What does change for ports?  What does not?</title>

	  <orderedlist numeration="lowerroman">
	    <listitem>
	      <para>Todos pots atuais restam o mesmo.  O
		<literal>MASTER_SITES:n</literal> feature code &eacute; somente
		ativado  se h&aacute; elementos postfixed com
		<literal>:<replaceable>n</replaceable></literal> como
		elementos conforme as regras de sintaxe aforementioned,
		especialmente como aprasentadas no item <xref
		  linkend="porting-master-sites-n-group-semantics">.</para>
	    </listitem>

	    <listitem id="porting-master-sites-n-what-changes-in-port-targets">
	      <para>Os port targets restantes o mesmo:
		<maketarget>checksum</maketarget>,
		<maketarget>makesum</maketarget>,
		<maketarget>patch</maketarget>,
		<maketarget>configure</maketarget>,
		<maketarget>build</maketarget>, etc.  Com obvias
		exce&ccedil;&otilde;es de <maketarget>do-fetch</maketarget>,
		<maketarget>fetch-list</maketarget>,
		<maketarget>master-sites</maketarget> and
		<maketarget>patch-sites</maketarget>.</para>

	      <itemizedlist>
		<listitem>
		  <para><maketarget>do-fetch</maketarget>: deploys the
		    novo agrupamento postfixed
		    <makevar>DISTFILES</makevar> e
		    <makevar>PATCHFILES</makevar> com their matching
		    group elements com ambos
		    <makevar>MASTER_SITES</makevar> e
		    <makevar>PATCH_SITES</makevar> qual usa matching
		    group elements com ambos
		    <makevar>MASTER_SITE_SUBDIR</makevar> and
		    <makevar>PATCH_SITE_SUBDIR</makevar>.  Verifique <xref
		      linkend="ports-master-sites-n-example-detailed-use-complete-example-master-sites">.</para>
		</listitem>

		<listitem>
		  <para><maketarget>fetch-list</maketarget>: funciona
		    como o antigo <maketarget>fetch-list</maketarget> com
		    a exce&ccedil;&atilde;o que ele agrupa s&oacute; como
		    <maketarget>do-fetch</maketarget>.</para>
		</listitem>

		<listitem>
		  <para><maketarget>master-sites</maketarget> e
		    <maketarget>patch-sites</maketarget>:
		    (incompat&iacute;veis com vers&otilde;es mais antigas) somente retorna os
		    elementos do grupo <literal>DEFAULT</literal>;  in
		    fact, eles executam targets
		    <maketarget>master-sites-default</maketarget> e
		    <maketarget>patch-sites-default</maketarget>
		    respectivamente.</para>

		  <para>Al&eacute;m disso, usando a target either
		    <maketarget>master-sites-all</maketarget> ou
		    <maketarget>patch-sites-all</maketarget> &eacute;
		    preferido verificando diretamente either
		    <maketarget>MASTER_SITES</maketarget> ou
		    <maketarget>PATCH_SITES</maketarget>.  Tamb&eacute;m,
		    verificando diretamente n&atilde;o &eacute; guarantidp que funcione em quaisquer
		    vers&otilde;es futuras.  Verifique o item <xref
		      linkend="porting-master-sites-n-new-port-targets-master-sites-all">
		    para mais informa&ccedil;&otilde;es nestes novos port
		    targets.</para>
		</listitem>

	      </itemizedlist>
	    </listitem>

	    <listitem>
	      <para>New port targets</para>

	      <orderedlist>
		<listitem>
		  <para>H&aacute;
		    <maketarget>master-sites-<replaceable>n</replaceable></maketarget>
		    e
		    <maketarget>patch-sites-<replaceable>n</replaceable></maketarget>
		    targets qual listar&aacute; os elementos do
		    respectivo grupo <replaceable>n</replaceable>
		    within <makevar>MASTER_SITES</makevar> e
		    <makevar>PATCH_SITES</makevar> respectivamente.  Por
		    exemplo, ambos
		    <maketarget>master-sites-DEFAULT</maketarget> e
		    <maketarget>patch-sites-DEFAULT</maketarget>
		    retornar&aacute; os elementos do grupo
		    <literal>DEFAULT</literal>,
		    <maketarget>master-sites-test</maketarget> e
		    <maketarget>patch-sites-test</maketarget> do grupo
		    <literal>test</literal>, e thereon.</para>
		</listitem>

		<listitem id="porting-master-sites-n-new-port-targets-master-sites-all">
		  <para>H&aacute; novos targets
		    <maketarget>master-sites-all</maketarget> e
		    <maketarget>patch-sites-all</maketarget> qual faz
		    o trabalho do antigos
		    <maketarget>master-sites</maketarget> e
		    <maketarget>patch-sites</maketarget>.  Eles
		    retornam os elementos de todos os grupos assim se todos eles
		    pertenciam ao mesmo grupo com o caveat that eles
		    lista assim muitos
		    <makevar>MASTER_SITE_BACKUP</makevar> e
		    <makevar>MASTER_SITE_OVERRIDE</makevar> assim h&aacute;
		    grupos definidos com either
		    <makevar>DISTFILES</makevar> ou
		    <makevar>PATCHFILES</makevar>;  respectivamente para
		    <maketarget>master-sites-all</maketarget> e
		    <maketarget>patch-sites-all</maketarget>.</para>
		</listitem>
	      </orderedlist>
	    </listitem>
	  </orderedlist>
	</sect3>
      </sect2>

      <sect2>
        <title><makevar>DIST_SUBDIR</makevar></title>

        <para>N&atilde;o deixe seu port abarrotar
          <filename>/usr/ports/distfiles</filename>.  Se seu port necessita de um
          muitos arquivos serem buscados, ou contem um arquivo que tem o nome que
          pode conflitar com outros ports (ex.,
          <filename>Makefile</filename>), define <makevar>DIST_SUBDIR</makevar>
          ao nome do port (<literal>${PORTNAME}</literal> ou
          <literal>${PKGNAMEPREFIX}${PORTNAME}</literal>
          deve funcionar bem).  Isto mudar&aacute;
          <makevar>DISTDIR</makevar> do default
          <filename>/usr/ports/distfiles</filename> a
          <filename>/usr/ports/distfiles/<makevar>DIST_SUBDIR</makevar></filename>,
          e in effect colocar&aacute; tudo que &eacute; necess&aacute;rio para seu port dentro
          daquele subdiret&oacute;rio.</para>

        <para>Ele tamb&eacute;m look at the subdiret&oacute;rio com o mesmo nome no
          backup master site em <filename>ftp.FreeBSD.org</filename>.
          (Defindo explicitamente <makevar>DISTDIR</makevar> em seu
          <makevar>Makefile</makevar> n&atilde;o accomplish this, assim por favor use
          <makevar>DIST_SUBDIR</makevar>.)</para>

        <note>
          <para>Isto n&atilde;o afeta o <makevar>MASTER_SITES</makevar> voc&ecirc;
            define em seu <filename>Makefile</filename>.</para>
        </note>
      </sect2>
    </sect1>

      <sect1 id="makefile-maintainer">
        <title><makevar> MANTEDOR</makevar></title>

        <para>Defina seu endere&ccedil;o de mail aqui.  Por favor.  <!-- smiley
          --><emphasis>:-)</emphasis></para>

        <para>Para uma descri&ccedil;&atilde;o detalhada das responsabilidades dos mantedores,
          consulte a se&ccedil;&atilde;o <ulink url="../developers-handbook/policies.html#POLICIES-MAINTAINER">Makefiles o
           MANTEDOR</ulink>.</para>

        <para>Note que somente um &uacute;nico endere&ccedil;o sem coment&aacute;rio part &eacute;
          permitido como um valor <makevar>MAINTAINER</makevar>.</para>

        <para>Se o mantedor de um port n&atilde;o responder a um pedido de atualiza&ccedil;&atilde;o
          de um usu&aacute;rio ap&oacute;s duas semanas (excluindo principais feriados
          p&uacute;blicos), ent&atilde;o that is considered a maintainer timeout, and the
          update pode ser feito sem aprova&ccedil;&atilde;o expl&iacute;cita do mantedor.  Se o
          mantedor n&atilde;o responder dentro de tr&ecirc;s meses, ent&atilde;o esse
          mantedor &eacute; considerado ausente without leave, e pode ser
          substitu&iacute;do como o mantedor do particular port em quest&atilde;o.
          Exce&ccedil;&otilde;es a isto s&atilde;o qualquer coisa mantida pelos &a.portmgr;, ou
          o &a.security-officer;.  Nenhum desautorizado commits pode ser
          feito aos ports mantidos por aqueles grupos.</para>

        <para>O &a.portmgr;  reserva o direito para revogar ou sobrescrever
          qualquer maintainership por qualquer raz&atilde;o, e o &a.security-officer;
          reserva o direito para revogar ou sobrescrever maintainership por
          raz&otilde;es da seguran&ccedil;a.</para>
      </sect1>

      <sect1 id="makefile-comment">
        <title><makevar>COMENT&Aacute;RIO</makevar></title>

        <para>Esta &eacute; uma descri&ccedil;&atilde;o de um-linha do port.
          <emphasis>Por favor</emphasis> n&atilde;o inclua o nome do pacote (ou
          o n&uacute;mero vers&atilde;o do software) no coment&aacute;rio.  O coment&aacute;rio
          deve come&ccedil;ar com um capital, e o final sem um per&iacute;odo.  Aqui
          est&aacute; um exemplo:</para>

        <programlisting>COMMENT=       A cat chasing a mouse all over the screen</programlisting>

        <para>A vari&aacute;vel COMMENT deve imediatamente seguir a vari&aacute;vel MAINTAINER
          no <filename>Makefile</filename>.</para>
      </sect1>

      <sect1 id="makefile-depend">
        <title>Depend&ecirc;ncias</title>

        <para>Muitos ports dependem de outros ports.  H&aacute; cinco vari&aacute;veis que
          voc&ecirc; pode usar para assegurar de que todos necess&aacute;rios bits estar&atilde;o na
          m&aacute;quina do usu&aacute;rio.  H&aacute; tamb&eacute;m algum vari&aacute;veis da dependencia pre-suportadas
          para casos comuns, mais alguns mais para controlar o comportamento
          das depend&ecirc;ncias.</para>

        <sect2>
          <title><makevar>LIB_DEPENDS</makevar></title>

          <para>Esta vari&aacute;vel especifica as bibliotecas que compartilhadas este port
            depende.  &Eacute; uma lista de 
            <replaceable>lib</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
            tuples onde <replaceable>lib</replaceable>  &eacute; o nome da
            biblioteca compartilhada, <replaceable>dir</replaceable> &eacute; o
            diret&oacute;rio em qual escontrar&aacute; caso n&atilde;o est&aacute; dispon&iacute;vel, e
            <replaceable>target</replaceable> &eacute; o target para chamar naquele
            diret&oacute;rio.  Por exemplo, <programlisting> LIB_DEPENDS=
              jpeg.9:${PORTSDIR}/graphics/jpeg:install</programlisting>
            verificar&aacute; para ver se h&aacute; uma biblioteca compartilhada jpeg com vers&atilde;o principal 9, e
            desceer dentro do subdiret&oacute;rio <filename>graphics/jpeg</filename>
            da sua &aacute;rvore do ports para construir e instala-lo se n&atilde;o se encontrar.
            The <replaceable>target</replaceable> part pode ser omitida se
            for igual a <makevar>DEPENDS_TARGET</makevar> (qual defaults para
            <literal>instalar</literal>).</para>

          <note>
            <para>A parte <replaceable>lib</replaceable> &eacute; um argumento dado
              ao <command>ldconfig -r | grep -wF</command>.  N&atilde;o haver&aacute; nenhumas
              express&otilde;es regulares nesta vari&aacute;vel.</para>
          </note>

          <para>A depend&ecirc;ncia &eacute; verificada duas vezes, uma vez dentro do
            <maketarget>extract</maketarget> target e ent&atilde;o dentro do
            <maketarget>install</maketarget> target.  Tamb&eacute;m, o nome da
            depend&ecirc;ncia &eacute; colocado dentro do pacote assim que
            &man.pkg.add.1; o instalar&aacute; automaticamente se
            n&atilde;o estiver no sistema do usu&aacute;rio.</para>
        </sect2>

        <sect2>
          <title><makevar>RUN_DEPENDS</makevar></title>

          <para>Esta vari&aacute;vel especifica execut&aacute;veis ou arquivos que este port depende
            durante o tempo-de-execu&ccedil;&atilde;o.  &Eacute; uma lista de
            <replaceable>path</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
            tuples onde <replaceable>path</replaceable> &eacute; o nome do
            execut&aacute;vel ou arquivo, <replaceable>dir</replaceable> &eacute; o
            diret&oacute;rio em qual encontrar&aacute;-lo em caso que n&atilde;o est&aacute; dispon&iacute;vel, e
            <replaceable>target</replaceable> &eacute; o target para chamar naquele
            diret&oacute;rio.  Se o <replaceable>path</replaceable>  come&ccedil;ar com uma barra
            (<literal>/</literal>), ele &eacute; tratado como um arquivo e sua existencia
            &eacute; testada com <command>test -e</command>; otherwise, it is
            assumed ser um execut&aacute;vel, e <command>which -s</command> &eacute;
            usado para determinar se o programa existe no path
            de busca do usu&aacute;rio.</para>

          <para>Por exemplo,</para>

            <programlisting>RUN_DEPENDS=   ${LOCALBASE}/etc/innd:${PORTSDIR}/news/inn \
               wish8.0:${PORTSDIR}/x11-toolkits/tk80</programlisting>

          <para>verificar&aacute; se o arquivo ou o diret&oacute;rio
            <filename>/usr/local/etc/innd</filename> existe, e construir e
            instala-lo do subdiret&oacute;rio <filename>news/inn</filename> da
            arvore ports se ele n&atilde;o &eacute; encontrado.  Ver&aacute; tamb&eacute;m se um
            execut&eacute;vel chamado <command>wish8.0</command> est&aacute; em seu path
            de procura, e descer&aacute; dentro do subdiret&oacute;rio <filename>x11-toolkits/tk80</filename>
            da sua arvore ports para construir e instala-lo se ele n&atilde;o &eacute;
            encontrado.</para>

          <note>
            <para> Neste caso, <command>innd</command>  &eacute; realmente um
              execut&aacute;vel; se um execut&aacute;vel estiver em um lugar que n&atilde;o esperado
              estra em um path normal de procura de usu&aacute;rio, voc&ecirc; deve usar o
              pathname completo.</para>
          </note>

          <para>TA depend&ecirc;ncia &eacute; verificada dentro do
            <maketarget>install</maketarget> target.  Tamb&eacute;m, o nome da
            depend&ecirc;ncia &eacute; colocado dentro do pacote assim que
            &man.pkg.add.1; o instalar&aacute; automaticamente se ele n&atilde;o
            estiver no sistema do usu&aacute;rio.  A parte <replaceable>target</replaceable>
            pode ser omitida se for a mesma que
            <makevar>DEPENDS_TARGET</makevar>.</para>
        </sect2>

        <sect2>
          <title><makevar>BUILD_DEPENDS</makevar></title>

          <para>Esta vari&aacute;vel especifica execut&aacute;veis ou arquivos que este port
            necessita para construir.  Como <makevar>RUN_DEPENDS</makevar>, &eacute; uma
            lista de
            <replaceable>path</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
            tuples. Por exemplo, <programlisting> BUILD_DEPENDS=
              unzip:${PORTSDIR}/archivers/unzip</programlisting> verificar&aacute;
            para ver se h&aacute; um execut&aacute;vel chamado <command>unzip</command>, e descer&aacute;
            dentro do subdiret&oacute;rio <filename>archivers/unzip</filename> da sua
            arvore ports para construir e instala-lo se ele n&atilde;o for encontrado.</para>

          <note>
            <para><quote>build</quote> aqui significa tudo da extra&ccedil;&atilde;o a
              compila&ccedil;&atilde;o.  A depend&ecirc;ncia &eacute; verificada dentro do
              <maketarget>extract</maketarget> target.  A parte
              <replaceable>target</replaceable> pode ser omitida se
              for a mesma que <makevar>DEPENDS_TARGET</makevar></para>
          </note>
        </sect2>

        <sect2>
          <title><makevar>FETCH_DEPENDS</makevar></title>

          <para>Esta vari&aacute;vel especifica execut&aacute;veis ou arquivos que este port
            necessita para buscar.  Como os dois anteriores, &eacute; uma lista de
            <replaceable>path</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
            tuples.  Por exemplo, <programlisting> FETCH_DEPENDS=
              ncftp2:${PORTSDIR}/net/ncftp2</programlisting> verificar&aacute; por um
            execut&aacute;vel chamado <command>ncftp2</command>, e descer&aacute; dentro do
            subdiret&oacute;rio <filename>net/ncftp2</filename> de sua arvore ports
            para construir e instala-lo se ele n&atilde;o for encontrado.</para>

          <para>A depend&ecirc;ncia &eacute; verificada dentro do
            <maketarget>fetch</maketarget> target.  A parte
            <replaceable>target</replaceable>  pode ser omitida se for
            a mesma que <makevar>DEPENDS_TARGET</makevar>.</para>
        </sect2>

        <sect2>
          <title><makevar>DEPENDS</makevar></title>

          <para>Se h&aacute; uma depend&ecirc;ncia em que n&atilde;o caia das
            quatro categorias acima, ou seu port necessita ter o fonte dos
            outros port extra&iacute;dos em adi&ccedil;&atilde;o para te-lo instalado,
            ent&atilde;o use esta vari&aacute;vel.  Esta &eacute; a lista de
            <replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>,
            assim n&atilde;o h&aacute; nada para verificar, ao contr&aacute;rio das quatro anteriores.  A parte
            <replaceable>target</replaceable> pode ser omitida se ele for o
            mesmo que <makevar>DEPENDS_TARGET</makevar>.</para>
        </sect2>

        <sect2>
	<title><makevar>USE_<replaceable>*</replaceable></makevar></title>

	<para>Um n&uacute;mero de vari&aacute;veis existem em ordem para encapsular
	  depend&ecirc;ncias em comum que muitos ports tem.</para>

	<table frame="none">
	  <title>As vari&aacute;veis <makevar>USE_<replaceable>*</replaceable></makevar>
	    </title>

	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry>Vari&aacute;vel</entry>

		<entry>Significado</entry>
	      </row>
	    </thead>

	    <tbody>
	      <row>
		<entry><makevar>USE_BZIP2</makevar></entry>

		<entry>Os tarballs do port s&atilde;o comprimidos com
		  <command>bzip2</command>.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_ZIP</makevar></entry>

		<entry>Os tarballs do port s&atilde;o comprimidos com
		  <command>zip</command>.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_GMAKE</makevar></entry>

		<entry>O port necessita <command>gmake</command> para
		  construir.</entry>

	      </row>

	      <row>
		<entry><makevar>USE_PERL5</makevar></entry>

		<entry>O port necessita <literal>perl 5</literal> para construir e instalar.  Veja
		  <xref linkend="using-perl">  para as vari&aacute;veis adicionais que
		  podem ser definidas relacionando ao <literal>perl</literal>.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_X_PREFIX</makevar></entry>

		<entry>O port instala na <makevar>X11BASE</makevar>
		   melhor que <makevar>PREFIX</makevar>.  Veja 
		  <xref linkend="using-x11"> para as vari&aacute;veis adicionais que 
		  podem ser definidas relacionando ao X11.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_AUTOMAKE</makevar></entry>

		<entry>O port usa GNU <command>automake</command> como parte
		  de seu processo de constru&ccedil;&atilde;o.  Veja <xref linkend="using-automake">
		  para as vari&aacute;veis adicionais que podem ser definidas relacionando ao
		  <command>automake</command>.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_AUTOCONF</makevar></entry>

		<entry>O port usa GNU <command>autoconf</command> como parte
		  de seu processo de constru&ccedil;&atilde;o.  Veja <xref linkend="using-automake">
		  para as vari&aacute;veis adicionais que podem ser definidas relacionando ao
		  <command>autoconf</command>.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_LIBTOOL</makevar></entry>

		<entry>O port usa GNU <command>libtool</command> como parte
		  its build process.  See <xref linkend="using-automake"> para
		  as vari&aacute;veis adicionais que podem ser definidas relacionando ao
		  <command>libtool</command>.</entry>
	      </row>

	      <row>
		<entry><makevar>GMAKE</makevar></entry>

		<entry>O path completo para <command>gmake</command>  se n&atilde;o est&aacute;
		  no <envar>PATH</envar>.</entry>
	      </row>

	      <row>
		<entry><makevar>USE_BISON</makevar></entry>

		<entry>O port usa <command>bison</command> para
		  constru&ccedil;&atilde;o.</entry>
	      </row>

	      <row>
		<entry><makevar>NO_INSTALL_MANPAGES</makevar></entry>

		<entry>N&atilde;o usa o <maketarget>install.man</maketarget>
		  target.</entry>
	      </row>
	    </tbody>
	  </tgroup>
	</table>

          <para>Defina <literal>USE_XLIB=yes</literal> se seu port necessita
            o X Window System para ser instalado (&eacute; implicado pelo
            <makevar>USE_IMAKE</makevar>).  Defina
            <literal>USE_GMAKE=yes</literal> se seu port necessita GNU
            <command>make</command> ao inv&eacute;s do BSD <command>make</command>.
            Define <literal>USE_AUTOCONF=yes</literal> se seu port necessita
            GNU autoconf para ser executado.  Define <literal>USE_QT=yes</literal> se
            seu port usa o ultimo qt toolkit.  Use
            <literal>USE_PERL5=yes</literal> se seu port necessita vers&atilde;o 5
            da linguagem <literal>perl</literal>.  (O ultimo &eacute; especialmente importante desde que
            algumas vers&otilde;es do FreeBSD tem <literal>perl5</literal> como parte da base do sistema
            enquanto outras n&atilde;o.)</para>
        </sect2>

        <sect2>
          <title>Notas em depend&ecirc;ncias</title>

          <para>Como mencionado acima, the default target para chamar quando uma
            depend&ecirc;ncia &eacute; necess&aacute;ria &eacute; <maketarget>DEPENDS_TARGET</maketarget>.
            It defaults to <literal>install</literal>.  Esta &eacute; uma vari&aacute;vel
            do usu&aacute;rio; nunca &eacute; definida em um
            <filename>Makefile</filename> do port.  Se seu port necessita um meio especial
            para manusear uma depend&ecirc;ncia, use a parte <literal>:target</literal> do
            the <makevar>*_DEPENDS</makevar> variables instead of redefining
            <makevar>DEPENDS_TARGET</makevar>.</para>

          <para>Quando voc&ecirc; digita <command>make clean</command>, suas depend&ecirc;ncias
            est&atilde;o automaticamente limpadas tamb&eacute;m.  Se voc&ecirc; n&atilde;o deseja que isto aconte&ccedil;a,
            defina a vari&aacute;vel <makevar>NOCLEANDEPENDS</makevar> em seu
            ambiente.</para>

          <para>Depender de um outro port incondicionalmente, use a
            vari&aacute;vel <makevar>${NONEXISTENT}</makevar> assim o primeiro campo 
            do <makevar>BUILD_DEPENDS</makevar> ou
            <makevar>RUN_DEPENDS</makevar>.  Use isto somente quando voc&ecirc; necessita
            obter o fonte de outro port.  Voc&ecirc; pode frequentemente economizar
            tempo de compila&ccedil;&atilde;o especificando a target tamb&eacute;m.  Por
            exemplo

            <programlisting>BUILD_DEPENDS=   ${NONEXISTENT}:${PORTSDIR}/graphics/jpeg:extract</programlisting>

            will always descend to the <literal>jpeg</literal> port and extract it.</para>

          <para>N&atilde;o use <makevar>DEPENDS</makevar>  a menos que n&atilde;o h&aacute; nenhum outro
            meio que o comportamento que voc&ecirc; quer possa ser realizado.  Causar&aacute; a
            outro port ser sempre construido (e instalado, por default), e a
            depend&ecirc;ncia entrar&aacute; nos pacotes tamb&eacute;m.  Se isto for realmente
            o que voc&ecirc; necessita, voc&ecirc; deve provavelmente escrev&ecirc;-lo assim
            <literal>BUILD_DEPENDS</literal> e
            <literal>RUN_DEPENDS</literal> ao inv&eacute;s &mdash; ao memos a
            inten&ccedil;&atilde;o ser&aacute; limpar.</para>
        </sect2>

     <sect2>
      <title>Depend&ecirc;ncias opcionais</title>
      
      <para>Algumas aplica&ccedil;&otilde;es grandes podem ser constru&iacute;das em um n&uacute;mero de
	configura&ccedil;&otilde;es, adicionando a funcionalidade se one of a number of
	bibliotecas ou de aplica&ccedil;&otilde;es estiver dispon&iacute;vel. Desde que n&atilde;o todos os usu&aacute;rios
	querem aquelas bibliotecas ou aplica&ccedil;&otilde;es, o sistema de ports
	fornece os ganchos que o autor do port possa usar se decidir qual
	configura&ccedil;&atilde;o deve ser constru&iacute;da. Suportando isto corretamente
	far&aacute; usu&aacute;rios felizes, e fornece eficazmente 2 ou mais ports pelo
	pre&ccedil;o de um.</para>
	
      <para>O mais f&aacute;cil deste para usar &eacute;
	<makevar>WITHOUT_X11</makevar>.  Se o port puder ser constru&iacute;do ambos
	com e sem suporte ao X, ent&atilde;o ele deve normalmente ser constru&iacute;do
	com suporte ao X. Se <makevar>WITHOUT_X11</makevar> &eacute; definido,
	ent&atilde;o a vers&atilde;o que n&atilde;o tem suporte ao X deve ser
	construida.</para>
	
      <para>V&aacute;rias partes do GNOME t&ecirc;m tais bot&otilde;es, embora s&atilde;o
	ligeiramente mais dif&iacute;ceis de se usar. As vari&aacute;veis para usar no
	<filename>Makefile</filename> s&atilde;o <makevar>WANT_*</makevar>
	e <makevar>HAVE_*</makevar>. Se a aplica&ccedil;&atilde;o possa ser
	construida ambos com ou sem uma das depend&ecirc;ncias listadas
	abaixo, ent&atilde;o o <filename>Makefile</filename> deve definir
	<makevar>WANT_PKG</makevar>, e deve construir a vers&atilde;o que
	usa <makevar>PKG</makevar> se <makevar>HAVE_PKG</makevar>
	for definido.</para>
	
      <para>A vari&aacute;vel <makevar>WANT_*</makevar> atualmente
	suporta esta maneira s&atilde;o <makevar>WANT_GLIB</makevar>,
	<makevar>WANT_GTK</makevar>, <makevar>WANT_ESOUND</makevar>,
	<makevar>WANT_IMLIB</makevar>, e
	<makevar>WANT_GNOME</makevar>.</para>
      </sect2>
    </sect1>

    <sect1 id="makefile-wrkdir">
      <title>Especificando o diret&oacute;rio de funcionamento</title>

      <para>Cada port &eacute; extra&iacute;do dentro a um diret&oacute;rio de funcionamento, qual tem que ser
	grav&aacute;vel.  O sistema de ports sup&otilde;e que os
	<makevar>DISTFILES</makevar> unpack dentro um diret&oacute;rio chamado
	<literal>${DISTNAME}</literal>.  Em outras palavras, se voc&ecirc;
	definiu:</para>

      <programlisting>PORTNAME=      foo
PORTVERSION=   1.0</programlisting>

      <para>ent&atilde;o os arquivos de distribui&ccedil;&atilde;o do port cont&eacute;m um diret&oacute;rio top-level,
	<filename>foo-1.0</filename>, e o resto dos arquivos est&atilde;o situados
	sob aquele diret&oacute;rio.</para>

      <para>H&aacute; um n&uacute;mero de vari&aacute;veis que voc&ecirc; pode definir se aquilo n&atilde;o for
	o caso.</para>

      <sect2>
	<title><makevar>WRKSRC</makevar></title>

	<para>A vari&aacute;vel lista o nome do diret&oacute;rio que &eacute; criado quando
	  os distfiles da aplica&ccedil;&atilde;o s&atilde;o extra&iacute;dos.  Se nosso exemplo anterior
	  extra&iacute;do em um diret&oacute;rio chamado <filename>foo</filename> (e n&atilde;o
	  <filename>foo-1.0</filename>) voc&ecirc; escreveria:</para>

	<programlisting>WRKSRC=      ${WRKDIR}/foo</programlisting>

	<para>ou possivelmente</para>

	<programlisting>WRKSRC=      ${WRKDIR}/${PORTNAME}</programlisting>
      </sect2>

      <sect2>
	<title><makevar>NO_WRKSUBDIR</makevar></title>

	<para>Se o port n&atilde;o extrair dentro de um subdiret&oacute;rio em tudo ent&atilde;o
	  vc&ecirc; deve definir <makevar>NO_WRKSUBDIR</makevar> a indicar
	  aquele.</para>

	<programlisting>NO_WRKSUBDIR= yes</programlisting>
      </sect2>
    </sect1>

    <sect1 id="conflicts">
      <title><makevar>CONFLICTS</makevar></title>

        <para>Se seu pacote n&atilde;o puder coexistir com outros pacotes
          (por causa de conflitos de arquivos, runtime incompatibilidade, etc.),
          liste os outros nomes dos pacotes  na vari&aacute;vel
          <makevar>CONFLICTS</makevar>. Voc&ecirc; pode usar shell globs como <literal>*</literal> e
          <literal>?</literal> aqui.  Os nomes dos pacotes devem ser
          enumerados da mesma maneira que aparecem em
          <filename>/var/db/pkg</filename>.
       </para>
    </sect1>

      <sect1 id="makefile-build">
        <title>Mecanismos de Constru&ccedil;&atilde;o</title>

        <para>Se seu pacote usa GNU <command>make</command>, defina
          <literal>USE_GMAKE=yes</literal>.  Se seu pacote usa
          <command>configure</command>, defina
          <literal>HAS_CONFIGURE=yes</literal>.  Se seu pacote usa GNU
          <command>configure</command>, defina
          <literal>GNU_CONFIGURE=yes</literal> (this implies
          <literal>HAS_CONFIGURE</literal>).  Se voc&ecirc; quiser dar alguns argumentos
          extras para <command>configure</command> (o default lista de argumentos
          <literal>--prefix=&dollar;{PREFIX}</literal> para GNU
          <command>configure</command> e vazia para n&atilde;o-GNU
          <command>configure</command>), defina aqueles argumentos extras em
          <makevar>CONFIGURE_ARGS</makevar>.  Se seu pacote usar o GNU
          <command>autoconf</command>, defina
          <literal>USE_AUTOCONF=yes</literal>.  Isto implica
          <makevar>GNU_CONFIGURE</makevar>, e far&aacute;
          <command>autoconf</command> ser executado antes de
          <command>configure</command>.</para>

	<note>
	  <para>Se seu pacote usa GNU <command>configure</command>, e
	    o arquivo execut&aacute;vel resultante tem um <quote>estranho</quote> nome
	    como
	    <filename>i386-portbld-freebsd4.7-</filename><replaceable>appname</replaceable>,
	    voc&ecirc; necessitar&aacute; adicionalmente sobrescrever a vari&aacute;vel
	    <makevar>CONFIGURE_TARGET</makevar> para especificar o
	    target na maneira necess&aacute;ria pelos scripts gerados pelos recentes
	    vers&otilde;es do <command>autoconf</command>.  Adicione a seguinte linha
	    imediatamente ap&oacute;s a linha <literal>GNU_CONFIGURE=yes</literal>
	    em seu <filename>Makefile</filename>:</para>

	  <para>
	    <literal>CONFIGURE_TARGET=--build=${MACHINE_ARCH}-portbld-freebsd${OSREL}</literal>
	    </para>
	</note>

        <para>Se seu pacote for uma aplica&ccedil;&atilde;o X que cria o
          <filename>Makefile</filename>s de <filename>Imakefile</filename>s
          usando <command>imake</command>, ent&atilde;o defina
          <literal>USE_IMAKE=yes</literal>.  Isto far&aacute; o est&aacute;gio
          de configurar para automaticamente fazer um <command>xmkmf -a</command>.  Se o
          <option>-a</option> flag for um problema para seu port, defina
          <literal>XMKMF=xmkmf</literal>. Se seu port usa
          <command>imake</command> mas n&atilde;o compreende o
          <maketarget>install.man</maketarget> target,
          <literal>NO_INSTALL_MANPAGES=yes</literal> deve ser definido. Em
          adi&ccedil;&atilde;o, o autor do port original deve ser shot. <!--
          smiley --><emphasis>:-&gt;</emphasis></para>

        <para>Se seu fonte do port <filename>Makefile</filename> tem
          algo mais do que <maketarget>all</maketarget> assim a constru&ccedil;&atilde;o principal
          target, defina <makevar>ALL_TARGET</makevar> accordingly.  Mesmo vai
          para <maketarget>install</maketarget> e
          <makevar>INSTALL_TARGET</makevar>.</para>
      </sect1>
    </chapter>

    <chapter id="special">
      <title>Considera&ccedil;&otilde;es especiais</title>

      <para>H&aacute; algumas mais coisas que voc&ecirc; tem que take into account quando voc&ecirc;
        cria um port.  Esta se&ccedil;&atilde;o explica o mais comum daquelas.</para>

      <sect1 id="porting-shlibs">
        <title>Bibliotecas Compartilhadas</title>

        <para>Se seu port instala uma ou mais bibliotecas compartilhadas, defina um
          <makevar>INSTALLS_SHLIB</makevar> make variable, qual instruir&aacute;
          um <filename>bsd.port.mk</filename> a executar
          <literal>&dollar;{LDCONFIG} -m</literal> no diret&oacute;rio onde a
          nova biblioteca for instalada (geralmente
          <filename><makevar>PREFIX</makevar>/lib</filename>) durante
          <maketarget>post-install</maketarget> target para registra-lo dentro
          shared library cache.  This variable, when defined, will also
          facilitate addition of an appropriate
          <literal>@exec /sbin/ldconfig -m</literal> and
          <literal>@unexec /sbin/ldconfig -R</literal> pair into your
          <filename>pkg-plist</filename> file, so that a user who installed
          the package can start using the shared library immediately and
          deinstallation will not cause the system to still believe the
          library is there.</para>

        <para>If you need, you can override the default location where the new
          library is installed by defining the <makevar>LDCONFIG_DIRS</makevar>
          make variable, which should contain a list of directories into which
          shared libraries are to be installed.  For example if your port
          installs shared libraries into
          <filename><makevar>PREFIX</makevar>/lib/foo</filename> and
          <filename><makevar>PREFIX</makevar>/lib/bar</filename> directories
          you could use the following in your
          <filename>Makefile</filename>:</para>

        <programlisting>INSTALLS_SHLIB= yes
LDCONFIG_DIRS=  %%PREFIX%%/lib/foo %%PREFIX%%/lib/bar</programlisting>

        <para>Note that content of <makevar>LDCONFIG_DIRS</makevar> is passed
          through &man.sed.1; just like the rest of <filename>pkg-plist</filename>,
          so <makevar>PLIST_SUB</makevar> substitutions also apply here.  It is
          recommended that you use <literal>%%PREFIX%%</literal> for
          <makevar>PREFIX</makevar>, <literal>%%LOCALBASE%%</literal> for
          <makevar>LOCALBASE</makevar> and <literal>%%X11BASE%%</literal> for
          <makevar>X11BASE</makevar>.</para>
      </sect1>

    <sect1 id="porting-restrictions">
      <title>Ports with distribution restrictions</title>

      <para>Licenses vary, and some of them place restrictions on how the
	application can be packaged, whether it can be sold for profit, and so
	on.</para> 

      <important>
	<para>It is your responsibility as a porter to read the licensing
	  terms of the software and make sure that the FreeBSD project will
	  not be held accountable for violating them by redistributing the
	  source or compiled binaries either via FTP or CDROM. If in doubt,
	  please contact the &a.ports;.</para>
      </important>
      
      <para>In situations like this, the following variables can be set.  In
	addition, <filename>ports/LEGAL</filename> should also be
	updated.</para>

      <sect2>
	<title><makevar>NO_PACKAGE</makevar></title>

	<para>This variable indicates that we may not generate a binary
	  package of the application.  However, the port's
	  <makevar>DISTFILES</makevar> files may be freely distributed.</para>

	<para><makevar>NO_PACKAGE</makevar> should also be used if the binary
	  package is not generally useful, and the application should always
	  be compiled from the source code.  For example, if the application
	  has configuration information that is site specific hard coded in to
	  it at compile time.</para>

	<para><makevar>NO_PACKAGE</makevar> should be set to a string
	  describing the reason why the package should not be
	  generated.</para>
      </sect2>

      <sect2>
	<title><makevar>NO_CDROM</makevar></title>

	<para>This variable indicates that although we are allowed to generate
	  binary packages, we are not allowed to put those packages, or the
	  port's <makevar>DISTFILES</makevar>, on to CDROM for resale.  The
	  <makevar>DISTFILES</makevar> will still be available via FTP.</para>

	<para><makevar>NO_PACKAGE</makevar> and <makevar>NO_CDROM</makevar>
	  can be set simultaneously.</para>
      </sect2>

      <sect2>
	<title><makevar>RESTRICTED</makevar></title>

	<para>Set this variable if the application's license also forbids us
	  from mirroring the application's <makevar>DISTFILES</makevar> via
	  FTP.</para>

	<para>Also set this if the application's license has general
	  restrictions on who may use it, e.g. the application is for
	  non-commercial use only.</para>
      </sect2>

      <sect2>
	<title><makevar>RESTRICTED_FILES</makevar></title>

	<para>If only some of the distribution files are restricted then set
	  this variable to list them.  It defaults to <literal>${DISTFILES}
	    ${PATCHFILES}</literal>.</para>
      </sect2>
    </sect1>

    <sect1 id="using-perl">
      <title>Using <literal>perl</literal></title>

      <table frame="none">
	<title>Variables for ports that use <literal>perl</literal></title>

	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Variable</entry>
	      
	      <entry>Means</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry><makevar>USE_PERL5</makevar></entry>

	      <entry>Says that the port uses <literal>perl 5</literal> to build and run.</entry>
	    </row>

	    <row>
	      <entry><makevar>PERL_CONFIGURE</makevar></entry>

	      <entry>Configure using Perl's MakeMaker.  It implies
	        <makevar>USE_PERL5</makevar>.</entry>
	    </row>
	  </tbody>
	</tgroup>

	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Read only variables</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry><makevar>PERL_VERSION</makevar></entry>
	      
	      <entry>The full version of <literal>perl</literal> installed (e.g.,
		<literal>5.00503</literal>).</entry>
	    </row>
	    
	    <row>
	      <entry><makevar>PERL_VER</makevar></entry>
	      
	      <entry>The short version of <literal>perl</literal> installed (e.g.,
		<literal>5.005</literal>).</entry>
	    </row>

            <row>
              <entry><makevar>PERL_LEVEL</makevar></entry>

              <entry>The installed <literal>perl</literal> version as an integer of the form <literal>MNNNPP</literal>
                (e.g., <literal>500503</literal>).</entry>
	    </row>
	    
	    <row>
	      <entry><makevar>PERL_ARCH</makevar></entry>
	      
	      <entry>Where <literal>perl</literal> stores architecture dependent libraries.
		Defaults to <literal>${ARCH}-freebsd</literal>.</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect1>

    <sect1 id="using-x11">
      <title>Using X11</title>

      <table frame="none">
	<title>Variables for ports that use X</title>

	<tgroup cols="2">
	  <tbody>
	    <row>
	      <entry><makevar>USE_X_PREFIX</makevar></entry>

	      <entry>The port installs in <makevar>X11BASE</makevar>, not
		<makevar>PREFIX</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_XLIB</makevar></entry>

	      <entry>The port uses the X libraries.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_MOTIF</makevar></entry>

	      <entry>The port uses the Motif toolkit.  Implies
		<makevar>USE_XPM</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_IMAKE</makevar></entry>
	      
	      <entry>The port uses <command>imake</command>.  Implies
		<makevar>USE_X_PREFIX</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>XMKMF</makevar></entry>
	      
	      <entry>Set to the path of <command>xmkmf</command> if not in the
		<envar>PATH</envar>.  Defaults to <literal>xmkmf
		  -a</literal>.</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect1>

    <sect1 id="using-automake">
      <title>Using <command>automake</command>, <command>autoconf</command>,
	and <command>libtool</command></title>

      <table frame="none">
	<title>Variables for ports that use automake, autoconf or
	  libtool</title>

	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Variable</entry>

	      <entry>Means</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry><makevar>USE_AUTOMAKE</makevar></entry>

	      <entry>The port uses <command>automake</command>.  Implies
		<makevar>USE_AUTOCONF</makevar> and
		<literal><makevar>USE_AUTOMAKE_VER</makevar>?=14</literal>.</entry>
	      </row>
		
	    <row>
	      <entry><makevar>AUTOMAKE</makevar></entry>

	      <entry>The full path for <command>automake</command> if it is
		not in the <envar>PATH</envar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_AUTOMAKE_VER</makevar></entry>

	      <entry>The port uses <command>automake</command>.  Valid values
		for this variable are <literal>14</literal> and
		<literal>15</literal>, and sets the
		<makevar>AUTOMAKE_DIR</makevar> and
		<makevar>ACLOCAL_DIR</makevar> variables
		appropriately.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOMAKE_ARGS</makevar></entry>

	      <entry>One or more command line arguments to pass to
		<makevar>AUTOMAKE</makevar> if
		<makevar>USE_AUTOMAKE_VER</makevar> is set.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOMAKE_ENV</makevar></entry>

	      <entry>One or more environment variables to set (and their
		values) before running <makevar>AUTOMAKE</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>ACLOCAL</makevar></entry>

	      <entry>Set to the path of the GNU <command>aclocal</command> if
		it is not in the <envar>PATH</envar>.  The default is set
		according to the <makevar>USE_AUTOMAKE_VER</makevar>
		variable.</entry>
	    </row>

	    <row>
	      <entry><makevar>ACLOCAL_DIR</makevar></entry>
	      
	      <entry>Set to the path of the GNU <command>aclocal</command>
		shared directory.  The default is set according to the
		<makevar>USE_AUTOMAKE_VER</makevar> variable.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOMAKE_DIR</makevar></entry>

	      <entry>Set to the path of the GNU <command>automake</command>
		shared directory.  The default is set according to the
		<makevar>USE_AUTOMAKE_VER</makevar> variable.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_AUTOCONF_VER</makevar></entry>

	      <entry>Specifies that the port uses <command>autoconf</command>.
		The default value is 213.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_AUTOCONF</makevar></entry>

	      <entry>Specifies that the port uses <command>autoconf</command>.
		Implies <literal>GNU_CONFIGURE</literal> and
		<literal>USE_AUTOCONF_VER?=213</literal>.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOCONF</makevar></entry>

	      <entry>Set to the path of GNU <command>autoconf</command> if it
		is not in the <envar>PATH</envar>.  The default is set
		according to the <makevar>USE_AUTOCONF_VER</makevar>
		variable.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOCONF_ARGS</makevar></entry>

	      <entry>Command line arguments to pass to
		<command>autoconf</command>.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOCONF_ENV</makevar></entry>

	      <entry>Set these
		<literal><replaceable>variable</replaceable>=<replaceable>value</replaceable></literal> 
		pairs in the environment before running
		<command>autoconf</command>.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOHEADER</makevar></entry>

	      <entry>Set to the path of GNU <command>autoheader</command> if
		it is not in the <envar>PATH</envar>.  The default is set
		according to <makevar>USE_AUTOCONF_VER</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTORECONF</makevar></entry>

	      <entry>Set to the path of GNU <command>autoreconf</command> if
		it is not in the <envar>PATH</envar>.  The default is set
		according to <makevar>USE_AUTOCONF_VER</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOSCAN</makevar></entry>

	      <entry>Set to the path of GNU <command>autoscan</command> if it
		is not set in the <envar>PATH</envar>.  The default is set
		according to <makevar>USE_AUTOCONF_VER</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>AUTOIFNAMES</makevar></entry>

	      <entry>Set to the path of GNU <command>autoifnames</command> if
		it is not set in the <envar>PATH</envar>.  The default is set
		according to <makevar>USE_AUTOCONF_VER</makevar>.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_LIBTOOL</makevar></entry>

	      <entry>The port uses <command>libtool</command>.  Implies
		<makevar>GNU_CONFIGURE</makevar>.</entry>
	      </row>
	    
	    <row>
	      <entry><makevar>LIBTOOL</makevar></entry>

	      <entry>Set to the path of <command>libtool</command> if it is
		not set in the <envar>PATH</envar>.</entry>
	    </row>
	    
	    <row>
	      <entry><makevar>LIBTOOLFILES</makevar></entry>

	      <entry>The files to patch for <command>libtool</command>.
		Defaults to <literal>aclocal.m4</literal> if
		<makevar>USE_AUTOCONF</makevar> is defined,
		<literal>configure</literal> otherwise.</entry>
	    </row>

	    <row>
	      <entry><makevar>LIBTOOLFLAGS</makevar></entry>

	      <entry>Additional flags to pass to
		<command>ltconfig</command>.  Defaults to
		<literal>--disable-ltlibs</literal>.</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect1>

    <sect1 id="using-gnome">
      <title>Using GNOME</title>

      <para>The FreeBSD/GNOME project uses a system called
	<literal>GNOMENG</literal> to define which GNOME components a
	particular port uses. A
	<ulink url="http://www.FreeBSD.org/gnome/docs/porting.html">comprehensive
	list of these variables</ulink> exists within the FreeBSD/GNOME
	project's homepage.</para>

    </sect1>

    <sect1 id="using-kde">
      <title>Using KDE</title>

      <table frame="none">
	<title>Variables for ports that use KDE</title>

	<tgroup cols="2">
	  <tbody>
	    <row>
	      <entry><makevar>USE_QT_VER</makevar></entry>

	      <entry>The port uses Qt toolkit.  Possible values are
		<literal>1</literal>, <literal>2</literal> and
		<literal>3</literal>;  each specify the major version
		of Qt to use.  Sets both <makevar>MOC</makevar> and
		<makevar>QTCPPFLAGS</makevar>to default appropriate
		values.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_KDELIBS_VER</makevar></entry>

	      <entry>The port uses KDE libraries.  Possible values are
		<literal>1</literal>, <literal>2</literal> and
		<literal>3</literal>;  each specify the major version
		of KDE to use.  Implies <makevar>USE_QT_VER</makevar>
		of the appropriate version.</entry>
	    </row>

	    <row>
	      <entry><makevar>USE_KDEBASE_VER</makevar></entry>

	      <entry>The port uses KDE base.  Possible values are
		<literal>1</literal>, <literal>2</literal> and
		<literal>3</literal>;  each specify the major version
		of KDE to use.  Implies <makevar>USE_KDELIBS_VER</makevar>
		of the appropriate version.</entry>
	    </row>

	    <row>
	      <entry><makevar>MOC</makevar></entry>

	      <entry>Set to the path of <command>moc</command>.
		Default set according to <makevar>USE_QT_VER</makevar>
		value.</entry>
	    </row>

	    <row>
	      <entry><makevar>QTCPPFLAGS</makevar></entry>

	      <entry>Set the <makevar>CPPFLAGS</makevar> to use when
		processing Qt code.  Default set according to
		<makevar>USE_QT_VER</makevar> value.</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>

    </sect1>

    <sect1 id="using-bison">
      <title>Using Bison</title>

      <para></para>
    </sect1>

    <sect1 id="using-java">
      <title>Using Java</title>

      <para></para>
    </sect1>

    <sect1 id="using-python">
      <title>Using Python</title>

      <para></para>
    </sect1>

    <sect1 id="using-emacs">
      <title>Using Emacs</title>

      <para></para>
    </sect1>

    <sect1 id="using-ruby">
      <title>Using Ruby</title>

      <para></para>
    </sect1>
    </chapter>

<!--

    <chapter>
      <title>ELF support</title>

      <para>Since FreeBSD changed to an ELF binary format shortly after
        3.0-RELEASE, we need to convert many ports that build shared
        libraries to support ELF.  Complicating this task is that a 3.0
        system can run as both ELF and a.out, and we wish to unofficially
        support the 2.2 branch as long as possible.  Below are the guidelines on
        how to convert a.out only ports to support both a.out and ELF
        compilation.</para>

      <para>Some part of this list is only applicable during the conversion,
        but will be left here for a while for reference in case you have come
        across some old port you wish to upgrade.</para>

      <sect1>
        <title>Moving a.out libraries out of the way</title>

        <para>Any a.out libraries should be moved out of
          <filename>/usr/local/lib</filename> and similar to an
          <filename>aout</filename> subdirectory.  (If you do not move them out
          of the way, ELF ports will happily overwrite a.out libraries.) The
          <maketarget>move-aout-libs</maketarget> target in the 3.0-CURRENT
          <filename>src/Makefile</filename> (called from
          <maketarget>aout-to-elf</maketarget>) will do this for you.  It will
          only move a.out libs so it is safe to call it on a system with both
          ELF and a.out libs in the standard directories.</para>
      </sect1>

      <sect1>
        <title>Format</title>

        <para>The ports tree will build packages in the format the machine is
          in.  This means a.out for 2.2 and a.out or ELF for 3.0 depending on
          what <command>`objformat`</command> returns.  Also, once users move
          a.out libraries to a subdirectory, building a.out libraries will be
          unsupported.  (I.e., it may still work if you know what you are
          doing, but you are on your own.)</para>

        <note>
          <para>If a port only works for a.out, set
            <makevar>BROKEN_ELF</makevar> to a string describing the reason
            why.  Such ports will be skipped during a build on an ELF
            system.</para>
        </note>
      </sect1>

      <sect1>
        <title><makevar>PORTOBJFORMAT</makevar></title>

        <para><filename>bsd.port.mk</filename> will set
          <makevar>PORTOBJFORMAT</makevar> to <literal>aout</literal> or
          <literal>elf</literal> and export it in the environments
          <envar>CONFIGURE_ENV</envar>, <envar>SCRIPTS_ENV</envar> and
          <envar>MAKE_ENV</envar>.  (It is always going to be
          <literal>aout</literal> in 2.2-STABLE).  It is also passed to
          <maketarget>PLIST_SUB</maketarget> as
          <literal>PORTOBJFORMAT=${PORTOBJFORMAT}</literal>.  (See comment on
          <literal>ldconfig</literal> lines below.)</para>

        <para>The variable is set using this line in
          <filename>bsd.port.mk</filename>:</para>

        <programlisting>PORTOBJFORMAT!= test -x /usr/bin/objformat && /usr/bin/objformat || echo aout</programlisting>

        <para>Ports' make processes should use this variable to decide what to
          do.  However, if the port's <filename>configure</filename> script
          already automatically detects an ELF system, it is not necessary to
          refer to <makevar>PORTOBJFORMAT</makevar>.</para>
      </sect1>

      <sect1>
        <title>Building shared libraries</title>

        <para>The following are differences in handling shared libraries for
          a.out and ELF.</para>

        <itemizedlist>
          <listitem>
            <para>Shared library versions</para>

            <para>An ELF shared library should be called
              <filename>libfoo.so.<replaceable>M</replaceable></filename>
              where <replaceable>M</replaceable> is the single version number,
              and an a.out library should be called
              <filename>libfoo.so.<replaceable>M</replaceable>.<replaceable>N</replaceable></filename>
              where <replaceable>M</replaceable> is the major version and
              <replaceable>N</replaceable> is the minor version number.
              Do not mix those; <emphasis>never</emphasis> install an ELF
              shared library called
              <filename>libfoo.so.<replaceable>N</replaceable>.<replaceable>M</replaceable></filename>
              or an a.out shared library (or symlink) called
              <filename>libfoo.so.<replaceable>N</replaceable></filename>.</para>
          </listitem>

          <listitem>
            <para>Linker command lines</para>

            <para>Assuming <command>cc -shared</command> is used rather than
              <command>ld</command> directly, the only difference is that you
              need to add
              <option>-Wl,-<replaceable>soname,libfoo.so.M</replaceable></option>
              on the command line for ELF.</para>
            </listitem>
        </itemizedlist>

        <para>You need to install a symlink from
          <filename>libfoo.so</filename> to
          <filename>libfoo.so.<replaceable>N</replaceable></filename> to make
          ELF linkers happy.  Since it should be listed in
          <filename>pkg-plist</filename> too, and it won't hurt in the a.out case
          (some ports even require the link for dynamic loading), you should
          just make this link regardless of the setting of
          <makevar>PORTOBJFORMAT</makevar>.</para>
      </sect1>

      <sect1>
        <title><makevar>LIB_DEPENDS</makevar></title>

        <para>All port <filename>Makefile</filename>s are edited to remove minor numbers from
          <makevar>LIB_DEPENDS</makevar>, and also to have the regexp support
          removed.  (E.g., <literal>foo\\.1\\.\\(33|40\\)</literal> becomes
          <literal>foo.2</literal>.)  They will be matched using <command>grep
            -wF</command>.</para>
      </sect1>

      <sect1>
        <title><filename>pkg-plist</filename></title>

        <para><filename>pkg-plist</filename> should contain the short (ELF) shlib
          names if the a.out minor number is zero, and the long (a.out) names
          otherwise.  <filename>bsd.port.mk</filename> will automatically add
          <literal>.0</literal> to the end of short shlib lines if
          <makevar>PORTOBJFORMAT</makevar> equals <literal>aout</literal>, and
          will delete the minor number from long shlib names if
          <makevar>PORTOBJFORMAT</makevar> equals
          <literal>elf</literal>.</para>

        <para>In cases where you really need to install shlibs with two
          versions on an ELF system or those with one version on an a.out
          system (for instance, ports that install compatibility libraries for
          other operating systems), define the variable
          <makevar>NO_FILTER_SHLIBS</makevar>.  This will turn off the editing
          of <filename>pkg-plist</filename> mentioned in the previous
          paragraph.</para>
      </sect1>

      <sect1>
        <title><literal>ldconfig</literal></title>

        <para>The <literal>ldconfig</literal> line in <filename>Makefile</filename>s should
          read:</para>

        <programlisting>${SETENV} OBJFORMAT=${PORTOBJFORMAT} ${LDCONFIG} -m ....</programlisting>

        <para>In <filename>pkg-plist</filename> it should read;</para>

        <programlisting>@exec /usr/bin/env OBJFORMAT=%%PORTOBJFORMAT%% /sbin/ldconfig -m ...
@unexec /usr/bin/env OBJFORMAT=%%PORTOBJFORMAT%% /sbin/ldconfig -R</programlisting>

        <para>This is to ensure that the correct <command>ldconfig</command>
          will be called depending on the format of the package, not the
          default format of the system.</para>
      </sect1>
    </chapter>

-->

    <chapter id="porting-masterdir">
      <title><makevar>MASTERDIR</makevar></title>

      <para>If your port needs to build slightly different versions of
        packages by having a variable (for instance, resolution, or paper
        size) take different values, create one subdirectory per package to
        make it easier for users to see what to do, but try to share as many
        files as possible between ports.  Typically you only need a very short
        <filename>Makefile</filename> in all but one of the directories if you
        use variables cleverly.  In the sole <filename>Makefile</filename>,
        you can use <makevar>MASTERDIR</makevar> to specify the directory
        where the rest of the files are.  Also, use a variable as part of
        <link linkend="porting-pkgname"><makevar>PKGNAMESUFFIX</makevar></link> so
        the packages will have different names.</para>

      <para>This will be best demonstrated by an example.  This is part of
        <filename>japanese/xdvi300/Makefile</filename>;</para>

      <programlisting>PORTNAME=       xdvi
PORTVERSION=    17
PKGNAMEPREFIX=  ja-
PKGNAMESUFFIX=  ${RESOLUTION}
 :
# default
RESOLUTION?=   300
.if ${RESOLUTION} != 118 && ${RESOLUTION} != 240 && \
       ${RESOLUTION} != 300 && ${RESOLUTION} != 400
       @${ECHO} "Error: invalid value for RESOLUTION: \"${RESOLUTION}\""
       @${ECHO} "Possible values are: 118, 240, 300 (default) and 400."
       @${FALSE}
.endif</programlisting>

      <para><filename role="package">japanese/xdvi300</filename> also has all the regular
        patches, package files, etc.  If you type <command>make</command>
        there, it will take the default value for the resolution (300) and
        build the port normally.</para>

      <para>As for other resolutions, this is the <emphasis>entire</emphasis>
        <filename>xdvi118/Makefile</filename>:</para>

      <programlisting>RESOLUTION=     118
MASTERDIR=      ${.CURDIR}/../xdvi300

.include "${MASTERDIR}/Makefile"</programlisting>

      <para>(<filename>xdvi240/Makefile</filename> and
        <filename>xdvi400/Makefile</filename> are similar).  The
        <makevar>MASTERDIR</makevar> definition tells
        <filename>bsd.port.mk</filename> that the regular set of
        subdirectories like <makevar>FILESDIR</makevar> and
        <makevar>SCRIPTDIR</makevar> are to be found under
        <filename>xdvi300</filename>.  The <literal>RESOLUTION=118</literal>
        line will override the <literal>RESOLUTION=300</literal> line in
        <filename>xdvi300/Makefile</filename> and the port will be built with
        resolution set to 118.</para>
    </chapter>

    <chapter id="shared">
      <title>Shared library versions</title>

      <para>Please read our <ulink url="../developers-handbook/policies-shlib.html">policy on
        shared library versioning</ulink> to understand what to do with
        shared library versions in general.  Do not blindly assume software
        authors know what they are doing; many of them do not.  It is very
        important that these details are carefully considered, as we have
        quite a unique situation where we are trying to have dozens of
        potentially incompatible software pairs co-exist. Careless port
        imports have caused great trouble regarding shared libraries in the
        past (ever wondered why the port <filename>jpeg-6b</filename> has a
        shared library version of 9?). If in doubt, send a message to the
        &a.ports;.  Most of the time, your job ends by determining the right
        shared library version and making appropriate patches to implement
        it.</para>

<!--
      <para>However, if there is a port which is a different version of the
        same software already in the tree, the situation is much more complex.
        In short, the FreeBSD implementation does not allow the user to
        specify to the linker which version of shared library to link against
        (the linker will always pick the highest numbered version).  This
        means, if there is a <filename>libfoo.so.3.2</filename> and
        <filename>libfoo.so.4.0</filename> in the system, there is no way to
        tell the linker to link a particular application to
        <filename>libfoo.so.3.2</filename>.  It is essentially completely
        overshadowed in terms of compilation-time linkage.  In this case, the
        only solution  is to rename the <emphasis>base</emphasis> part of the
        shared library.  For instance, change
        <filename>libfoo.so.4.0</filename> to
        <filename>libfoo4.so.1.0</filename> so both version 3.2 and 4.0 can be
        linked from other ports.</para>
-->
    </chapter>

    <chapter id="porting-manpages">
      <title>Manpages</title>

      <para>The <makevar>MAN[1-9LN]</makevar> variables will automatically add
        any manpages to <filename>pkg-plist</filename> (this means you must
        <emphasis>not</emphasis> list manpages in the
        <filename>pkg-plist</filename>&mdash;see <link
          linkend="porting-plist">generating PLIST</link> for more).  It also
        makes the install stage automatically compress or uncompress manpages
        depending on the setting of <makevar>NOMANCOMPRESS</makevar> in
        <filename>/etc/make.conf</filename>.</para>

      <para>If your port tries to install multiple names for manpages using
        symlinks or hardlinks, you must use the <makevar>MLINKS</makevar>
        variable to identify these.  The link installed by your port will
        be destroyed and recreated by <filename>bsd.port.mk</filename>
        to make sure it points to the correct file.  Any manpages
        listed in MLINKS must not be listed in the
        <filename>pkg-plist</filename>.</para>

      <para>To specify whether the manpages are compressed upon installation,
        use the <makevar>MANCOMPRESSED</makevar> variable. This variable can
        take three values, <literal>yes</literal>, <literal>no</literal> and
        <literal>maybe</literal>. <literal>yes</literal> means manpages are
        already installed compressed, <literal>no</literal> means they are
        not, and <literal>maybe</literal> means the software already respects
        the value of <makevar>NOMANCOMPRESS</makevar> so
        <filename>bsd.port.mk</filename> does not have to do anything
        special.</para>

      <para><makevar>MANCOMPRESSED</makevar> is automatically set to
        <literal>yes</literal> if <makevar>USE_IMAKE</makevar> is set and
        <makevar>NO_INSTALL_MANPAGES</makevar> is not set, and to
        <literal>no</literal> otherwise.  You do not have to explicitly define
        it unless the default is not suitable for your port.</para>

      <para>If your port anchors its man tree somewhere other than
        <makevar>PREFIX</makevar>, you can use the
        <makevar>MANPREFIX</makevar> to set it.  Also, if only manpages in
        certain sections go in a non-standard place, such as some <literal>perl</literal> modules
        ports, you can set individual man paths using
        <makevar>MAN<replaceable>sect</replaceable>PREFIX</makevar> (where
        <replaceable>sect</replaceable> is one of <literal>1-9</literal>,
        <literal>L</literal> or <literal>N</literal>).</para>

      <para>If your manpages go to language-specific subdirectories, set the
        name of the languages to <makevar>MANLANG</makevar>.  The value of
        this variable defaults to <literal>""</literal> (i.e., English
        only).</para>

      <para>Here is an example that puts it all together.</para>

      <programlisting>MAN1=          foo.1
MAN3=          bar.3
MAN4=          baz.4
MLINKS=        foo.1 alt-name.8
MANLANG=       "" ja
MAN3PREFIX=    ${PREFIX}/share/foobar
MANCOMPRESSED= yes</programlisting>

      <para>This states that six files are installed by this port;</para>

          <programlisting>${PREFIX}/man/man1/foo.1.gz
${PREFIX}/man/ja/man1/foo.1.gz
${PREFIX}/share/foobar/man/man3/bar.3.gz
${PREFIX}/share/foobar/man/ja/man3/bar.3.gz
${PREFIX}/man/man4/baz.4.gz
${PREFIX}/man/ja/man4/baz.4.gz</programlisting>

      <para>Additionally <filename>${PREFIX}/man/man8/alt-name.8.gz</filename>
        may or may not be installed by your port.  Regardless, a
        symlink will be made to join the foo(1) manpage and
        alt-name(8) manpage.</para>

    </chapter>

    <chapter id="porting-motif">
      <title>Ports that require Motif</title>

      <para>There are many programs that require a Motif library (available
        from several commercial vendors, while there is a free clone reported
        to be able to run many applications in
        <filename role="package">x11-toolkits/lesstif</filename>) to compile.  Since it is a
        popular toolkit and their licenses usually permit redistribution of
        statically linked binaries, we have made special provisions for
        handling ports that require Motif in a way that we can easily compile
        binaries linked either dynamically (for people who are compiling from
        the port) or statically (for people who distribute packages).</para>

      <sect1 id="motif-use">
        <title><makevar>USE_MOTIF</makevar></title>

        <para>If your port requires Motif, define this variable in the
          <filename>Makefile</filename>.  This will prevent people who do not own a copy of Motif
          from even attempting to build it.</para>
      </sect1>

      <sect1 id="motif-lib">
        <title><makevar>MOTIFLIB</makevar></title>

        <para>This variable will be set by <filename>bsd.port.mk</filename> to
          be the appropriate reference to the Motif library.  Please patch the
          source to use this wherever the Motif library is referenced in the
          <filename>Makefile</filename> or
          <filename>Imakefile</filename>.</para>

        <para>There are two common cases:</para>

        <itemizedlist>
          <listitem>
            <para>If the port refers to the Motif library as
              <literal>-lXm</literal> in its <filename>Makefile</filename> or
              <filename>Imakefile</filename>, simply substitute
              <literal>&dollar;{MOTIFLIB}</literal> for it.</para>
          </listitem>

          <listitem>
            <para>If the port uses <literal>XmClientLibs</literal> in its
              <filename>Imakefile</filename>, change it to
              <literal>&dollar;{MOTIFLIB} &dollar;{XTOOLLIB}
                &dollar;{XLIB}</literal>.</para>
          </listitem>

        </itemizedlist>

        <para>Note that <makevar>MOTIFLIB</makevar> (usually) expands to
          <literal>-L/usr/X11R6/lib -lXm</literal> or
          <literal>/usr/X11R6/lib/libXm.a</literal>, so there is no need to
          add <literal>-L</literal> or <literal>-l</literal> in front.</para>
      </sect1>
    </chapter>

    <chapter id="x11-fonts">
      <title>X11 fonts</title>

      <para>If your port installs fonts for the X Window System, put them in
        <filename><makevar>X11BASE</makevar>/lib/X11/fonts/local</filename>.
        This directory is new to <application>XFree86 3.3.3</application>.  If it does not exist,
        please create it, and print out a message urging the user to update
        their <application>XFree86</application> to 3.3.3 or newer, or at least add this directory to the
        font path in <filename>/etc/XF86Config</filename>.</para>
    </chapter>

    <chapter id="porting-info">
      <title>Info files</title>

      <para>If your package needs to install GNU info files, they should be
        listed in the <makevar>INFO</makevar> variable (without the trailing
        <literal>.info</literal>), and appropriate installation/deinstallation
        code will be automaticaly added to the temporary
        <filename>pkg-plist</filename> before package registration.</para>
    </chapter>

    <chapter id="pkg-files">
      <title>The <filename>pkg-<replaceable>*</replaceable></filename> files</title>

      <para>There are some tricks we have not mentioned yet about the
        <filename>pkg-<replaceable>*</replaceable></filename> files
        that come in handy sometimes.</para>

      <sect1 id="porting-message">
        <title><filename>pkg-message</filename></title>

        <para>If you need to display a message to the installer, you may place
          the message in <filename>pkg-message</filename>.  This capability is
          often useful to display additional installation steps to be taken
          after a &man.pkg.add.1; or to display licensing
          information.</para>

        <note>
          <para>The <filename>pkg-message</filename> file does not need to be
            added to <filename>pkg-plist</filename>.  Also, it will not get
            automatically printed if the user is using the port, not the
            package, so you should probably display it from the
            <maketarget>post-install</maketarget> target yourself.</para>
        </note>
      </sect1>

      <sect1 id="pkg-install">
        <title><filename>pkg-install</filename></title>

        <para>If your port needs to execute commands when the binary package
          is installed with &man.pkg.add.1; you can do this via the
          <filename>pkg-install</filename> script.  This script will
          automatically be added to the package, and will be run twice by
          &man.pkg.add.1;.  The first time as
          <literal>&dollar;{SH} pkg-install &dollar;{PKGNAME}
          PRE-INSTALL</literal> and the second time as
          <literal>&dollar;{SH} pkg-install &dollar;{PKGNAME} POST-INSTALL</literal>. 
          <literal>&dollar;2</literal> can be tested to determine which mode
          the script is being run in.  The <envar>PKG_PREFIX</envar>
          environmental variable will be set to the package installation
          directory.  See &man.pkg.add.1; for
          additional information.</para>

        <note>
          <para>This script is not run automatically if you install the port
            with <command>make install</command>.  If you are depending on it
            being run, you will have to explicitly call it from your port's
            <filename>Makefile</filename>.</para>
        </note>
      </sect1>

      <sect1 id="pkg-deinstall">
        <title><filename>pkg-deinstall</filename></title>

        <para>This script executes when a package is removed.</para>

        <para>
          This script will be run twice by &man.pkg.delete.1;.
          The first time as <literal>&dollar;{SH} pkg-install &dollar;{PKGNAME}
          DEINSTALL</literal> and the second time as
          <literal>&dollar;{SH} pkg-install &dollar;{PKGNAME} POST-DEINSTALL</literal>.
        </para>
      </sect1>

      <sect1 id="pkg-req">
        <title><filename>pkg-req</filename></title>

        <para>If your port needs to determine if it should install or not, you
          can create a <filename>pkg-req</filename> <quote>requirements</quote>
          script.  It will be invoked automatically at
          installation/deinstallation time to determine whether or not
          installation/deinstallation should proceed.</para>

        <para>The script will be run at installation time by
          &man.pkg.add.1; as
          <literal>pkg-req &dollar;{PKGNAME} INSTALL</literal>.
          At deinstallation time it will be run by
          &man.pkg.delete.1; as
          <literal>pkg-req &dollar;{PKGNAME} DEINSTALL</literal>.</para>
      </sect1>

      <sect1 id="porting-plist">
        <title>Changing <filename>pkg-plist</filename> based on make
          variables</title>

        <para>Some ports, particularly the <literal>p5-</literal> ports,
          need to change their <filename>pkg-plist</filename> depending on
          what options they are configured with (or version of
          <literal>perl</literal>, in the case of <literal>p5-</literal>
          ports).  To make this easy, any instances in the
          <filename>pkg-plist</filename> of <literal>%%OSREL%%</literal>,
          <literal>%%PERL_VER%%</literal>, and
          <literal>%%PERL_VERSION%%</literal> will be substituted for
          appropriately.  The value of <literal>%%OSREL%%</literal> is the
          numeric revision of the operating system (e.g.,
          <literal>2.2.7</literal>).  <literal>%%PERL_VERSION%%</literal> is
          the full version number of <literal>perl</literal> (e.g.,
          <literal>5.00502</literal>) and <literal>%%PERL_VER%%</literal>
          is the <literal>perl</literal> version number minus
          the patchlevel (e.g., <literal>5.005</literal>).</para>

        <para>If you need to make other substitutions, you can set the
          <makevar>PLIST_SUB</makevar> variable with a list of
          <literal><replaceable>VAR</replaceable>=<replaceable>VALUE</replaceable></literal>
          pairs and instances of
          <literal>%%<replaceable>VAR</replaceable>%%</literal> will be
          substituted with <replaceable>VALUE</replaceable> in the
          <filename>pkg-plist</filename>.</para>

        <para>For instance, if you have a port that installs many files in a
          version-specific subdirectory, you can put something like

          <programlisting>OCTAVE_VERSION= 2.0.13
PLIST_SUB=      OCTAVE_VERSION=${OCTAVE_VERSION}</programlisting>

          in the <filename>Makefile</filename> and use
          <literal>%%OCTAVE_VERSION%%</literal> wherever the version shows up
          in <filename>pkg-plist</filename>.  That way, when you upgrade the port,
          you will not have to change dozens (or in some cases, hundreds) of
          lines in the <filename>pkg-plist</filename>.</para>

        <para>This substitution (as well as addition of any <link
          linkend="porting-manpages">manual pages</link>) will be done between
          the <maketarget>pre-install</maketarget> and
          <maketarget>do-install</maketarget> targets, by reading from
          <makevar>PLIST</makevar> and writing to <makevar>TMPPLIST</makevar>
          (default:
          <filename><makevar>WRKDIR</makevar>/.PLIST.mktmp</filename>).  So if
          your port builds <makevar>PLIST</makevar> on the fly, do so in or
          before <maketarget>pre-install</maketarget>.  Also, if your port
          needs to edit the resulting file, do so in
          <maketarget>post-install</maketarget> to a file named
          <makevar>TMPPLIST</makevar>.</para>
      </sect1>

      <sect1 id="pkg-names">
        <title id="porting-pkgfiles">Changing the names of
          <filename>pkg-<replaceable>*</replaceable></filename> files</title>

        <para>All the names of <filename>pkg-<replaceable>*</replaceable></filename> files
          are defined using variables so you can change them in your
          <filename>Makefile</filename> if need be.  This is especially useful
          when you are sharing the same <filename>pkg-<replaceable>*</replaceable></filename> files
          among  several ports or have to write to one of the above files (see
          <link linkend="porting-wrkdir">writing to places other than
          <makevar>WRKDIR</makevar></link> for why it is a bad idea to write
          directly into the <filename>pkg-<replaceable>*</replaceable></filename> subdirectory).</para>

        <para>Here is a list of variable names and their default
          values.  (<makevar>PKGDIR</makevar> defaults to
          <makevar>${MASTERDIR}</makevar>.)</para>

        <informaltable frame="none">
          <tgroup cols="2">
            <thead>
              <row>
                <entry>Variable</entry>
                <entry>Default value</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><makevar>DESCR</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-descr</literal></entry>
              </row>

              <row>
                <entry><makevar>PLIST</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-plist</literal></entry>
              </row>

              <row>
                <entry><makevar>PKGINSTALL</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-install</literal></entry>
              </row>

              <row>
                <entry><makevar>PKGDEINSTALL</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-deinstall</literal></entry>
              </row>

              <row>
                <entry><makevar>PKGDEINSTALL</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-deinstall</literal></entry>
              </row>

              <row>
                <entry><makevar>PKGREQ</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-req</literal></entry>
              </row>

              <row>
                <entry><makevar>PKGMESSAGE</makevar></entry>
                <entry><literal>${PKGDIR}/pkg-message</literal></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para>Please change these variables rather than overriding
          <makevar>PKG_ARGS</makevar>.  If you change
          <makevar>PKG_ARGS</makevar>, those files will not correctly be
          installed in <filename>/var/db/pkg</filename> upon install from a
          port.</para>
      </sect1>
    </chapter>

  <chapter id="testing">
    <title>Testing your port</title>

      <sect1 id="testing-portlint">
        <title>Portlint</title>

        <para>Do check your work with <link
            linkend="porting-portlint"><command>portlint</command></link>
          before you submit or commit it.</para>
      </sect1>


      <sect1 id="porting-prefix">
        <title><makevar>PREFIX</makevar></title>

        <para>Do try to make your port install relative to
          <makevar>PREFIX</makevar>.  (The value of this variable will be set
          to <makevar>LOCALBASE</makevar> (default
          <filename>/usr/local</filename>), unless
          <makevar>USE_X_PREFIX</makevar> or <makevar>USE_IMAKE</makevar> is
          set, in which case it will be <makevar>X11BASE</makevar> (default
          <filename>/usr/X11R6</filename>).</para>

        <para>Not hard-coding <filename>/usr/local</filename> or
          <filename>/usr/X11R6</filename> anywhere in the source will make the
          port much more flexible and able to cater to the needs of other
          sites.  For X ports that use <command>imake</command>, this is
          automatic; otherwise, this can often be done by simply replacing the
          occurrences of <filename>/usr/local</filename> (or
          <filename>/usr/X11R6</filename> for X ports that do not use imake)
          in the various <filename>scripts/Makefile</filename>s in the port to read
          <makevar>PREFIX</makevar>, as this variable is automatically passed
          down to every stage of the build and install processes.</para>

	<para>Make sure your application is not installing things in 
	<filename>/usr/local</filename> instead of <makevar>PREFIX</makevar>.
	A quick test for this is to do this is:</para>

	<screen>&prompt.root; <userinput>make clean; make package PREFIX=/var/tmp/<replaceable>port-name</replaceable></userinput></screen>
	
	<para>If anything is installed outside of <makevar>PREFIX</makevar>, 
	making the package creation process will complain that it
	cannot find the files.</para>

	<!-- XXX This paragraph is confusing and poorly indented. -->
	<para>This does not test for the existence of internal references,
	or correct use of <makevar>LOCALBASE</makevar> for references to
	files from other ports.  Testing the installation in
	<filename>/var/tmp/<replaceable>port-name</replaceable></filename>
	to do that while you have it installed would do that.</para>

        <para>Do not set <makevar>USE_X_PREFIX</makevar> unless your port
          truly requires it (i.e., it links against X libs or it needs to
          reference files in <makevar>X11BASE</makevar>).</para>

        <para>The variable <makevar>PREFIX</makevar> can be reassigned in your
          <filename>Makefile</filename> or in the user's environment.
          However, it is strongly discouraged for individual ports to set this
          variable explicitly in the <filename>Makefile</filename>s.</para>

        <para>Also, refer to programs/files from other ports with the
          variables mentioned above, not explicit pathnames.  For instance, if
          your port requires a macro <literal>PAGER</literal> to be the full
          pathname of <command>less</command>, use the compiler flag:

          <programlisting>-DPAGER=\"&dollar;{PREFIX}/bin/less\"</programlisting>

          or

          <programlisting>-DPAGER=\"&dollar;{LOCALBASE}/bin/less\"</programlisting>

          if this is an X port, instead of
          <literal>-DPAGER=\"/usr/local/bin/less\"</literal>. This way it will
          have a better chance of working if the system administrator has
          moved the whole <filename>/usr/local</filename> tree somewhere else.</para>
      </sect1>

      <sect1 id="testing-freshports">
	<title>FreshPorts sanity tests</title>

	<para><ulink url="http://www.FreshPorts.org/">FreshPorts</ulink> has
	  a sanity test feature which automatically tests each commit to the
	  FreeBSD ports tree.  If subscribed to this service, you will be
	  notified of any errors which FreshPorts detects during sanity
	  testing of your commits.</para>

	<para>If you wish to use this service, all you need is a FreshPorts
	  account.  If your registered email address is
	  <literal>@FreeBSD.org</literal>, you'll see the opt-in link on the
          right hand side of the webpages.
	  For those of you who already have a FreshPorts account, but are not
	  using your <literal>@FreeBSD.org</literal> email address,
	  just change your email to <literal>@FreeBSD.org</literal>, subscribe,
          then change it back again.</para>
      </sect1>
  </chapter>

    <chapter id="port-upgrading">
      <title>Upgrading</title>

      <para>When you notice that a port is out of date compared to the latest
        version from the original authors, first make sure you have the latest
        port.  You can find them in the
        <filename>ports/ports-current</filename> directory of the FTP mirror
        sites.  You may also use <application>CVSup</application> to keep your whole ports collection
        up-to-date, as described in the <ulink url="../handbook/synching.html#CVSUP-CONFIG">Handbook</ulink>.</para>

      <para>The next step is to send an email to the maintainer, if one is
        listed in the port's <filename>Makefile</filename>.  That person may
        already be working on an upgrade, or have a reason to not upgrade the
        port right now (because of, for example, stability problems of the new
        version).</para>

      <para>If the maintainer asks you to do the upgrade or there is not any
        such person to begin with, please make the upgrade and send the
        recursive diff (either unified or context diff is fine, but port
        committers appear to prefer unified diff more) of the new and old
        ports directories to us (e.g., if your modified port directory is
        called <filename>superedit</filename> and the original is in our tree
        as <filename>superedit.bak</filename>, then send us the result of
        <command>diff -ruN superedit.bak superedit</command>).  Please examine
        the output to make sure all the changes make sense.  The best way to
        send us the diff is by including it via &man.send-pr.1; (category
        <literal>ports</literal>).  If you are the maintainer for the port,
	be sure to put <literal>[maintainer update]</literal> at the beginning
	of your synopsis line and/or set the <quote>Class</quote> of your PR
	to <literal>maintainer-update</literal>.  Please mention any added or
	deleted files in the message, as they have to be explicitly specified
	to CVS when doing a commit.  If the diff is more than about 20KB,
	please compress and uuencode it; otherwise, just include it in the PR
	as is.</para>

      <important>
	<para>If your upgrade is motivated by security concerns or a
	  serious fault in the currently committed port, please notify
	  the &a.portmgr; to request immediate rebuilding and
	  redistribution of your port's package.  Unsuspecting users
	  of &man.pkg.add.1; will otherwise continue to install the
	  old version via <command>pkg_add -r</command> for several
	  weeks.</para>
      </important>

      <note>
        <para>Once again, please use &man.diff.1; and not &man.shar.1; to send
          updates to existing ports!</para>
      </note>
    </chapter>

    <chapter id="porting-dads">
      <title>Dos and Don'ts</title>

      <para>Here is a list of common dos and don'ts that you encounter during
        the porting process.  You should check your own port against this list,
        but you can also check ports in the PR database that others have
        submitted.  Submit any comments on ports you check as described in
        <ulink url="../../articles/contributing/contrib-how.html#CONTRIB-GENERAL">Bug Reports and General
          Commentary</ulink>.  Checking ports in the PR database will both make
        it faster for us to commit them, and prove that you know what you are
        doing.</para>

      <sect1 id="dads-strip">
        <title>Stripping Binaries</title>

        <para>Do not strip binaries manually unless you have to.  All binaries
          should be stripped, but the <maketarget>INSTALL_PROGRAM</maketarget>
          macro will install and strip a binary at the same time (see the next
          section).</para>

        <para>If you need to strip a file, but do not wish to use the
          <makevar>INSTALL_PROGRAM</makevar> macro,
          <makevar>${STRIP_CMD}</makevar> will strip your program.  This is
          typically done within the <literal>post-install</literal>
          target.  For example:</para>

        <programlisting>post-install:
        ${STRIP_CMD} ${PREFIX}/bin/xdl</programlisting>

        <para>Use the &man.file.1; command on the installed executable to
          check whether the binary is stripped or not.  If it does not say
          <literal>not stripped</literal>, it is stripped.  Additionally,
          &man.strip.1; will not strip a previously stripped program; it
          will instead exit cleanly.</para>
      </sect1>

      <sect1 id="dads-install">
        <title>INSTALL_* macros</title>

        <para>Do use the macros provided in <filename>bsd.port.mk</filename>
          to ensure correct modes and ownership of files in your own
          <maketarget>*-install</maketarget> targets.</para>

        <itemizedlist>
          <listitem>
            <para><makevar>INSTALL_PROGRAM</makevar> is a command to install
              binary executables.</para>
          </listitem>

          <listitem>
            <para><makevar>INSTALL_SCRIPT</makevar> is a command to install
              executable scripts.</para>
          </listitem>

          <listitem>
            <para><makevar>INSTALL_DATA</makevar> is a command to install
              sharable data.</para>
          </listitem>

          <listitem>
            <para><makevar>INSTALL_MAN</makevar> is a command to install
              manpages and other documentation (it does not compress
              anything).</para>
          </listitem>
        </itemizedlist>

        <para>These are basically the <command>install</command> command with
          all the appropriate flags.  See below for an example on how to use
          them.</para>
      </sect1>

      <sect1 id="porting-wrkdir">
        <title><makevar>WRKDIR</makevar></title>

        <para>Do not write anything to files outside
          <makevar>WRKDIR</makevar>.  <makevar>WRKDIR</makevar> is the only
          place that is guaranteed to be writable during the port build (see
          <ulink url="../handbook/ports-using.html#PORTS-CD">
          compiling ports from CDROM</ulink> for an
          example of building ports from a read-only tree).  If you need to
          modify one of the <filename>pkg-<replaceable>*</replaceable></filename>
          files, do so by <link
          linkend="porting-pkgfiles">redefining a variable</link>, not by
          writing over it.</para>
      </sect1>

      <sect1 id="porting-wrkdirprefix">
        <title><makevar>WRKDIRPREFIX</makevar></title>

        <para>Make sure your port honors <makevar>WRKDIRPREFIX</makevar>.
          Most ports do not have to worry about this.  In particular, if you
          are referring to a <makevar>WRKDIR</makevar> of another port, note
          that the correct location is
          <filename><makevar>WRKDIRPREFIX</makevar><makevar>PORTSDIR</makevar>/<replaceable>subdir</replaceable>/<replaceable>name</replaceable>/work</filename> not <filename><makevar>PORTSDIR</makevar>/<replaceable>subdir</replaceable>/<replaceable>name</replaceable>/work</filename> or <filename><makevar>.CURDIR</makevar>/../../<replaceable>subdir</replaceable>/<replaceable>name</replaceable>/work</filename> or some such.</para>

        <para>Also, if you are defining <makevar>WRKDIR</makevar> yourself,
          make sure you prepend
          <literal>&dollar;{WRKDIRPREFIX}&dollar;{.CURDIR}</literal> in the
          front.</para>
      </sect1>

      <sect1 id="porting-versions">
        <title>Differentiating operating systems and OS versions</title>

        <para>You may come across code that needs modifications or conditional
          compilation based upon what version of Unix it is running under.  If
          you need to make such changes to the code for conditional
          compilation, make sure you make the changes as general as possible
          so that we can back-port code to FreeBSD 1.x systems and cross-port
          to other BSD systems such as 4.4BSD from CSRG, BSD/386, 386BSD,
          NetBSD, and OpenBSD.</para>

        <para>The preferred way to tell 4.3BSD/Reno (1990) and newer versions
          of the BSD code apart is by using the <literal>BSD</literal> macro
          defined in <filename>&lt;sys/param.h&gt;</filename>.  Hopefully that
          file is already included; if not, add the code:</para>

        <programlisting>#if (defined(__unix__) || defined(unix)) &amp;&amp; !defined(USG)
#include &lt;sys/param.h&gt;
#endif</programlisting>

        <para>to the proper place in the <filename>.c</filename> file.  We
          believe that every system that defines these two symbols has
          <filename>sys/param.h</filename>.  If you find a system that
          does not, we would like to know.  Please send mail to the
          &a.ports;.</para>

        <para>Another way is to use the GNU Autoconf style of doing
          this:</para>

        <programlisting>#ifdef HAVE_SYS_PARAM_H
#include &lt;sys/param.h&gt;
#endif</programlisting>

        <para>Do not forget to add <literal>-DHAVE_SYS_PARAM_H</literal> to the
          <makevar>CFLAGS</makevar> in the <filename>Makefile</filename> for
          this method.</para>

        <para>Once you have <filename>sys/param.h</filename> included, you may
          use:</para>

        <programlisting>#if (defined(BSD) &amp;&amp; (BSD &gt;= 199103))</programlisting>

        <para>to detect if the code is being compiled on a 4.3 Net2 code base
          or newer (e.g. FreeBSD 1.x, 4.3/Reno, NetBSD 0.9, 386BSD, BSD/386
          1.1 and below).</para>

        <para>Use:</para>

        <programlisting>#if (defined(BSD) &amp;&amp; (BSD &gt;= 199306))</programlisting>

        <para>to detect if the code is being compiled on a 4.4 code base or
          newer (e.g. FreeBSD 2.x, 4.4, NetBSD 1.0, BSD/386 2.0 or
          above).</para>

        <para>The value of the <literal>BSD</literal> macro is
          <literal>199506</literal> for the 4.4BSD-Lite2 code base.  This is
          stated for informational purposes only.  It should not be used to
          distinguish between versions of FreeBSD based only on 4.4-Lite vs.
          versions that have merged in changes from 4.4-Lite2.  The
          <literal>__FreeBSD__</literal> macro should be used instead.</para>

        <para>Use sparingly:</para>

        <itemizedlist>
          <listitem>
            <para><literal>__FreeBSD__</literal> is defined in all versions of
              FreeBSD.  Use it if the change you are making
              <emphasis>only</emphasis> affects FreeBSD.  Porting gotchas like
              the use of <literal>sys_errlist[]</literal> vs
              <function>strerror()</function> are Berkeley-isms, not FreeBSD
              changes.</para>
          </listitem>

          <listitem>
            <para>In FreeBSD 2.x, <literal>__FreeBSD__</literal> is defined to
              be <literal>2</literal>.  In earlier versions, it is
              <literal>1</literal>.  Later versions will bump it to match
              their major version number.</para>
          </listitem>

          <listitem>
            <para>If you need to tell the difference between a FreeBSD 1.x
              system and a FreeBSD 2.x or 3.x system, usually the right answer
              is to use the <literal>BSD</literal> macros described above.  If
              there actually is a FreeBSD specific change (such as special
              shared library options when using <command>ld</command>) then it
              is OK to use <literal>__FreeBSD__</literal> and <literal>#if
                __FreeBSD__ &gt; 1</literal> to detect a FreeBSD 2.x and later
              system.  If you need more granularity in detecting FreeBSD
              systems since 2.0-RELEASE you can use the following:</para>

            <programlisting>#if __FreeBSD__ &gt;= 2
#include &lt;osreldate.h&gt;
#    if __FreeBSD_version &gt;= 199504
         /* 2.0.5+ release specific code here */
#    endif
#endif</programlisting>
	  </listitem>
	</itemizedlist>

        <para>In the hundreds of ports that have been done, there have only
          been one or two cases where <literal>__FreeBSD__</literal> should
          have been used.  Just because an earlier port screwed up and used it
          in the wrong place does not mean you should do so too.</para>
      </sect1>

      <sect1 id="freebsd-versions">
        <title>__FreeBSD_version values</title>

		<informaltable frame="none">
		<tgroup cols="2">
		<thead>
		  <row>
		    <entry>Release</entry>
		    <entry><literal>__FreeBSD_version</literal></entry>
		  </row>
		</thead>

		<tbody>
		  <row>
		    <entry>2.0-RELEASE</entry>
		    <entry>119411</entry>
		  </row>

		  <row>
		    <entry>2.1-CURRENT</entry>
		    <entry>199501, 199503</entry>
		  </row>

		  <row>
		    <entry>2.0.5-RELEASE</entry>
		    <entry>199504</entry>
		  </row>

		  <row>
		    <entry>2.2-CURRENT before 2.1</entry>
		    <entry>199508</entry>
		  </row>

		  <row>
		    <entry>2.1.0-RELEASE</entry>
		    <entry>199511</entry>
		  </row>

		  <row>
		    <entry>2.2-CURRENT before 2.1.5</entry>
		    <entry>199512</entry>
		  </row>

		  <row>
		    <entry>2.1.5-RELEASE</entry>
		    <entry>199607</entry>
		  </row>

		  <row>
		    <entry>2.2-CURRENT before 2.1.6</entry>
		    <entry>199608</entry>
		  </row>

		  <row>
		    <entry>2.1.6-RELEASE</entry>
		    <entry>199612</entry>
		  </row>

		  <row>
		    <entry>2.1.7-RELEASE</entry>
		    <entry>199612</entry>
		  </row>

		  <row>
		    <entry>2.2-RELEASE</entry>
		    <entry>220000</entry>
		  </row>

		  <row>
		    <entry>2.2.1-RELEASE</entry>
		    <entry>220000 (no change)</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after 2.2.1-RELEASE</entry>
		    <entry>220000 (no change)</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after texinfo-3.9</entry>
		    <entry>221001</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after top</entry>
		    <entry>221002</entry>
		  </row>

		  <row>
		    <entry>2.2.2-RELEASE</entry>
		    <entry>222000</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after 2.2.2-RELEASE</entry>
		    <entry>222001</entry>
		  </row>

		  <row>
		    <entry>2.2.5-RELEASE</entry>
		    <entry>225000</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after 2.2.5-RELEASE</entry>
		    <entry>225001</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after ldconfig -R merge</entry>
		    <entry>225002</entry>
		  </row>

		  <row>
		    <entry>2.2.6-RELEASE</entry>
		    <entry>226000</entry>
		  </row>

		  <row>
		    <entry>2.2.7-RELEASE</entry>
		    <entry>227000</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after 2.2.7-RELEASE</entry>
		    <entry>227001</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after &man.semctl.2; change</entry>
		    <entry>227002</entry>
		  </row>

		  <row>
		    <entry>2.2.8-RELEASE</entry>
		    <entry>228000</entry>
		  </row>

		  <row>
		    <entry>2.2-STABLE after 2.2.8-RELEASE</entry>
		    <entry>228001</entry>
		  </row>

		  <row>
		    <entry>3.0-CURRENT before &man.mount.2; change</entry>
		    <entry>300000</entry>
		  </row>

		  <row>
		    <entry>3.0-CURRENT after &man.mount.2; change</entry>
		    <entry>300001</entry>
		  </row>

		  <row>
		    <entry>3.0-CURRENT after &man.semctl.2; change</entry>
		    <entry>300002</entry>
		  </row>

		  <row>
		    <entry>3.0-CURRENT after ioctl arg changes</entry>
		    <entry>300003</entry>
		  </row>

		  <row>
		    <entry>3.0-CURRENT after ELF conversion</entry>
		    <entry>300004</entry>
		  </row>

		  <row>
		    <entry>3.0-RELEASE</entry>
		    <entry>300005</entry>
		  </row>

		  <row>
		    <entry>3.0-CURRENT after 3.0-RELEASE</entry>
		    <entry>300006</entry>
		  </row>

		  <row>
		    <entry>3.0-STABLE after 3/4 branch</entry>
		    <entry>300007</entry>
		  </row>

		  <row>
		    <entry>3.1-RELEASE</entry>
		    <entry>310000</entry>
		  </row>

		  <row>
		    <entry>3.1-STABLE after 3.1-RELEASE</entry>
		    <entry>310001</entry>
		  </row>

		  <row>
		    <entry>3.1-STABLE after C++ constructor/destructor order
		      change</entry>
		    <entry>310002</entry>
		  </row>

		  <row>
		    <entry>3.2-RELEASE</entry>
		    <entry>320000</entry>
		  </row>

		  <row>
		    <entry>3.2-STABLE</entry>
		    <entry>320001</entry>
		  </row>

		  <row>
		    <entry>3.2-STABLE after binary-incompatible IPFW and
		      socket changes</entry>
		    <entry>320002</entry>
		  </row>

		  <row>
		    <entry>3.3-RELEASE</entry>
		    <entry>330000</entry>
		  </row>

		  <row>
		    <entry>3.3-STABLE</entry>
		    <entry>330001</entry>
		  </row>

		  <row>
		    <entry>3.3-STABLE after adding &man.mkstemp.3;
		      to libc</entry>
		    <entry>330002</entry>
		  </row>

		  <row>
		    <entry>3.4-RELEASE</entry>
		    <entry>340000</entry>
		  </row>

		  <row>
		    <entry>3.4-STABLE</entry>
		    <entry>340001</entry>
		  </row>

		  <row>
		    <entry>3.5-RELEASE</entry>
		    <entry>350000</entry>
		  </row>

		  <row>
		    <entry>3.5-STABLE</entry>
		    <entry>350001</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after 3.4 branch</entry>
		    <entry>400000</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after change in dynamic linker
		      handling</entry>
		    <entry>400001</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after C++ constructor/destructor
		      order change</entry>
		    <entry>400002</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after functioning &man.dladdr.3;</entry>
		    <entry>400003</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after __deregister_frame_info dynamic
		      linker bug fix (also 4.0-CURRENT after EGCS 1.1.2
		      integration)
		    </entry>
		    <entry>400004</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after &man.suser.9; API change
		      (also 4.0-CURRENT after newbus)</entry>
		    <entry>400005</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after cdevsw registration change</entry>
		    <entry>400006</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after the addition of so_cred for
		      socket level credentials</entry>
		    <entry>400007</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after the addition of a poll syscall
		      wrapper to libc_r</entry>
		    <entry>400008</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after the change of the kernel's
		      <literal>dev_t</literal> type to <literal>struct
		      specinfo</literal> pointer</entry>
		    <entry>400009</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after fixing a hole
		      in &man.jail.2;</entry>
		    <entry>400010</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after the <literal>sigset_t</literal>
		      datatype change</entry>
		    <entry>400011</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after the cutover to the GCC 2.95.2
		      compiler</entry>
		    <entry>400012</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after adding pluggable linux-mode
		      ioctl handlers</entry>
		    <entry>400013</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after importing OpenSSL</entry>
		    <entry>400014</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after the C++ ABI change in GCC 2.95.2
		      from -fvtable-thunks to -fno-vtable-thunks by
		      default</entry>
		    <entry>400015</entry>
		  </row>

		  <row>
		    <entry>4.0-CURRENT after importing OpenSSH</entry>
		    <entry>400016</entry>
		  </row>

		  <row>
		    <entry>4.0-RELEASE</entry>
		    <entry>400017</entry>
		  </row>

		  <row>
		    <entry>4.0-STABLE after 4.0-RELEASE</entry>
		    <entry>400018</entry>
		  </row>

		  <row>
		    <entry>4.0-STABLE after the introduction of delayed
		      checksums.</entry>
		    <entry>400019</entry>
		  </row>

		  <row>
		    <entry>4.0-STABLE after merging libxpg4 code into
		      libc.</entry>
		    <entry>400020</entry>
		  </row>

		  <row>
		    <entry>4.0-STABLE after upgrading Binutils to 2.10.0, ELF
		      branding changes, and tcsh in the base system.</entry>
		    <entry>400021</entry>
		  </row>

		  <row>
		    <entry>4.1-RELEASE</entry>
		    <entry>410000</entry>
		  </row>

		  <row>
		    <entry>4.1-STABLE after 4.1-RELEASE</entry>
		    <entry>410001</entry>
		  </row>

		  <row>
		    <entry>4.1-STABLE after &man.setproctitle.3; moved from
		      libutil to libc.</entry>
		    <entry>410002</entry>
		  </row>

		  <row>
		    <entry>4.1.1-RELEASE</entry>
		    <entry>411000</entry>
		  </row>

		  <row>
		    <entry>4.1.1-STABLE after 4.1.1-RELEASE</entry>
		    <entry>411001</entry>
		  </row>

		  <row>
		    <entry>4.2-RELEASE</entry>
		    <entry>420000</entry>
		  </row>

		  <row>
		    <entry>4.2-STABLE after combining libgcc.a and
		      libgcc_r.a, and associated GCC linkage changes.</entry>
		    <entry>420001</entry>
		  </row>

		  <row>
		    <entry>4.3-RELEASE</entry>
		    <entry>430000</entry>
		  </row>

		  <row>
		    <entry>4.3-STABLE after wint_t introduction.</entry>
		    <entry>430001</entry>
		  </row>

		  <row>
		    <entry>4.3-STABLE after PCI powerstate API merge.</entry>
		    <entry>430002</entry>
		  </row>

		  <row>
		    <entry>4.4-RELEASE</entry>
		    <entry>440000</entry>
		  </row>

		  <row>
		    <entry>4.4-STABLE after d_thread_t introduction.</entry>
		    <entry>440001</entry>
		  </row>

		  <row>
		    <entry>4.4-STABLE after mount structure changes (affects
		      filesystem klds).</entry>
		    <entry>440002</entry>
		  </row>

		  <row>
		    <entry>4.4-STABLE after the userland components of smbfs
		      were imported.</entry>
		    <entry>440003</entry>
		  </row>

		  <row>
		    <entry>4.5-RELEASE</entry>
		    <entry>450000</entry>
		  </row>

		  <row>
		    <entry>4.5-STABLE after the usb structure element rename.</entry>
		    <entry>450001</entry>
		  </row>

		  <row>
		    <entry>4.5-STABLE after the
		      <literal>sendmail_enable</literal> &man.rc.conf.5;
		      variable was made to take the value
		      <literal>NONE</literal>.</entry>
		    <entry>450004</entry>
		  </row>

		  <row>
		    <entry>4.5-STABLE after moving to XFree86 4 by default
		      for package builds.</entry>
		    <entry>450005</entry>
		  </row>

		  <row>
		    <entry>4.5-STABLE after accept filtering was fixed so
		      that is no longer susceptible to an easy DoS.</entry>
		    <entry>450006</entry>
		  </row>

		  <row>
		    <entry>4.6-RELEASE</entry>
		    <entry>460000</entry>
		  </row>

		  <row>
		    <entry>4.6-STABLE &man.sendfile.2; fixed to comply with
		      documentation, not to count any headers sent against
		      the amount of data to be sent from the file.</entry>
		    <entry>460001</entry>
		  </row>

		  <row>
		    <entry>4.6.2-RELEASE</entry>
		    <entry>460002</entry>
		  </row>

		  <row>
		    <entry>4.6-STABLE</entry>
		    <entry>460100</entry>
		  </row>

		  <row>
		    <entry>4.6-STABLE after MFC of `sed -i'.</entry>
		    <entry>460101</entry>
		  </row>

		  <row>
		    <entry>4.6-STABLE after MFC of many new pkg_install
		      features from the HEAD.</entry>
		    <entry>460102</entry>
		  </row>

		  <row>
		    <entry>4.7-RELEASE</entry>
		    <entry>470000</entry>
		  </row>

		  <row>
		    <entry>4.7-STABLE</entry>
		    <entry>470100</entry>
		  </row>

		  <row>
		    <entry>Start generated __std{in,out,err}p references rather
		      than __sF.  This changes std{in,out,err} from a 
		      compile time expression to a runtime one.</entry>
		    <entry>470101</entry>
		  </row>

		  <row>
		    <entry>4.7-STABLE after MFC of mbuf changes to replace
		       m_aux mbufs by m_tag's</entry>
		    <entry>470102</entry>
		  </row>

		  <row>
		    <entry>4.7-STABLE gets OpenSSL 0.9.7</entry>
		    <entry>470103</entry>
		  </row>

		  <row>
		    <entry>4.8-RELEASE</entry>
		    <entry>480000</entry>
		  </row>

		  <row>
		    <entry>4.8-STABLE</entry>
		    <entry>480100</entry>
		  </row>

		  <row>
                    <entry>4.8-STABLE after &man.realpath.3; has been made
		      thread-safe</entry>
		    <entry>480101</entry>
		  </row>

		  <row>
		    <entry>4.8-STABLE 3ware API changes to twe.</entry>
		    <entry>480102</entry>
		  </row>

		  <row>
		    <entry>4.9-RELEASE</entry>
		    <entry>490000</entry>
		  </row>

		  <row>
		    <entry>4.9-STABLE</entry>
		    <entry>490100</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT</entry>
		    <entry>500000</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after adding addition ELF header fields,
		      and changing our ELF binary branding method.</entry>
		    <entry>500001</entry>
		  </row>

                  <row>
                    <entry>5.0-CURRENT after kld metadata changes.</entry>
                    <entry>500002</entry>
                  </row>

                  <row>
                    <entry>5.0-CURRENT after buf/bio changes.</entry>
                    <entry>500003</entry>
                  </row>

                  <row>
                    <entry>5.0-CURRENT after binutils upgrade.</entry>
                    <entry>500004</entry>
                  </row>

                  <row>
                    <entry>5.0-CURRENT after merging libxpg4 code into
                      libc and after TASKQ interface introduction.</entry>
                    <entry>500005</entry>
                  </row>

                  <row>
                    <entry>5.0-CURRENT after the addition of AGP
                      interfaces.</entry>
                    <entry>500006</entry>
                  </row>

		  <row>
		    <entry>5.0-CURRENT after Perl upgrade to 5.6.0</entry>
		    <entry>500007</entry>
		  </row>

                  <row>
                    <entry>5.0-CURRENT after the update of KAME code to
                      2000/07 sources.</entry>
                    <entry>500008</entry>
                  </row>

		  <row>
		    <entry>5.0-CURRENT after ether_ifattach() and
		      ether_ifdetach() changes.</entry>
		    <entry>500009</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after changing mtree defaults	
		      back to original variant, adding -L to follow 
		      symlinks.</entry>
		    <entry>500010</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after kqueue API changed.</entry>
		    <entry>500011</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after &man.setproctitle.3; moved from
		      libutil to libc.</entry>
		    <entry>500012</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the first SMPng commit.</entry>
		    <entry>500013</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after &lt;sys/select.h&gt; moved to
		      &lt;sys/selinfo.h&gt;.</entry>
		    <entry>500014</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after combining libgcc.a and
		      libgcc_r.a, and associated GCC linkage changes.</entry>
		    <entry>500015</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after change allowing libc and libc_r
		      to be linked together, deprecating -pthread
                      option.</entry>
		    <entry>500016</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after switch from struct ucred to
                      struct xucred to stabilize kernel-exported API for
                      mountd et al.</entry>
		    <entry>500017</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after addition of CPUTYPE make variable
                      for controlling CPU-specific optimizations.</entry>
		    <entry>500018</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after moving machine/ioctl_fd.h to
                      sys/fdcio.h</entry>
		    <entry>500019</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after locale names renaming.</entry>
		    <entry>500020</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after Bzip2 import.
		    Also signifies removal of S/Key.</entry>
		    <entry>500021</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after SSE support.</entry>
		    <entry>500022</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after KSE Milestone 2.</entry>
		    <entry>500023</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after d_thread_t,
		      and moving UUCP to ports.</entry>
		    <entry>500024</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after ABI change for descriptor
		      and creds passing on 64 bit platforms.</entry>
		    <entry>500025</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after moving to XFree86 4 by default for
		      package builds, and after the new libc strnstr() function
		      was added.</entry>
		    <entry>500026</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the new libc strcasestr() function
		      was added.</entry>
		    <entry>500027</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the userland components of smbfs
		      were imported.</entry>
		    <entry>500028</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the new C99 specific-width
		      integer types were added.</entry>
		    <entry>(Not incremented.)</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after a change was made in the return
		      value of &man.sendfile.2;.</entry>
		    <entry>500029</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the introduction of the
		      type <literal>fflags_t</literal>, which is the
		      appropriate size for file flags.</entry>
		    <entry>500030</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the usb structure element rename.</entry>
		    <entry>500031</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the introduction of
		      Perl 5.6.1.</entry>
		    <entry>500032</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the
		      <literal>sendmail_enable</literal> &man.rc.conf.5;
		      variable was made to take the value
		      <literal>NONE</literal>.</entry>
		    <entry>500033</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after mtx_init() grew a third argument.</entry>
		    <entry>500034</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT with Gcc 3.1.</entry>
		    <entry>500035</entry>
	          </row>

		  <row>
		    <entry>5.0-CURRENT without Perl in /usr/src</entry>
		    <entry>500036</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the addition of &man.dlfunc.3;</entry>
		    <entry>500037</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the types of some struct
		      sockbuf members were changed and the structure was
		      reordered.</entry>
		    <entry>500038</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after headers stopped using
		      _BSD_FOO_T_ and started using _FOO_T_DECLARED.
		      This value can also be used as a conservative
		      estimate of the start of &man.bzip2.1; package
		      support.</entry>
		    <entry>500039</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after various changes to disk functions
		      were made in the name of removing dependency on disklabel
		      structure internals.</entry>
		    <entry>500040</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after the addition of &man.getopt.long.3;
		      to libc.</entry>
		    <entry>500041</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after Binutils 2.13 upgrade, which
		      included new FreeBSD emulation, vec, and output format.
		      </entry>
		    <entry>500042</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after adding weak pthread_XXX stubs
		      to libc, obsoleting libXThrStub.so.  5.0-RELEASE.</entry>
		    <entry>500043</entry>
		  </row>

		  <row>
		    <entry>5.0-CURRENT after branching for RELENG_5_0</entry>
		    <entry>500100</entry>
		  </row>
		  <row>
		    <entry>&lt;sys/dkstat.h&gt; is empty and should 
		    not be included.</entry>
		    <entry>500101</entry>
		  </row>
		  <row>
		    <entry>5.0-CURRENT after the d_mmap_t interface
		      change.</entry>
		    <entry>500102</entry>
		  </row>
                  <row>
                    <entry>5.0-CURRENT after taskqueue_swi changed to run
                      without Giant, and taskqueue_swi_giant added to run
                      with Giant.</entry>
                    <entry>500103</entry>
                  </row>
		  <row>
		    <entry>cdevsw_add() and cdevsw_remove() no
		      longer exists.
		      Appearance of MAJOR_AUTO allocation facility.</entry>
		    <entry>500104</entry>
		  </row>
                  <row>
                    <entry>5.0-CURRENT after new cdevsw initialization method.</entry>
                    <entry>500105</entry>
                  </row>
                  <row>
                    <entry>devstat_add_entry() has been replaced by
		      devstat_new_entry()</entry>
                    <entry>500106</entry>
                  </row>
                  <row>
                    <entry>Devstat interface change; see sys/sys/param.h 1.149</entry>
                    <entry>500107</entry>
                  </row>
                  <row>
                    <entry>Token-Ring interface changes.</entry>
                    <entry>500108</entry>
                  </row>
                  <row>
                    <entry>Addition of vm_paddr_t.</entry>
                    <entry>500109</entry>
                  </row>
                  <row>
                    <entry>5.0-CURRENT after &man.realpath.3; has been made
		      thread-safe</entry>
                    <entry>500110</entry>
                  </row>
                  <row>
                    <entry>5.0-CURRENT after &man.usbhid.3; has been synced with
		      NetBSD</entry>
                    <entry>500111</entry>
                  </row>
                  <row>
                    <entry>5.0-CURRENT after new NSS implementation
		      and addition of POSIX.1 getpw*_r, getgr*_r
		      functions</entry>
                    <entry>500112</entry>
                  </row>
                  <row>
                    <entry>5.0-CURRENT after removal of the old rc system.</entry>
                    <entry>500113</entry>
                  </row>
                  <row>
                    <entry>5.1-RELEASE.</entry>
                    <entry>501000</entry>
                  </row>
                  <row>
                    <entry>5.1-CURRENT after branching for RELENG_5_1.</entry>
                    <entry>501100</entry>
                  </row>
                  <row>
                    <entry>5.1-CURRENT after correcting the semantics of
		      sigtimedwait(2) and sigwaitinfo(2).</entry>
                    <entry>501101</entry>
                  </row>
		  <row>
		    <entry>5.1-CURRENT after adding the lockfunc and lockfuncarg
		      fields to &man.bus.dma.tag.create.9;.</entry>
		    <entry>501102</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after GCC 3.3.1-pre 20030711 snapshot
		      integration.</entry>
		    <entry>501103</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT 3ware API changes to twe.</entry>
		    <entry>501104</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT dynamically-linked /bin and /sbin
		      support and movement of libraries to /lib.</entry>
		    <entry>501105</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after adding kernel support for
		      Coda 6.x.</entry>
		    <entry>501106</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after 16550 UART constants moved from
		      <filename>&lt;dev/sio/sioreg.h&gt;</filename> to
		      <filename>&lt;dev/ic/ns16550.h&gt;</filename>.
		      Also when libmap functionality was unconditional
		      supported by rtld.</entry>
		    <entry>501107</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after PFIL_HOOKS API update</entry>
		    <entry>501108</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after adding kiconv(3)</entry>
		    <entry>501109</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after changing default operations
			for open and close in cdevsw</entry>
		    <entry>501110</entry>
		  </row>
		  <row>
		    <entry>5.1-CURRENT after changed layout of cdevsw</entry>
		    <entry>501111</entry>
		  </row>
		  <row>
		    <entry> 5.1-CURRENT after adding kobj multiple inheritance
		    </entry>
		    <entry>501112</entry>
		  </row>
		  <row>
		    <entry> 5.1-CURRENT after the if_xname change in
		        struct ifnet</entry>
		    <entry>501113</entry>
		  </row>
		  <row>
		    <entry> 5.1-CURRENT after changing /bin and /sbin to
			be dynamically linked</entry>
		    <entry>501114</entry>
		  </row>
		  <row>
		    <entry>5.2-RELEASE</entry>
		    <entry>502000</entry>
		  </row>
		  <row>
		    <entry>5.2-CURRENT after branching for RELENG_5_2</entry>
		    <entry>502100</entry>
		  </row>
		  <row>
		    <entry>5.2-CURRENT after __cxa_atexit/__cxa_finalize
			functions were added to libc.</entry>
		    <entry>502101</entry>
		  </row>
                </tbody>
              </tgroup>
            </informaltable>

        <note>
          <para>Note that 2.2-STABLE sometimes identifies itself as
            <quote>2.2.5-STABLE</quote> after the 2.2.5-RELEASE.  The pattern
            used to be year followed by the month, but we decided to change it
            to a more straightforward major/minor system starting from 2.2.
            This is because the parallel development on several branches made
            it infeasible to classify the releases simply by their real
            release dates.  If you are making a port now, you do not have to
            worry about old -CURRENTs; they are listed here just for your
            reference.</para>
        </note>
      </sect1>

      <sect1 id="dads-after-port-mk">
        <title>Writing something after
          <filename>bsd.port.mk</filename></title>

        <para>Do not write anything after the <literal>.include
            &lt;bsd.port.mk&gt;</literal> line.  It usually can be avoided by
          including <filename>bsd.port.pre.mk</filename> somewhere in the
          middle of your <filename>Makefile</filename> and
          <filename>bsd.port.post.mk</filename> at the end.</para>

        <note>
          <para>You need to include either the
            <filename>bsd.port.pre.mk</filename>/<filename>bsd.port.post.mk</filename> pair or
            <filename>bsd.port.mk</filename> only; do not mix these two usages.</para>
        </note>

        <para><filename>bsd.port.pre.mk</filename> only defines a few
          variables, which can be used in tests in the
          <filename>Makefile</filename>, <filename>bsd.port.post.mk</filename>
          defines the rest.</para>

        <para>Here are some important variables defined in
          <filename>bsd.port.pre.mk</filename> (this is not the complete list,
          please read <filename>bsd.port.mk</filename> for the complete
          list).</para>

        <informaltable frame="none">
          <tgroup cols="2">
            <thead>
              <row>
                <entry>Variable</entry>
                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><makevar>ARCH</makevar></entry>
                <entry>The architecture as returned by <command>uname
                    -m</command> (e.g., <literal>i386</literal>)</entry>
              </row>

              <row>
                <entry><makevar>OPSYS</makevar></entry>
                <entry>The operating system type, as returned by
                  <command>uname -s</command> (e.g.,
                  <literal>FreeBSD</literal>)</entry>
              </row>

              <row>
                <entry><makevar>OSREL</makevar></entry>
                <entry>The release version of the operating system (e.g.,
                  <literal>2.1.5</literal> or
                  <literal>2.2.7</literal>)</entry>
              </row>

              <row>
                <entry><makevar>OSVERSION</makevar></entry>
                <entry>The numeric version of the operating system, same as
                  <link
                    linkend="freebsd-versions"><literal>__FreeBSD_version</literal></link>.</entry>
              </row>

              <row>
                <entry><makevar>PORTOBJFORMAT</makevar></entry>
                <entry>The object format of the system
                  (<literal>aout</literal> or <literal>elf</literal>)</entry>
              </row>

              <row>
                <entry><makevar>LOCALBASE</makevar></entry>
                <entry>The base of the <quote>local</quote> tree (e.g.,
                  <literal>/usr/local/</literal>)</entry>
              </row>

              <row>
                <entry><makevar>X11BASE</makevar></entry>
                <entry>The base of the <quote>X11</quote> tree (e.g.,
                  <literal>/usr/X11R6</literal>)</entry>
              </row>

              <row>
                <entry><makevar>PREFIX</makevar></entry>
                <entry>Where the port installs itself (see <link
                    linkend="porting-prefix">more on
                    <makevar>PREFIX</makevar></link>).</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <note>
          <para>If you have to define the variables
            <makevar>USE_IMAKE</makevar>, <makevar>USE_X_PREFIX</makevar>, or
            <makevar>MASTERDIR</makevar>, do so before including
            <filename>bsd.port.pre.mk</filename>.</para>
        </note>

        <para>Here are some examples of things you can write after
          <filename>bsd.port.pre.mk</filename>:</para>

        <programlisting># no need to compile lang/perl5 if perl5 is already in system
.if ${OSVERSION} > 300003
BROKEN= perl is in system
.endif

# only one shlib version number for ELF
.if ${PORTOBJFORMAT} == "elf"
TCL_LIB_FILE=  ${TCL_LIB}.${SHLIB_MAJOR}
.else
TCL_LIB_FILE=  ${TCL_LIB}.${SHLIB_MAJOR}.${SHLIB_MINOR}
.endif

# software already makes link for ELF, but not for a.out
post-install:
.if ${PORTOBJFORMAT} == "aout"
       ${LN} -sf liblinpack.so.1.0 ${PREFIX}/lib/liblinpack.so
.endif</programlisting>
      </sect1>

      <sect1 id="dads-documentation">
        <title>Install additional documentation</title>

        <para>If your software has some documentation other than the standard
          man and info pages that you think is useful for the user, install it
          under <filename><makevar>PREFIX</makevar>/share/doc</filename>.
          This can be done, like the previous item, in the
          <maketarget>post-install</maketarget> target.</para>

        <para>Create a new directory for your port.  The directory name should
          reflect what the port is.  This usually means
          <makevar>PORTNAME</makevar>. However, if you
          think the user might want different versions of the port to be
          installed at the same time, you can use the whole
          <makevar>PKGNAME</makevar>.</para>

        <para>Make the installation dependent to the variable
          <makevar>NOPORTDOCS</makevar> so that users can disable it in
          <filename>/etc/make.conf</filename>, like this:</para>

        <programlisting>post-install:
.if !defined(NOPORTDOCS)
        ${MKDIR} ${DOCSDIR}
        ${INSTALL_MAN} ${WRKSRC}/docs/xvdocs.ps ${DOCSDIR}
.endif</programlisting>

	<para>Here are some variables and how they are expanded when used
	  in the <filename>Makefile</filename>:</para>

	<itemizedlist>
	  <listitem>
	    <para><literal>${DATADIR}</literal> gets expanded to
	      <filename>${PREFIX}/share/${PORTNAME}</filename>.</para>
	  </listitem>
	  
	  <listitem>
	    <para><literal>${DOCSDIR}</literal> gets expanded to
	      <filename>${PREFIX}/share/doc/${PORTNAME}</filename>.</para>
	  </listitem>

	  <listitem>
	    <para><literal>${EXAMPLESDIR}</literal> gets expanded to
	      <filename>${PREFIX}/share/examples/${PORTNAME}</filename>.</para>
	  </listitem>
	</itemizedlist>

	<para>All documentation files and directories installed should
	  be included in <filename>pkg-plist</filename> with the
	  <literal>%%PORTDOCS%%</literal> prefix, for example:</para>

	<programlisting>%%PORTDOCS%%%%DOCSDIR%%/AUTHORS
%%PORTDOCS%%%%DOCSDIR%%/CONTACT
%%PORTDOCS%%@dirrm %%DOCSDIR%%</programlisting>

        <para>You can also use the <filename>pkg-message</filename> file to
          display messages upon installation.  See the <link
          linkend="porting-message">using
          <filename>pkg-message</filename></link> section for
          details.</para>

        <note>
          <para><filename>pkg-message</filename> does not need to be added to
            <filename>pkg-plist</filename>.</para>
        </note>
      </sect1>

      <sect1 id="dads-subdirs">
        <title>Subdirectories</title>

        <para>Try to let the port put things in the right subdirectories of
          <makevar>PREFIX</makevar>.  Some ports lump everything and put it in
          the subdirectory with the port's name, which is incorrect.  Also,
          many ports put everything except binaries, header files and manual
          pages in the a subdirectory of <filename>lib</filename>, which does
          not bode well with the BSD paradigm.  Many of the files should be
          moved to one of the following: <filename>etc</filename>
          (setup/configuration files), <filename>libexec</filename>
          (executables started internally), <filename>sbin</filename>
          (executables for superusers/managers), <filename>info</filename>
          (documentation for info browser) or  <filename>share</filename>
          (architecture independent files).  See &man.hier.7; for details;
          the rules governing
          <filename>/usr</filename> pretty much apply to
          <filename>/usr/local</filename> too.  The exception are ports
          dealing with USENET <quote>news</quote>.  They may use
          <filename><makevar>PREFIX</makevar>/news</filename> as a destination
          for their files.</para>
      </sect1>

      <sect1 id="porting-cleaning">
        <title>Cleaning up empty directories</title>

        <para>Do make your ports clean up after themselves when they are
          deinstalled.  This is usually accomplished by adding
          <literal>@dirrm</literal> lines for all directories that are
          specifically created by the port.  You need to delete subdirectories
          before you can delete parent directories.</para>

        <programlisting> :
lib/X11/oneko/pixmaps/cat.xpm
lib/X11/oneko/sounds/cat.au
 :
@dirrm lib/X11/oneko/pixmaps
@dirrm lib/X11/oneko/sounds
@dirrm lib/X11/oneko</programlisting>

        <para>However, sometimes <literal>@dirrm</literal> will give you
          errors because other ports also share the same subdirectory.  You
          can call <command>rmdir</command> from <literal>@unexec</literal> to
          remove only empty directories without warning.</para>

        <programlisting>@unexec rmdir %D/share/doc/gimp 2>/dev/null || true</programlisting>

        <para>This will neither print any error messages nor cause
          &man.pkg.delete.1; to exit abnormally even if
          <filename><makevar>PREFIX</makevar>/share/doc/gimp</filename> is not
          empty due to other ports installing some files in there.</para>
      </sect1>

      <sect1 id="dads-uid">
        <title>UIDs</title>

        <para>If your port requires a certain user to be on the installed
          system, let the <filename>pkg-install</filename> script call
          <command>pw</command> to create it automatically.  Look at
          <filename role="package">net/cvsup-mirror</filename> for an example.</para>

        <para>If your port must use the same user/group ID number when it is
          installed as a binary package as when it was compiled, then you must
          choose a free UID from 50 to 999 and register it below.  Look at
          <filename role="package">japanese/Wnn</filename> for an example.</para>

        <para>Make sure you do not use a UID already used by the system or
          other ports.  This is the current list of UIDs between 50 and
          999.</para>

	<!-- Please keep this list sorted by uid -->
        <programlisting>majordom:*:54:54:Majordomo Pseudo User:/usr/local/majordomo:/nonexistent
cyrus:*:60:60:the cyrus mail server:/nonexistent:/nonexistent
gnats:*:61:1:GNATS database owner:/usr/local/share/gnats/gnats-db:/bin/sh
proxy:*:62:62:Packet Filter pseudo-user:/nonexistent:/nonexistent
uucp:*:66:66:UUCP pseudo-user:/var/spool/uucppublic:/usr/libexec/uucp/uucico
xten:*:67:67:X-10 daemon:/usr/local/xten:/nonexistent
pop:*:68:6:Post Office Owner (popper):/nonexistent:/sbin/nologin
wnn:*:69:7:Wnn:/nonexistent:/nonexistent
pgsql:*:70:70:PostgreSQL pseudo-user:/usr/local/pgsql:/bin/sh
oracle:*:71:71::0:0:Oracle:/usr/local/oracle7:/sbin/nologin
ircd:*:72:72:IRC daemon:/nonexistent:/nonexistent
ircservices:*:73:73:IRC services:/nonexistent:/nonexistent
ifmail:*:75:66:Ifmail user:/nonexistent:/nonexistent
www:*:80:80:World Wide Web Owner:/nonexistent:/sbin/nologin
alias:*:81:81:QMail user:/var/qmail/alias:/nonexistent
qmaild:*:82:81:QMail user:/var/qmail:/nonexistent
qmaill:*:83:81:QMail user:/var/qmail:/nonexistent
qmailp:*:84:81:QMail user:/var/qmail:/nonexistent
qmailq:*:85:82:QMail user:/var/qmail:/nonexistent
qmailr:*:86:82:QMail user:/var/qmail:/nonexistent
qmails:*:87:82:QMail user:/var/qmail:/nonexistent
msql:*:87:87:mSQL-2 pseudo-user:/var/db/msqldb:/bin/sh
mysql:*:88:88:MySQL Daemon:/var/db/mysql:/sbin/nologin
vpopmail:*:89:89:VPop Mail User:/usr/local/vpopmail:/nonexistent
smmsp:*:90:90:Sendmail Queue:/nonexistent:/nonexistent
mailman:*:91:91:Mailman User:/usr/local/mailman:/sbin/nologin
gdm:*:92:92:GDM Sandbox:/:/sbin/nologin
jabber:*:93:93:Jabber Daemon:/nonexistent:/nonexistent
p4admin:*:94:94:Perforce admin:/usr/local/perforce:/sbin/nologin
interch:*:95:95:Interchange user:/usr/local/interchange:/sbin/nologin
squeuer:*:96:96:SQueuer Owner:/nonexistent:/bin/sh
mud:*:97:97:MUD Owner:/usr/local/share/dgd:/bin/sh
rscsi:*:99:99:Remote SCSI:/usr/local/rscsi:/usr/local/sbin/rscsi
fido:*:111:111:Fido System:/usr/local/fido:/bin/sh
ldap:*:389:389:OpenLDAP Server:/nonexistent:/sbin/nologin
drweb:*:426:426:Dr.Web Mail Scanner:/nonexistent:/sbin/nologin
bacula:*:910:910:Bacula Daemon:/var/db/bacula:/sbin/nologin</programlisting>

        <para>Please include a notice when you submit a port (or an upgrade)
          that reserves a new UID or GID in this range.  This allows us to
          keep the list of reserved IDs up to date.</para>
      </sect1>

      <sect1 id="dads-rational">
        <title>Do things rationally</title>

        <para>The <filename>Makefile</filename> should do things simply and
          reasonably.  If you can make it a couple of lines shorter or more
          readable, then do so.  Examples include using a make
          <literal>.if</literal> construct instead of a shell
          <literal>if</literal> construct, not redefining
          <maketarget>do-extract</maketarget> if you can redefine
          <makevar>EXTRACT*</makevar> instead, and using
          <makevar>GNU_CONFIGURE</makevar> instead of <literal>CONFIGURE_ARGS
            += --prefix=&dollar;{PREFIX}</literal>.</para>
      </sect1>

      <sect1 id="dads-cc">
	<title>Respect both <makevar>CC</makevar> and
	  <makevar>CXX</makevar></title>

	<para>The port should respect both <makevar>CC</makevar>
	  and <makevar>CXX</makevar> variables.  If it does not,
	  please add <literal>NO_PACKAGE=ignores either cc or
	  cxx</literal> to the <filename>Makefile</filename>.</para>

	<para>An example of a <filename>Makefile</filename> respecting
	  both <makevar>CC</makevar> and <makevar>CXX</makevar>
	  variables follows.  Note the <makevar>?=</makevar>:</para>

	<programlisting>CC ?= gcc</programlisting>
	<programlisting>CXX ?= g++</programlisting>

	<para>Here is an example which respects neither
	  <makevar>CC</makevar> nor <makevar>CXX</makevar>
	  variables:</para>
      
	<programlisting>CC = gcc</programlisting>
	<programlisting>CXX = g++</programlisting>

	<para>Both <makevar>CC</makevar> and <makevar>CFLAGS</makevar>
	  variables can be defined on FreeBSD systems in
	  <filename>/etc/make.conf</filename>.  The first example
	  defines a value if it was not previously set in
	  <filename>/etc/make.conf</filename>, preserving any
	  system-wide definitions.  The second example clobbers
	  anything previously defined.</para>
      </sect1>

      <sect1 id="dads-cflags">
        <title>Respect <makevar>CFLAGS</makevar></title>

        <para>The port should respect the <makevar>CFLAGS</makevar> variable.
          If it does not, please add <literal>NO_PACKAGE=ignores
            cflags</literal> to the <filename>Makefile</filename>.</para>

	<para>An example of a <filename>Makefile</filename> respecting
	  the <makevar>CFLAGS</makevar> variable follows.  Note the
	  <makevar>+=</makevar>:</para>

	<programlisting>CFLAGS += -Wall -Werror</programlisting>

	<para>Here is an example which does not respect the
	  <makevar>CFLAGS</makevar> variable:</para>

	<programlisting>CFLAGS = -Wall -Werror</programlisting>

	<para>The <makevar>CFLAGS</makevar> variable is defined on
	  FreeBSD systems in <filename>/etc/make.conf</filename>.  The
	  first example appends additional flags to the
	  <makevar>CFLAGS</makevar> variable, preserving any system-wide
	  definitions.  The second example clobbers anything previously
	  defined.</para>
      </sect1>

      <sect1 id="dads-config">
        <title>Configuration files</title>

        <para>If your port requires some configuration files in
          <filename><makevar>PREFIX</makevar>/etc</filename>, do
          <emphasis>not</emphasis> just install them and list them in
          <filename>pkg-plist</filename>.  That will cause
          &man.pkg.delete.1; to delete files carefully edited by
          the user and a new installation to wipe them out.</para>

        <para>Instead, install sample files with a suffix
          (<filename><replaceable>filename</replaceable>.sample</filename>
          will work well) and print out a <link
            linkend="porting-message">message</link> pointing out that the
          user has to copy and edit the file before the software can be made
          to work.</para>
      </sect1>

      <sect1 id="dads-freedback">
        <title>Feedback</title>

        <para>Do send applicable changes/patches to the original
          author/maintainer for inclusion in next release of the code.  This
          will only make your job that much easier for the next
          release.</para>
      </sect1>

      <sect1 id="dads-readme">
        <title><filename>README.html</filename></title>

        <para>Do not include the <filename>README.html</filename> file.  This
          file is not part of the cvs collection but is generated using the
          <command>make readme</command> command.
        </para>
      </sect1>

      <sect1 id="dads-broken">
        <title>Marking a port <makevar>BROKEN</makevar>, <makevar>FORBIDDEN</makevar>, or otherwise</title>

	<para>Invariably there will come a time when a particular port
	will contain a security vulnerability, will be radically
	broken and needs many hours of tender loving care, or is
	generally obsoleted, but for one reason or another should
	remain in the tree (and get fixed, right?).  To designate a
	port as broken, there are three <command>make</command>
	variables that can be used in a port's
	<filename>Makefile</filename>.  The value of the following
	<command>make</command> variables will be the reason that is
	given back to users for why the port was marked as broken.
	Please use the correct <command>make</command> variable as
	each make variable conveys radically different meanings to
	both users, and to automated systems that parse
	<filename>Makefile</filename>s.</para>

	<itemizedlist>
	  <listitem>
	    <para><makevar>BROKEN</makevar> is reserved for ports that
	      do not work and should not be installed by users.  This
	      will prevent users from installing the port, however,
	      ports marked as <makevar>BROKEN</makevar> will still be
	      built by <ulink url="http://bento.FreeBSD.org/">the
	      Bento cluster</ulink>.  Do mark ports as
	      <makevar>BROKEN</makevar> if you want users to not
	      install this port, but you still want to have it built
	      by Bento.</para>
	  </listitem>

	  <listitem>
	    <para><makevar>FORBIDDEN</makevar> is used for ports that
	      do contain a security vulnerability or induce grave
	      concern regarding the security of a FreeBSD system with
	      a given port installed (ex: a reputably insecure program
	      or a program that provides easily exploitable services).
	      Ports should be marked as <makevar>FORBIDDEN</makevar>
	      as soon as a particular piece of software has a
	      vulnerability and there is no released upgrade.  Ideally
	      ports should be upgraded as soon as possible when a
	      security vulnerability is discovered so as to reduce the
	      number of vulnerable FreeBSD hosts (we like being known
	      for being secure), however sometimes there is a
	      noticeable time gap between disclosure of a
	      vulnerability and an updated software release of a piece
	      of vulnerable software.  Do not mark a port
	      <makevar>FORBIDDEN</makevar> for any reason other than
	      security.</para>
	  </listitem>

	  <listitem>
	    <para><makevar>IGNORE</makevar> is reserved for ports that
	      should not be built for one reason or another.  Users
	      and <ulink url="http://bento.FreeBSD.org/">the Bento
	      cluster</ulink> cluster will not, under any
	      circumstances, build ports marked as
	      <makevar>IGNORE</makevar>.  If in doubt, do use
	      <makevar>IGNORE</makevar> to prevent a port from being
	      built.</para>
	  </listitem>

	</itemizedlist>

	<para>Do remember that these variables are to be used as a
	  last resort if a port is not upgradeable.  Permanently
	  broken ports should be removed from the tree
	  entirely.</para>
      </sect1>

      <sect1 id="dads-misc">
        <title>Miscellanea</title>

        <para>The files
          <filename>pkg-descr</filename> and <filename>pkg-plist</filename>
          should each be double-checked.  If you are reviewing a port and feel
          they can be worded better, do so.</para>

        <para>Do not copy more copies of the GNU General Public License into
          our system, please.</para>

        <para>Please be careful to note any legal issues! Do not let us
          illegally distribute software!</para>
      </sect1>

      <sect1 id="dads-stuck">
        <title>If you are stuck&hellip;</title>

        <para>Do look at existing examples and the
          <filename>bsd.port.mk</filename> file before asking us questions!
          <!-- smiley --><emphasis>;-)</emphasis></para>

        <para>Do ask us questions if you have any trouble! Do not just beat
          your head against a wall! <!-- smiley
          --><emphasis>:-)</emphasis></para>
      </sect1>
    </chapter>

    <chapter id="porting-samplem">
      <title>A Sample <filename>Makefile</filename></title>

      <para>Here is a sample <filename>Makefile</filename> that you can use to
        create a new port.  Make sure you remove all the extra comments (ones
        between brackets)!</para>

      <para>It is recommended that you follow this format (ordering of
        variables, empty lines between sections, etc.).  This format is
        designed so that the most important information is easy to locate.  We
        recommend that you use <link
          linkend="porting-portlint">portlint</link> to check the
        <filename>Makefile</filename>.</para>

      <programlisting>[the header...just to make it easier for us to identify the ports.]
# New ports collection makefile for:   xdvi
[the "version required" line is only needed when the PORTVERSION
 variable is not specific enough to describe the port.]
# Date created:                26 May 1995
[this is the person who did the original port to FreeBSD, in particular, the
person who wrote the first version of this Makefile.  Remember, this should
not be changed when upgrading the port later.]
# Whom:                        Satoshi Asami &lt;asami@FreeBSD.org&gt;
#
# &dollar;FreeBSD&dollar;
[ ^^^^^^^^^ This will be automatically replaced with RCS ID string by CVS
when it is committed to our repository.  If upgrading a port, do not alter
this line back to "&dollar;FreeBSD&dollar;".  CVS deals with it automatically.]
#

[section to describe the port itself and the master site - PORTNAME
 and PORTVERSION are always first, followed by CATEGORIES,
 and then MASTER_SITES, which can be followed by MASTER_SITE_SUBDIR.
 PKGNAMEPREFIX and PKGNAMESUFFIX, if needed, will be after that.
 Then comes DISTNAME, EXTRACT_SUFX and/or DISTFILES, and then
 EXTRACT_ONLY, as necessary.]
PORTNAME=      xdvi
PORTVERSION=   18.2
CATEGORIES=    print
[do not forget the trailing slash ("/")!
 if you are not using MASTER_SITE_* macros]
MASTER_SITES=  ${MASTER_SITE_XCONTRIB}
MASTER_SITE_SUBDIR= applications
PKGNAMEPREFIX= ja-
DISTNAME=      xdvi-pl18
[set this if the source is not in the standard ".tar.gz" form]
EXTRACT_SUFX=  .tar.Z

[section for distributed patches -- can be empty]
PATCH_SITES=   ftp://ftp.sra.co.jp/pub/X11/japanese/
PATCHFILES=    xdvi-18.patch1.gz xdvi-18.patch2.gz

[maintainer; *mandatory*!  This is the person (preferably with commit
 privileges) whom a user can contact for questions and bug reports - this
 person should be the porter or someone who can forward questions to the
 original porter reasonably promptly.  If you really do not want to have
 your address here, set it to "ports@FreeBSD.org".]
MAINTAINER=    asami@FreeBSD.org
COMMENT=       A DVI Previewer for the X Window System

[dependencies -- can be empty]
RUN_DEPENDS=   gs:${PORTSDIR}/print/ghostscript
LIB_DEPENDS=   Xpm.5:${PORTSDIR}/graphics/xpm

[this section is for other standard bsd.port.mk variables that do not
 belong to any of the above]
[If it asks questions during configure, build, install...]
IS_INTERACTIVE=        yes
[If it extracts to a directory other than ${DISTNAME}...]
WRKSRC=                ${WRKDIR}/xdvi-new
[If the distributed patches were not made relative to ${WRKSRC}, you
 may need to tweak this]
PATCH_DIST_STRIP=      -p1
[If it requires a "configure" script generated by GNU autoconf to be run]
GNU_CONFIGURE= yes
[If it requires GNU make, not /usr/bin/make, to build...]
USE_GMAKE=     yes
[If it is an X application and requires "xmkmf -a" to be run...]
USE_IMAKE=     yes
[et cetera.]

[non-standard variables to be used in the rules below]
MY_FAVORITE_RESPONSE=  "yeah, right"

[then the special rules, in the order they are called]
pre-fetch:
        i go fetch something, yeah

post-patch:
        i need to do something after patch, great

pre-install:
        and then some more stuff before installing, wow

[and then the epilogue]
.include &lt;bsd.port.mk&gt;</programlisting>
    </chapter>

    <chapter id="porting-autoplist">
      <title>Automated package list creation</title>

      <para>First, make sure your port is almost complete, with only
        <filename>pkg-plist</filename> missing.</para>

      <para>Next, create a temporary directory tree into which your port can be
        installed, and install any dependencies.
	<replaceable>port-type</replaceable> should be <literal>local</literal>
	for non-X ports and <literal>x11-4</literal> or <literal>x11</literal>
	for ports which install into the directory hierarchy of XFree86 4
	or an earlier XFree86 release, respectively.</para>

      <screen>&prompt.root; <userinput>mkdir /var/tmp/<replaceable>port-name</replaceable></userinput>
&prompt.root; <userinput>mtree -U -f /etc/mtree/BSD.<replaceable>port-type</replaceable>.dist -d -e -p /var/tmp/<replaceable>port-name</replaceable></userinput>
&prompt.root; <userinput>make depends PREFIX=/var/tmp/<replaceable>port-name</replaceable></userinput></screen>

      <para>Store the directory structure in a new file.</para>

      <screen>&prompt.root; <userinput>(cd /var/tmp/<replaceable>port-name</replaceable> && find -d * -type d) | sort &gt; OLD-DIRS</userinput></screen>

      <para>Create an empty <filename>pkg-plist</filename> file:</para>

      <screen>&prompt.root; <userinput>touch pkg-plist</userinput></screen>

      <para>If your port honors <makevar>PREFIX</makevar> (which it should)
        you can then install the port and create the package list.</para>

      <screen>&prompt.root; <userinput>make install PREFIX=/var/tmp/<replaceable>port-name</replaceable></userinput>
&prompt.root; <userinput>(cd /var/tmp/<replaceable>port-name</replaceable> && find -d * \! -type d) | sort &gt; pkg-plist</userinput></screen>

      <para>You must also add any newly created directories to the packing
        list.</para>

      <screen>&prompt.root; <userinput>(cd /var/tmp/<replaceable>port-name</replaceable> && find -d * -type d) | sort | comm -13 OLD-DIRS - | sort -r | sed -e 's#^#@dirrm #' &gt;&gt; pkg-plist</userinput></screen>

      <para>Finally, you need to tidy up the packing list by hand; it is not
        <emphasis>all</emphasis> automated.  Manual pages should be listed in
        the port's <filename>Makefile</filename> under
        <makevar>MAN<replaceable>n</replaceable></makevar>, and not in the
        package list.  User configuration files should be removed, or
        installed as
        <filename><replaceable>filename</replaceable>.sample</filename>.
        The <filename>info/dir</filename> file should not be listed
        and appropriate <filename>install-info</filename> lines should
        be added as noted in the <link linkend="porting-info">info
        files</link> section.  Any
        libraries installed by the port should be listed as specified in the
        <link linkend="porting-shlibs">shared libraries</link> section.</para>

      <para>Alternatively, use the <command>plist</command> script in
	<filename>/usr/ports/Tools/scripts/</filename> to build the
	package list automatically.</para>
    </chapter>

    <chapter id="changes">
      <title>Changes to this document and the ports system</title>

      <para>If you maintain a lot of ports, you should consider following the
        &a.ports;.  Important changes to the way ports work will be announced
        there.  You can always find more detailed information on the latest
        changes by looking at <ulink
          url="http://www.FreeBSD.org/cgi/cvsweb.cgi/ports/Mk/bsd.port.mk"> the
          bsd.port.mk CVS log</ulink>.</para>

      <para>Other resources to assist port maintainers include a list of
	<ulink url="http://bento.FreeBSD.org/">package building logs and
	errors </ulink> and the <ulink
	  url="http://people.FreeBSD.org/~fenner/portsurvey/">FreeBSD
	  Ports distfiles survey</ulink>.</para>
    </chapter>
</book>

<!--
     Local Variables:
     mode: sgml
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     End:
-->
