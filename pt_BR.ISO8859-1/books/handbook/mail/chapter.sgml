<!--
     The FreeBSD Documentation Project

     $FreeBSD: pt_BR.ISO8859-1/books/handbook/mail/chapter.sgml,v 1.6 2003/12/11 15:25:26 jmelo Exp $
-->

<chapter id="mail">
  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Bill</firstname>
	<surname>Lloyd</surname>
	<contrib>Original work by </contrib>
      </author>
    </authorgroup>
    <authorgroup>
      <author>
	<firstname>Jim</firstname>
	<surname>Mock</surname>
	<contrib>Rewritten by </contrib>
	<!-- 2 Dec 1999 -->
      </author>
    </authorgroup>
  </chapterinfo>

  <title>Correio eletr&ocirc;nico</title>

  <sect1 id="mail-synopsis">
    <title>Sin&oacute;pse</title>
    <indexterm><primary>email</primary></indexterm>
    <indexterm><primary>correio eletr&ocirc;nico</primary></indexterm>

    <para><quote>Correio eletr&ocirc;nico</quote>, mais conhecido como email, &eacute; uma das formas mais usadas de comunica&ccedil;&atilde;o atualmente.  
      Este cap&iacute;tulo descreve uma introdu&ccedil;&atilde;o b&aacute;sica da execu&ccedil;&atilde;o de um servidor de correio eletr&ocirc;nico no FreeBSD.  
      No entanto, esta n&atilde;o &eacute; uma refer&ecirc;ncia completa e de fato v&aacute;rias considera&ccedil;&otilde;es importantes s&atilde;o omitidas.  
      Para uma abrang&ecirc;ncia mais completa sobre esse assunto, leia a lista de refer&ecirc;ncias de excelentes livros 
      listados em <xref linkend="bibliography">.  </para>

    <para>Ap&oacute;s ler este cap&iacute;tulo voc&ecirc; saber&aacute;:</para>

    <itemizedlist>
      <listitem>
	<para>Quais componentes de software est&atilde;o envolvidos no envio e recebimento do correio eletr&ocirc;nico.  </para>
      </listitem>

      <listitem>
	<para>Onde a configura&ccedil;&atilde;o b&aacute;sica do <application>sendmail</application> est&aacute; no localizada no FreeBSD.  </para>
      </listitem>

      <listitem>
	<para>Como bloquear <literal>spammer</literal> de usar ilegalmente seu servidor de correio como relay.  </para>
      </listitem>

      <listitem>
	<para>Como instalar e configurar um servidor de correio alternativo em seu sistema, substituindo o  <application>sendmail</application>.  </para>
      </listitem>

      <listitem>
	<para>Como resolver problemas comuns no seu servidor de correio eletr&ocirc;nico.  </para>
      </listitem>
      
      <listitem>
	<para>Como usar SMTP com UUCP.  </para>
      </listitem>

      <listitem>
	<para>Como usar o correio com uma conex&acirc;o dialup.  </para>
      </listitem>

      <listitem>
        <para>Como configurar uma autentica&ccedil;&atilde;o SMTP para melhorar a seguran&ccedil;a.  </para>
      </listitem>
    </itemizedlist>

    <para>Antes de ler este cap&iacute;tulo voc&ecirc; deve ter:  </para>

    <itemizedlist>
      <listitem>
	<para>Configurado corretamente sua conex&atilde;o de rede
	  (<xref linkend="advanced-networking">).  </para>
      </listitem>

      <listitem>
	<para>Configurado corretamente as informa&ccedil;&otilde;es do DNS para seu host de correio
	  (<xref linkend="advanced-networking">).</para>
      </listitem>

      <listitem>
	<para>Saber como instalar software adicional de terceiros
	  (<xref linkend="ports">).  </para></listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="mail-using">
    <title>Usando o correio eletr&ocirc;nico</title>
    <indexterm><primary>POP</primary></indexterm>
    <indexterm><primary>IMAP</primary></indexterm>
    <indexterm><primary>DNS</primary></indexterm>

    <para>Existe cinco principais partes envolvidas na troca de email.  Elas s&atilde;o:  
      <link linkend="mail-mua">O programa do usu&aacute;rio</link>, <link
      linkend="mail-mta">O daemon do servidor</link>, <link
      linkend="mail-dns">DNS</link>, <link linkend="mail-receive">o POP ou 
      o daemon do IMAP </link>, e &eacute; claro, <link linkend="mail-host">o 
      pr&oacute;rio servidor de email</link>.</para>

    <sect2 id="mail-mua">
      <title>O programa de usu&aacute;rio</title>

      <para>Isto inclue programas de linha de comando como
        <application>mutt</application>, <application>pine</application>,
	<application>elm</application>, e
	<application>mail</application>, e programas GUI como
	<application>balsa</application>,
	<application>xfmail</application> para falar de alguns, e muito 
	mais <quote>sofisticados</quote> como o navegador WWW.  Estes 
	programas simplesmente passam as transa&ccedil;&otilde;es de email para o <link linkend="mail-host"><quote>servidor de email</quote></link> local,
	chamando qualquer um dos <link linkend="mail-mta">daemons do servidor</link> dispon&iacute;vel ou entregando atrav&eacute;s de TCP.  </para>
    </sect2>

    <sect2 id="mail-mta">
      <title>Daemon do servidor de email</title>
      <indexterm>
        <primary>daemons do servidor de email</primary>
        <secondary><application>sendmail</application></secondary>
      </indexterm>
      <indexterm>
        <primary>daemons do servidor de email</primary>
        <secondary><application>postfix</application></secondary>
      </indexterm>
      <indexterm>
        <primary>daemons do servidor de correio</primary>
        <secondary><application>qmail</application></secondary>
      </indexterm>
      <indexterm>
        <primary>daemons do servidor de email</primary>
        <secondary><application>exim</application></secondary>
      </indexterm>

      <para>Geralmente &eacute; o <application>sendmail</application> (por
        padr&atilde;o no FreeBSD) ou um dos outros daemons de servidores de emails como
	<application>qmail</application>,
	<application>postfix</application>, ou
	<application>exim</application>.  Existem outros por&eacute;m estes s&atilde;o os mais usados.  </para>

      <para>O servidor daemon normalmente tem duas fun&ccedil;&otilde;es&mdash;ele olha
        depois de receber um mail que chegou e entrega a mensagem.  Ele n&atilde;o
	permite que voc&ecirc; conecte a ele via POP ou IMAP para ler sua mensagem.  
	Voc&ecirc; precisa de um <link linkend="mail-receive">daemon</link> adicional
	para isso.</para>

      <para>Esteja ciente de que algumas vers&otilde;es antigas do
        <application>sendmail</application> tem s&eacute;rios problemas de
	seguran&ccedil;a, entretanto se voc&ecirc; manter rodando uma vers&atilde;o sempre atual,
	voc&ecirc; n&atilde;o dever&aacute; ter problemas.  &Eacute; uma boa ideia sempre manter atualizado
	qualquer aplicativo que voc&ecirc; rode.  </para>
    </sect2>

    <sect2 id="mail-dns">
      <title>Email e DNS</title>

      <para>O sistema de nome de dom&iacute;nios (DNS) e seu daemon
        <command>named</command> tem um grande papel na entrega de
	email.  Em orderm para entregar a mensagem do seu site para outro, o
	servidor daemon ir&aacute; consultar no DNS para determinar o host que ir&aacute; receber o destino da mensagem.  </para>

      <para>Isso funciona da mesma forma quando &eacute; enviado uma mensagem para voc&ecirc;.  O DNS
        cont&eacute;m o banco de dados com mapeamento de nomes para o endere&ccedil;o IP, e o nome do host 
	para o servidor de email.  O endere&ccedil;o IP &eacute; especificado no registro A. 
	O registro MX (Mail eXchanger) especifica o servidor de email que ir&aacute;
	receber a mensagem para voc&ecirc;.  Se voc&ecirc; n&atilde;o tiver um registro MX para seu hostname,
	sua mensagem ser&aacute; entregue diretamente para seu host.  </para>
    </sect2>

    <sect2 id="mail-receive">
      <title>Recebendo mensagem</title>
      <indexterm>
        <primary>email</primary>
        <secondary>recebendo</secondary>
      </indexterm>

      <para>O recebimento de mensagens para o seu dom&iacute;nio &eacute; feito pelo servidor de correio.  Ele
        ir&aacute; coletar a mensagem enviada para voc&ecirc; e armazen&aacute;-la para leitura ou pega-la.  
	Para puxar a mensagem armazenada no servidor, voc&ecirc; ir&aacute; precisar conectar no servidor de email.  
	Isto &eacute; feito usando POP ou IMAP.  Se voc&ecirc; quer ler mensagens diretamente no servidor de email,
	ent&atilde;o o POP ou IMAP n&atilde;o &eacute; necess&aacute;rio.  </para>

      <indexterm><primary>POP</primary></indexterm>
      <indexterm><primary>IMAP</primary></indexterm>
      <para>Se voc&ecirc; quer rodar um servidor POP ou IMAP, h&aacute; duas coisas que
        voc&ecirc; deve fazer:  </para>

      <procedure>
        <step>
	  <para>Pegue o daemon do POP ou IMAP da <ulink
	    url="../../../../ports/mail.html">cole&ccedil;&atilde;o de ports</ulink> e instale
	    em seu sistema.  </para>
	</step>

	<step>
	  <para>Modifique o <filename>/etc/inetd.conf</filename> para carregar o 
	    servidor POP ou IMAP.  </para>
	</step>
      </procedure>
    </sect2>

    <sect2 id="mail-host">
      <title>O servidor de correio</title>
      <indexterm><primary>mail host</primary></indexterm>

      <para>O servidor de correio &eacute; o nome dado ao servidor que &eacute; respons&aacute;vel pela
        entrega e recebimento de mensagens do seu host, e possivelmente de sua rede.  </para>
    </sect2>
  </sect1>

  <sect1 id="sendmail">
    <sect1info>
      <authorgroup>
        <author>
          <firstname>Christopher</firstname>
          <surname>Shumway</surname>
          <contrib>Contribu&iacute;do por </contrib>
        </author>
      </authorgroup>
    </sect1info>
    <title>Configura&ccedil;&atilde;o do <application>sendmail</application></title>

    <indexterm>
      <primary><application>sendmail</application></primary>
    </indexterm>

    <para>&man.sendmail.8; &eacute; o agente de transfer&ecirc;ncia de mensagens (MTA) padr&atilde;o no
      FreeBSD. A fun&ccedil;&atilde;o do <application>sendmail</application> &eacute; aceitar mensagens
      a partir de um agente de usu&aacute;rio de mensagens (MUA) e entreg&aacute;-la ao mailer
      apropriado como definido pelo arquivo de configura&ccedil;&atilde;o. 
      <application>sendmail</application> pode tamb&eacute;m aceitar conex&otilde;es de rede e entregar 
      as mensagens em caixas de mensagens locais ou entreg&aacute;-las para outro programa.  </para>
      

    <para>O <application>sendmail</application> usa os seguintes
      arquivos de configura&ccedil;&atilde;o:  </para>

    <indexterm>
      <primary><filename>/etc/mail/access</filename></primary>
    </indexterm>
    <indexterm>
      <primary><filename>/etc/mail/aliases</filename></primary>
    </indexterm>
    <indexterm>
      <primary><filename>/etc/mail/local-host-names</filename></primary>
    </indexterm>
    <indexterm>
      <primary><filename>/etc/mail/mailer.conf</filename></primary>
    </indexterm>
    <indexterm>
      <primary><filename>/etc/mail/mailertable</filename></primary>
    </indexterm>
    <indexterm>
      <primary><filename>/etc/mail/sendmail.cf</filename></primary>
    </indexterm>
    <indexterm>
      <primary><filename>/etc/mail/virtusertable</filename></primary>
    </indexterm>
    <informaltable>
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry>Nome do arquivo</entry>
	    <entry>Fun&ccedil;&atilde;o</entry>
	  </row>
	</thead>
	<tbody>
	  <row>
	    <entry>
	      <filename>/etc/mail/access</filename>
	    </entry>
	    <entry><application>sendmail</application> acessa o arquivo da base de 
 	      dados</entry>
	  </row>
	  <row>
	    <entry>
	      <filename>/etc/mail/aliases</filename>
	    </entry>
	    <entry>Apelidos de caixa de mensagem</entry>
	  </row>
	  <row>
	    <entry>
	      <filename>/etc/mail/local-host-names</filename>
	    </entry>
	    <entry>Lista dos hosts que o <application>sendmail</application>
	    aceita mensagens</entry>
    </row>
	  <row>
	    <entry>
	      <filename>/etc/mail/mailer.conf</filename>
	    </entry>
	    <entry>Arquivo de configura&ccedil;&atilde;o do Mailer</entry>
	  </row>
	  <row>
	    <entry>
	      <filename>/etc/mail/mailertable</filename>
	    </entry>
	    <entry>Tabela de entrega do mailer</entry>
	  </row>
	  <row>
	    <entry>
	      <filename>/etc/mail/sendmail.cf</filename>
	    </entry>
	    <entry>O arquivo de configura&ccedil;&atilde;o principal do <application>sendmail</application>
	   </entry>
	  </row>
	  <row>
	    <entry>
	      <filename>/etc/mail/virtusertable</filename>
	    </entry>
	    <entry>Us&aacute;rios virtuais e tabelas de dom&iacute;nios</entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

  <sect2>
    <title><filename>/etc/mail/access</filename></title>

    <para>A banco de dados de acesso que define quais host(s) ou endere&ccedil;o IP
      tem acesso local ao servidor de email e qual tipo de acesso eles tem.
      Os hosts podem ser listados com <option>OK</option>,
      <option>REJECT</option>, <option>RELAY</option> ou simplesmente passar 
      para o <application>sendmail</application> segurar erros de rotina dado pelo encarregado 
      do envio de mensagens.  Os hosts que s&atilde;o listados como <option>OK</option>, s&atilde;o por padr&atilde;o 
      permitidos enviar mensagens para este host assim como enviar mensagens atrav&eacute;s da maquina local para
      destinat&aacute;rios finais.  Os hosts que s&atilde;o listados com <option>REJECT</option> s&atilde;o rejeitados 
      por qualquer conex&atilde;o de email no servidorar. Os hosts que tem a op&ccedil;&atilde;o <option>RELAY</option> 
      para seu hostname, s&atilde;o permitidos para enviar mensagens para qualquer destino atrav&eacute;s desse 
      servidor de correio.  </para>

      <example>
	<title>Configurando o banco de dados de acesso do <application>sendmail</application>
  	 </title>

    <programlisting>cyberspammer.com                550 N&oacute;s n&atilde;o aceitamos mensagens de spammers
FREE.STEALTH.MAILER@            550 N&oacute;s n&atilde;o aceitamos mensagens de spammers
another.source.of.spam          REJECT
okay.cyberspammer.com           OK
128.32                          RELAY</programlisting>
      </example>

   <para>Neste exemplo n&oacute;s temos cinco entradas.  Remetentes de mensagens que
     s&atilde;o encontrados do lado esquerdo da tabela s&atilde;o afetados pela a&ccedil;&atilde;o
     do lado direito da tabela.  Os primeiros dois exemplos d&atilde;o um 
     erro de c&oacute;digo para a rotina do <application>sendmail</application>
     A mensagem &eacute; emitida para o host remoto quando &eacute; encontrado o email do lado
     esquerdo da tabela.  A pr&oacute;xima entrada, rejeita mensagens vindo de um host
     espec&iacute;fico na internet, <hostid>another.source.of.spam</hostid>.  A pr&oacute;xima entrada aceita
     conex&otilde;es de mensagens vindo do host <hostid role="fqdn">okay.cyberspammer.com</hostid>, que &eacute;
     mais exata do que a linha acima <hostid role="domainname">cyberspammer.com</hostid>.  Defini&ccedil;&otilde;es mais
     espec&iacute;ficas sobreescrevem defini&ccedil;&otilde;es menos exatas.  A &uacute;ltima entrada permite
     relaying de correio eletr&ocirc;nico vindo dos hosts com endere&ccedil;&otilde; IP que
     come&ccedil;am com <hostid>128.32</hostid>.  Estes hosts est&atilde;o aptos a
     enviar mensagens atrav&eacute;s desse servidor de correio que s&atilde;o destinados para outros
     servidores de correio.  </para>

   <para>Quando este arquivo &eacute; atualizado, voce precisa executar o comando
     <command>make</command> no diret&oacute;rio <filename>/etc/mail/</filename> para
     atualizar a base de dados.  </para>

   </sect2>
   <sect2>
    <title><filename>/etc/mail/aliases</filename></title>

    <para>A base de dados de apelidos cont&eacute;m a lista de caixas de mensagens virtuais
      que &eacute; expandido a outros usu&aacute;rio(s), arquivos, programas ou outros
      apelidos.  Aqui est&atilde;o alguns exemplos que podem ser usado no
      <filename>/etc/mail/aliases</filename>:</para>

      <example>
	<title>Apelidos de email</title>
    <programlisting>root: localuser
ftp-bugs: joe,eric,paul
bit.bucket:  /dev/null
procmail: "|/usr/local/bin/procmail"</programlisting>
      </example>

      <para>O formato do arquivo &eacute; simples; O nome da caixa de mensagens(email)&eacute; indicado do lado esquerdo
	dos dois pontos e depois do lado direito eh o destino da mensagens para onde ser&atilde;o direcionadas.
	O primeiro exemplo simplesmente direciona a caixa de correio de mensagens que chegam para o usu&aacute;rio
	<username>root</username> para a caixa de correio do usu&aacute;rio <username>localuser</username>, 
        que &eacute; olhada novamente na base de dados de apelidos.  Se nada for encontrado, ent&atilde;o a mensagem &eacute; entregue,
	ao usu&aacute;rio local <username>localuser</username>.  O pr&oacute;ximo exemplo mostra uma lista de emails.  
	Mensagens para a caixa de correio <username>ftp-bugs</username> &eacute;
	direcionada para tr&ecirc;s caixas de mensagem local, <username>joe</username>,
	<username>eric</username>, e <username>paul</username>.  Note que uma caixa de mensagens
	remota pode ser especificada como <literal>usu&aacute;rio@exemplo.com.br</literal>.  O pr&oacute;ximo
	exemplo mostra escrevendo uma mensagem para um arquivo, neste caso
	<filename>/dev/null</filename>.  O &uacute;ltimo exemplo mostra enviando mensagens para 
	um programa, neste caso a mensagem &eacute; escrita para uma entrada padr&atilde;o do
	<filename>/usr/local/bin/procmail</filename> atrav&eacute;s  do &unix; pipe.</para>

   <para>Quando este arquivo &eacute; atualizado, voc&ecirc; precisa executar o comando
   <command>make</command> no <filename>/etc/mail/</filename> para
   atualizar a base de dados.  </para>
  </sect2>
  <sect2>
    <title><filename>/etc/mail/local-host-names</filename></title>

    <para>Esta &eacute; a lista dos hostnames do &man.sendmail.8; que s&atilde;o aceitos como
      nomes de host locais.  Coloque qualquer dom&iacute;nio ou host do
      <application>sendmail</application> que est&aacute; poder&aacute; receber mensagens.
      Por exemplo, se este servidor aceitar mensagens para este
      dom&iacute;nio <hostid role="domainname">exemplo.com</hostid> e o host
      <hostid role="fqdn">mail.exemplo.com</hostid>, o
      <filename>local-host-names</filename> pode ter algo como
      isto:</para>

    <programlisting>example.com
mail.example.com</programlisting>

    <para>Quando este arquivo &eacute; atualizado, O &man.sendmail.8; precisar ser
    reiniciado para ativar as mudan&ccedil;as.  </para>

  </sect2>

  <sect2>
    <title><filename>/etc/mail/sendmail.cf</filename></title>

    <para>O <application>sendmail</application> tem como arquivo de configura&ccedil;&atilde;o
      principal, o <filename>sendmail.cf</filename> que controla o comportamento total
      do <application>sendmail</application>, incluindo tudo de 
      reescrita de endere&ccedil;os de mensagens &agrave; impress&atilde;o de mensagens rejei&ccedil;&atilde;o 
      aos servidores remotos de correio.  Naturalmente, com um papel t&atilde;o diverso, este
      arquivo de configura&ccedil;&atilde;o &eacute; completamente complexo e os detalhes fogem do escopo desta se&ccedil;&atilde;o.  
      Felizmente, este arquivo de configura&ccedil;&atilde;o raramente precisa ser modificado por servidores
      de correio padr&atilde;o.  </para>

    <para>O arquivo de configura&ccedil;&atilde;o principal do <application>sendmail</application> 
      pode ser construido a partir dos macros &man.m4.1; que define as caracter&iacute;sticas
      e comportamento do <application>sendmail</application>.  Por favor veja o 
      <filename>/usr/src/contrib/sendmail/cf/README</filename> para maiores
      detalhes.  </para>

    <para>Quando mudan&ccedil;as neste arquivo s&atilde;o feitas, o
      <application>sendmail</application> precisa ser reiniciado para
      que as mudan&ccedil;as tenham efeito.  </para>

  </sect2>
  <sect2>
    <title><filename>/etc/mail/virtusertable</filename></title>

    <para>O <filename>virtusertable</filename> mapeia os endere&ccedil;os de correio para
      dom&iacute;nios virtuais e caixas de mensagens para caixas de mensagens
      reais.  Estas caixas de mensagens podem ser locais, remotas, apelidos definidos no
      <filename>/etc/mail/aliases</filename> ou arquivos.</para>

    <example>
	<title>Exemplo de mapeamento de dom&iacute;nio virtual de mensagens</title>

    <programlisting>root@exemplo.com                root
postmaster@exemplo.com          postmaster@noc.exemplo.net
@exemplo.com                    joe</programlisting>
      </example>

    <para>No exemplo acima, n&oacute;s temos um mapeamento para o dom&iacute;nio
      <hostid role="domainname">exemplo.com</hostid>.  O arquivos &eacute; processado 
      de cima pra baixo, ordenado na busca da primeira constata&ccedil;&atilde;o da entrada.  O primeiro &iacute;tem mapeia
      <literal>root@exemplo.com</literal> para a caixa de mensagens local do usu&aacute;rio <username>root</username>.  A pr&oacute;xima entrada mapeia
      <literal>postmaster@exemplo.com</literal> para a caixa de mensagens do usu&aacute;rio <username>postmaster</username> do host
      <hostid role="fqdn">noc.exemplo.net</hostid>.  Finalmente, se nada de <hostid role="domainname">exemplo.com</hostid> for
      encontrado, ele ir&aacute; usar o ultimo mapeamento, que ao ser enviada uma mensagem para qualquer pessoa para o dom&iacute;nio
      <hostid role="domainname">exemplo.com</hostid> el&aacute; ser&aacute; entregue a um determinado usu&aacute;rio.
      Neste caso ele ir&aacute; fazer o mapeamento para a caixa de mensagens local do usu&aacute;rio <username>joe</username>.</para>

  </sect2>
  </sect1>

  <sect1 id="mail-changingmta">
    <sect1info>
      <authorgroup>
        <author>
          <firstname>Andrew</firstname>
          <surname>Boothman</surname>
          <contrib>Escrito por </contrib>
        </author>
      </authorgroup>
      <authorgroup>
        <author>
          <firstname>Gregory</firstname>
          <surname>Neil Shapiro</surname>
          <contrib>Informa&ccedil;&otilde;es obtidas a partir do email escrito por </contrib>
        </author>
      </authorgroup>
    </sect1info>
    <title>Trocando seu agente de transfer&ecirc;ncia de mensagens</title>
    <indexterm>
      <primary>email</primary>
      <secondary>trocando o mta</secondary>
    </indexterm>

    <para>Como mencionado, o FreeBSD vem com o 
      <application>sendmail</application> j&aacute; instalado como seu
      MTA (Agente de transfer&ecirc;ncia de mensagens).  Consequentemente por padr&atilde;o sua
      carga est&aacute; na sa&iacute;da e entrada de mensagens.</para>

    <para>Entretanto, por uma s&eacute;rie de raz&otilde;es, alguns administradores
      de sistema querem trocar o seu sistema de MTA.  Estas raz&otilde;es
      variam simplesmente em querer testar outro MTA at&eacute; a necessidade
      de fun&ccedil;&otilde;es espec&iacute;ficas ou confia em outro pacote respons&aacute;vel pelo envio de
      mensagens.  Felizmente, por qualquer raz&atilde;o, o FreeBSD faz com que
      essa mudan&ccedil;a seja simples de ser realizada.  </para>

    <sect2>
      <title>Instalando um novo MTA</title>

      <para>You have a wide choice of MTAs available.  A good
	starting point is the
	<link linkend="ports">FreeBSD Ports Collection</link> where
	you will be able to find many.  Of course you are free to use
	any MTA you want from any location, as long as you can make
	it run under FreeBSD.</para>

      <para>Start by installing your new MTA.  Once it is installed
	it gives you a chance to decide if it really fulfills your
	needs, and also gives you the opportunity to configure your
	new software before getting it to take over from
	<application>sendmail</application>.  When doing this, you
	should be sure that installing the new software will not attempt
	to overwrite system binaries such as
	<filename>/usr/bin/sendmail</filename>.  Otherwise, your new
	mail software has essentially been put into service before
	you have configured it.</para>

      <para>Please refer to your chosen MTA's documentation for
	information on how to configure the software you have
	chosen.</para>
    </sect2>

    <sect2>
      <title>Disable <application>sendmail</application></title>

      <para>The procedure used to start
	<application>sendmail</application> changed significantly
	between 4.5-RELEASE and 4.6-RELEASE.  Therefore, the procedure
	used to disable it is subtly different.</para>

      <sect3>
	<title>FreeBSD 4.5-STABLE before 2002/4/4 and Earlier
	  (Including 4.5-RELEASE and Earlier)</title>

	<para>Enter:</para>

	  <programlisting>sendmail_enable="NO"</programlisting>

	  <para>into <filename>/etc/rc.conf</filename>.  This will disable
	  <application>sendmail</application>'s incoming mail service,
	  but if <filename>/etc/mail/mailer.conf</filename> (see below)
	  is not changed, <application>sendmail</application> will
	  still be used to send e-mail.</para>
      </sect3>

      <sect3>
	<title>FreeBSD 4.5-STABLE after 2002/4/4
	  (Including 4.6-RELEASE and Later)</title>

	<para>In order to completely disable
	  <application>sendmail</application> you must use</para>

	  <programlisting>sendmail_enable="NONE"</programlisting>

	  <para>in <filename>/etc/rc.conf.</filename></para>

	<warning>
	  <para>If you disable <application>sendmail</application>'s
	    outgoing mail service in this way, it is important that you
	    replace it with a fully working alternative mail delivery
	    system.  If you choose not to, system functions such as
	    &man.periodic.8; will be unable to deliver their results by
	    e-mail as they would normally expect to.  Many parts of your
	    system may expect to have a functional
	    <application>sendmail</application>-compatible system.  If
	    applications continue to use
	    <application>sendmail</application>'s binaries to try and send
	    e-mail after you have disabled them, mail could go into an
	    inactive <application>sendmail</application> queue, and never be delivered.</para>
	</warning>

	<para>If you only want to disable
	  <application>sendmail</application>'s incoming mail service,
	  you should set</para>

	  <programlisting>sendmail_enable="NO"</programlisting>

	<para>in <filename>/etc/rc.conf</filename>.  More information on
	  <application>sendmail</application>'s startup options is
	  available from the &man.rc.sendmail.8; manual page.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Running Your New MTA on Boot</title>

      <para>You may have a choice of two methods for running your
	new MTA on boot, again depending on what version of FreeBSD
	you are running.</para>

      <sect3>
	<title>FreeBSD 4.5-STABLE before 2002/4/11
	  (Including 4.5-RELEASE and Earlier)</title>

	<para>Add a script to
	  <filename>/usr/local/etc/rc.d/</filename> that
	  ends in <filename>.sh</filename> and is executable by
	  <username>root</username>.  The script should accept <literal>start</literal> and
	  <literal>stop</literal> parameters.  At startup time the
	  system scripts will execute the command</para>

	<programlisting>/usr/local/etc/rc.d/supermailer.sh start</programlisting>

	<para>which you can also use to manually start the server.  At
	  shutdown time, the system scripts will use the
	  <literal>stop</literal> option, running the command</para>

	<programlisting>/usr/local/etc/rc.d/supermailer.sh stop</programlisting>

	<para>which you can also use to manually stop the server
	  while the system is running.</para>

      </sect3>

      <sect3>
	<title>FreeBSD 4.5-STABLE after 2002/4/11
	  (Including 4.6-RELEASE and Later)</title>

	<para>With later versions of FreeBSD, you can use the
	  above method or you can set</para>

	<programlisting>mta_start_script="filename"</programlisting>

	<para>in <filename>/etc/rc.conf</filename>, where
	  <replaceable>filename</replaceable> is the name of some
	  script that you want executed at boot to start your
	  MTA.</para>
      </sect3>

    </sect2>

    <sect2>
      <title>Replacing <application>sendmail</application> as
       the System's Default Mailer</title>

      <para>The program <application>sendmail</application> is so ubiquitous
	as standard software on &unix; systems that some software
	just assumes it is already installed and configured.
	For this reason, many alternative MTA's provide their own compatible
	implementations of the <application>sendmail</application>
	command-line interface; this facilitates using them as
	<quote>drop-in</quote> replacements for <application>sendmail</application>.</para>

      <para>Therefore, if you are using an alternative mailer,
	you will need to make sure that software trying to execute
	standard <application>sendmail</application> binaries such as
	<filename>/usr/bin/sendmail</filename> actually executes
	your chosen mailer instead.  Fortunately, FreeBSD provides
	a system called &man.mailwrapper.8; that does this job for
	you.</para>

      <para>When <application>sendmail</application> is operating as installed, you will
	find something like the following
	in <filename>/etc/mail/mailer.conf</filename>:</para>

<programlisting>sendmail	 /usr/libexec/sendmail/sendmail
send-mail	/usr/libexec/sendmail/sendmail
mailq		/usr/libexec/sendmail/sendmail
newaliases	/usr/libexec/sendmail/sendmail
hoststat	/usr/libexec/sendmail/sendmail
purgestat	/usr/libexec/sendmail/sendmail</programlisting>

      <para>This means that when any of these common commands
	(such as <filename>sendmail</filename> itself) are run,
	the system actually invokes a copy of mailwrapper named <filename>sendmail</filename>, which
	checks <filename>mailer.conf</filename> and
	executes <filename>/usr/libexec/sendmail/sendmail</filename>
	instead.  This system makes it easy to change what binaries
	are actually executed when these default <filename>sendmail</filename> functions
	are invoked.</para>

      <para>Therefore if you wanted
	<filename>/usr/local/supermailer/bin/sendmail-compat</filename>
	to be run instead of <application>sendmail</application>, you could change
	<filename>/etc/mail/mailer.conf</filename> to read:</para>

<programlisting>sendmail	 /usr/local/supermailer/bin/sendmail-compat
send-mail	/usr/local/supermailer/bin/sendmail-compat
mailq		/usr/local/supermailer/bin/mailq-compat
newaliases	/usr/local/supermailer/bin/newaliases-compat
hoststat	/usr/local/supermailer/bin/hoststat-compat
purgestat	/usr/local/supermailer/bin/purgestat-compat</programlisting>

	</sect2>

	<sect2>
	  <title>Finishing</title>

	<para>Once you have everything configured the way you want it, you should
	  either kill the <application>sendmail</application> processes that
	  you no longer need and start the processes belonging to your new
	  software, or simply reboot.  Rebooting will also
	  give you the opportunity to ensure that you have correctly
	  configured your system to start your new MTA automatically on boot.</para>

      </sect2>
    </sect1>

  <sect1 id="mail-trouble">
    <title>Troubleshooting</title>
    <indexterm>
      <primary>email</primary>
      <secondary>troubleshooting</secondary>
    </indexterm>

    <qandaset>
      <qandaentry>
        <question>
	<para>Why do I have to use the FQDN for hosts on my site?</para>
	</question>

	<answer>
	<para>You will probably find that the host is actually in a
	  different domain; for example, if you are in
	  <hostid role="fqdn">foo.bar.edu</hostid> and you wish to reach
	  a host called <hostid>mumble</hostid> in the <hostid
	  role="domainname">bar.edu</hostid> domain, you will have to
	  refer to it by the fully-qualified domain name, <hostid
	  role="fqdn">mumble.bar.edu</hostid>, instead of just
	  <hostid>mumble</hostid>.</para>

	<indexterm><primary>BIND</primary></indexterm>
	<para>Traditionally, this was allowed by BSD BIND resolvers.
	  However the current version of <application>BIND</application>
	  that ships with FreeBSD no longer provides default abbreviations
	  for non-fully qualified domain names other than the domain you
	  are in. So an unqualified host <hostid>mumble</hostid> must
	  either be found as <hostid
	  role="fqdn">mumble.foo.bar.edu</hostid>, or it will be searched
	  for in the root domain.</para>

        <para>This is different from the previous behavior, where the
	  search continued across <hostid
	  role="domainname">mumble.bar.edu</hostid>, and <hostid
	  role="domainname">mumble.edu</hostid>. Have a look at RFC 1535
	  for why this was considered bad practice, or even a security
	  hole.</para>

        <para>As a good workaround, you can place the line:

          <programlisting>search foo.bar.edu bar.edu</programlisting>

          instead of the previous:

          <programlisting>domain foo.bar.edu</programlisting>

          into your <filename>/etc/resolv.conf</filename>.  However, make
	  sure that the search order does not go beyond the
	  <quote>boundary between local and public administration</quote>,
	  as RFC 1535 calls it.</para>
	</answer>
      </qandaentry>

      <qandaentry>
	<question>
	<para><application>sendmail</application> says <errorname>mail
	  loops back to myself</errorname></para>
	</question>

	<answer>
	<para>This is answered in the
	<application>sendmail</application> FAQ as follows:</para>

        <programlisting>I am getting <quote>Local configuration error</quote> messages, such as:

553 relay.domain.net config error: mail loops back to myself
554 &lt;user@domain.net&gt;... Local configuration error

How can I solve this problem?

You have asked mail to the domain (e.g., domain.net) to be
forwarded to a specific host (in this case, relay.domain.net)
by using an MX record, but the relay machine does not recognize
itself as domain.net. Add domain.net to /etc/mail/local-host-names
(if you are using FEATURE(use_cw_file)) or add <quote>Cw domain.net</quote>
to /etc/mail/sendmail.cf.</programlisting>

        <para>The <application>sendmail</application> FAQ can be found at
	  <ulink URL="http://www.sendmail.org/faq/"></ulink> and is
	  recommended reading if you want to do any
	  <quote>tweaking</quote> of your mail setup.</para>
	</answer>
      </qandaentry>

      <indexterm><primary>PPP</primary></indexterm>
      <qandaentry>
        <question>
	<para>How can I run a mail server on a dial-up PPP host?</para>
	</question>

	<answer>
	<para>You want to connect a FreeBSD box on a LAN to the
	  Internet.  The FreeBSD box will be a mail gateway for the LAN.
	  The PPP connection is non-dedicated.</para>

	<indexterm><primary>UUCP</primary></indexterm>

	<para>There are at least two ways to do this.  One way is to use
	  UUCP.</para>

	<para>Another way is to get a full-time Internet server to provide secondary MX
	  services for your domain.  For example, if your company's domain is
	  <hostid role="domainname">example.com</hostid> and your Internet service provider has
	  set <hostid role="domainname">example.net</hostid> up to provide secondary MX services
	  to your domain:</para>

	<programlisting>example.com.          MX        10      example.com.
                      MX        20      example.net.</programlisting>

	<para>Only one host should be specified as the final recipient
	  (add <literal>Cw example.com</literal> in
	  <filename>/etc/mail/sendmail.cf</filename> on <hostid role="domainname">example.com</hostid>).</para>

	<para>When the sending <command>sendmail</command> is trying to
	  deliver the mail it will try to connect to you (<hostid role="domainname">example.com</hostid>) over the modem
	  link.  It will most likely time out because you are not online.
	  The program <application>sendmail</application> will automatically deliver it to the
	  secondary MX site, i.e. your Internet provider (<hostid role="domainname">example.net</hostid>).  The secondary MX
	  site will then periodically try to connect to
	  your host and deliver the mail to the primary MX host (<hostid role="domainname">example.com</hostid>).</para>

	<para>You might want to use something like this as a login
	  script:</para>

	<programlisting>#!/bin/sh
# Put me in /usr/local/bin/pppmyisp
( sleep 60 ; /usr/sbin/sendmail -q ) &amp;
/usr/sbin/ppp -direct pppmyisp</programlisting>

	<para>If you are going to create a separate login script for a
	  user you could use <command>sendmail -qRexample.com</command>
	  instead in the script above. This will force all mail in your
	  queue for <hostid role="domainname">example.com</hostid> to be processed immediately.</para>

	<para>A further refinement of the situation is as follows:</para>

	<para>Message stolen from the &a.isp;.</para>

	<programlisting>&gt; we provide the secondary MX for a customer. The customer connects to
&gt; our services several times a day automatically to get the mails to
&gt; his primary MX (We do not call his site when a mail for his domains
&gt; arrived). Our sendmail sends the mailqueue every 30 minutes. At the
&gt; moment he has to stay 30 minutes online to be sure that all mail is
&gt; gone to the primary MX.
&gt;
&gt; Is there a command that would initiate sendmail to send all the mails
&gt; now? The user has not root-privileges on our machine of course.

In the <quote>privacy flags</quote> section of sendmail.cf, there is a
definition Opgoaway,restrictqrun

Remove restrictqrun to allow non-root users to start the queue processing.
You might also like to rearrange the MXs. We are the 1st MX for our
customers like this, and we have defined:

# If we are the best MX for a host, try directly instead of generating
# local config error.
OwTrue

That way a remote site will deliver straight to you, without trying
the customer connection.  You then send to your customer.  Only works for
<quote>hosts</quote>, so you need to get your customer to name their mail
machine <quote>customer.com</quote> as well as
<quote>hostname.customer.com</quote> in the DNS.  Just put an A record in
the DNS for <quote>customer.com</quote>.</programlisting>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
	  <para>Why do I keep getting <errorname>Relaying
	    Denied</errorname> errors when sending mail from other
	    hosts?</para>
	</question>

	<answer>
	  <para>In default FreeBSD installations,
 	    <application>sendmail</application> is configured to only
 	    send mail from the host it is running on.  For example, if
 	    a POP3 server is installed, then users will be able to
 	    check mail from school, work, or other remote locations
 	    but they still will not be able to send outgoing emails
 	    from outside locations.  Typically, a few moments after
 	    the attempt, an email will be sent from
 	    <application>MAILER-DAEMON</application> with a
 	    <errorname>5.7 Relaying Denied</errorname> error
 	    message.</para>

	  <para>There are several ways to get around this.  The most
 	    straightforward solution is to put your ISP's address in
 	    a relay-domains file at
 	    <filename>/etc/mail/relay-domains</filename>.  A quick way
 	    to do this would be:</para>

	  <screen>&prompt.root; <userinput>echo "your.isp.example.com" &gt; /etc/mail/relay-domains</userinput></screen>

	  <para>After creating or editing this file you must restart
  	    <application>sendmail</application>.  This works great if
  	    you are a server administrator and do not wish to send mail
  	    locally, or would like to use a point and click
  	    client/system on another machine or even another ISP.  It
  	    is also very useful if you only have one or two email
  	    accounts set up.  If there is a large number of addresses
  	    to add, you can simply open this file in your favorite
  	    text editor and then add the domains, one per line:</para>

	  <programlisting>your.isp.example.com
other.isp.example.net
users-isp.example.org
www.example.org</programlisting>

	  <para>Now any mail sent through your system, by any host in
	    this list (provided the user has an account on your
	    system), will succeed.  This is a very nice way to allow
	    users to send mail from your system remotely without
	    allowing people to send SPAM through your system.</para>

	</answer>
      </qandaentry>
    </qandaset>
  </sect1>

  <sect1 id="mail-advanced">
    <title>Advanced Topics</title>

    <para>The following section covers more involved topics such as mail
      configuration and setting up mail for your entire domain.</para>

    <sect2 id="mail-config">
      <title>Basic Configuration</title>
      <indexterm>
        <primary>email</primary>
        <secondary>configuration</secondary>
      </indexterm>

      <para>Out of the box, you should be able to send email to external
        hosts as long as you have set up
	<filename>/etc/resolv.conf</filename> or are running your own
	name server.  If you would like to have mail for your host
	delivered to the MTA (e.g., <application>sendmail</application>) on your own FreeBSD host, there are two methods:</para>

      <itemizedlist>
        <listitem>
          <para>Run your own name server and have your own domain.  For
	    example, <hostid
	    role="domainname">FreeBSD.org</hostid></para>
        </listitem>

        <listitem>
          <para>Get mail delivered directly to your host.  This is done by
	    delivering mail directly to the current DNS name for your
	    machine.  For example, <hostid
	    role="fqdn">example.FreeBSD.org</hostid>.</para>
        </listitem>
      </itemizedlist>

      <indexterm><primary>SMTP</primary></indexterm>
      <para>Regardless of which of the above you choose, in order to have
        mail delivered directly to your host, it must have a permanent
        static IP address (not a dynamic address, as with most PPP dial-up configurations).  If you are behind a
        firewall, it must pass SMTP traffic on to you.  If you want to
        receive mail directly at your host, you need to be sure of either of two
        things:</para>

      <itemizedlist>
        <indexterm><primary>MX record</primary></indexterm>
        <listitem>
          <para>Make sure that the (lowest-numbered) MX record in your DNS points to your
	    host's IP address.</para>
        </listitem>

        <listitem>
          <para>Make sure there is no MX entry in your DNS for your
	    host.</para>
        </listitem>
      </itemizedlist>

      <para>Either of the above will allow you to receive mail directly at
        your host.</para>

      <para>Try this:</para>

      <screen>&prompt.root; <userinput>hostname</userinput>
example.FreeBSD.org
&prompt.root; <userinput>host example.FreeBSD.org</userinput>
example.FreeBSD.org has address 204.216.27.XX</screen>

      <para>If that is what you see, mail directly to
        <email>yourlogin@example.FreeBSD.org</email> should work without
        problems (assuming <application>sendmail</application> is
        running correctly on <hostid role="fqdn">example.FreeBSD.org</hostid>).</para>

      <para>If instead you see something like this:</para>

      <screen>&prompt.root; <userinput>host example.FreeBSD.org</userinput>
example.FreeBSD.org has address 204.216.27.XX
example.FreeBSD.org mail is handled (pri=10) by hub.FreeBSD.org</screen>

      <para>All mail sent to your host (<hostid
        role="fqdn">example.FreeBSD.org</hostid>) will end up being
	collected on <hostid>hub</hostid> under the same username instead
	of being sent directly to your host.</para>

      <para>The above information is handled by your DNS server.  The DNS
        record that carries mail routing information is the
        <emphasis>M</emphasis>ail e<emphasis>X</emphasis>change entry.  If
        no MX record exists, mail will be delivered directly to the host by
        way of its IP address.</para>

      <para>The MX entry for <hostid
        role="fqdn">freefall.FreeBSD.org</hostid> at one time looked like
        this:</para>

      <programlisting>freefall		MX	30	mail.crl.net
freefall		MX	40	agora.rdrop.com
freefall		MX	10	freefall.FreeBSD.org
freefall		MX	20	who.cdrom.com</programlisting>

      <para>As you can see, <hostid>freefall</hostid> had many MX entries.
        The lowest MX number is the host that receives mail directly if
        available; if it is not accessible for some reason, the others
        (sometimes called <quote>backup MXes</quote>) accept messages
        temporarily, and pass it along when a lower-numbered host becomes
        available, eventually to the lowest-numbered host.</para>

      <para>Alternate MX sites should have separate Internet connections
        from your own in order to be most useful.  Your ISP or another
        friendly site should have no problem providing this service for
        you.</para>
    </sect2>

    <sect2 id="mail-domain">
      <title>Mail for Your Domain</title>

      <para>In order to set up a <quote>mailhost</quote> (a.k.a. mail
        server) you need to have any mail sent to various workstations
	directed to it.  Basically, you want to <quote>claim</quote> any
	mail for any hostname in your domain (in this case <hostid
	role="fqdn">*.FreeBSD.org</hostid>) and divert it to your mail
	server so your users can receive their mail on
	the master mail server.</para>

      <indexterm><primary>DNS</primary></indexterm>
      <para>To make life easiest, a user account with the same
        <emphasis>username</emphasis> should exist on both machines.  Use
	&man.adduser.8; to do this.</para>

      <para>The mailhost you will be using must be the designated mail
        exchanger for each workstation on the network.  This is done in
	your DNS configuration like so:</para>

      <programlisting>example.FreeBSD.org	A	204.216.27.XX		; Workstation
			MX	10 hub.FreeBSD.org	; Mailhost</programlisting>

      <para>This will redirect mail for the workstation to the mailhost no
        matter where the A record points.  The mail is sent to the MX
	host.</para>

      <para>You cannot do this yourself unless you are running a DNS
        server.  If you are not, or cannot run your own DNS server, talk
	to your ISP or whoever provides your DNS.</para>

      <para>If you are doing virtual email hosting, the following
        information will come in handy.  For this example, we
	will assume you have a customer with his own domain, in this
	case <hostid role="domainname">customer1.org</hostid>, and you want
	all the mail for <hostid role="domainname">customer1.org</hostid>
	sent to your mailhost, <hostid
	role="fqdn">mail.myhost.com</hostid>.  The entry in your DNS
	should look like this:</para>

      <programlisting>customer1.org		MX	10	mail.myhost.com</programlisting>

      <para>You do <emphasis>not</emphasis> need an A record for <hostid role="domainname">customer1.org</hostid> if you only
        want to handle email for that domain.</para>

      <note>
	<para>Be aware that pinging <hostid
	  role="domainname">customer1.org</hostid> will not work unless
	  an A record exists for it.</para>
      </note>

      <para>The last thing that you must do is tell
        <application>sendmail</application> on your mailhost what domains
	and/or hostnames it should be accepting mail for.  There are a few
	different ways this can be done.  Either of the following will
	work:</para>

      <itemizedlist>
        <listitem>
	  <para>Add the hosts to your
	  <filename>/etc/mail/local-host-names</filename> file if you are using the
	  <literal>FEATURE(use_cw_file)</literal>.  If you are using
	  a version of <application>sendmail</application> earlier than 8.10, the file is
	  <filename>/etc/sendmail.cw</filename>.</para>
	</listitem>

	<listitem>
	  <para>Add a <literal>Cwyour.host.com</literal> line to your
	    <filename>/etc/sendmail.cf</filename> or
	    <filename>/etc/mail/sendmail.cf</filename> if you are using
	    <application>sendmail</application> 8.10 or higher.</para>
	</listitem>
      </itemizedlist>
    </sect2>
  </sect1>
  
  <sect1 id="SMTP-UUCP">
  <title>SMTP with UUCP</title>

    <para>The <application>sendmail</application> configuration that ships with FreeBSD is
      designed for sites that connect directly to the Internet.  Sites
      that wish to exchange their mail via UUCP must install another
      sendmail configuration file.</para>

    <para>Tweaking <filename>/etc/mail/sendmail.cf</filename> manually
      is an advanced topic. <application>sendmail</application> version 8 generates config files
      via &man.m4.1; preprocessing, where the actual configuration
      occurs on a higher abstraction level. The &man.m4.1
      configuration files can be found under
      <filename>/usr/src/usr.sbin/sendmail/cf</filename>.</para>

    <para>If you did not install your system with full sources, the
      sendmail config stuff has been broken out into a separate source
      distribution tarball. Assuming you have your FreeBSD source code
      CDROM mounted, do:</para>

    <screen>&prompt.root; <userinput>cd /cdrom/src</userinput>
&prompt.root; <userinput>cat scontrib.?? | tar xzf - -C /usr/src/contrib/sendmail</userinput></screen>

    <para>This extracts to only a few hundred kilobytes.  The file
      <filename>README</filename> in the <filename>cf</filename>
      directory can serve as a basic introduction to m4
      configuration.</para>

    <para>The best way to support UUCP delivery is to use the
      <literal>mailertable</literal> feature.  This creates a database
      that <application>sendmail</application> can use to make routing decisions.</para>

    <para>First, you have to create your <filename>.mc</filename>
      file.  The directory
      <filename>/usr/src/usr.sbin/sendmail/cf/cf</filename> contains a
      few examples.  Assuming you have named your file
      <filename>foo.mc</filename>, all you need to do in order to
      convert it into a valid <filename>sendmail.cf</filename>
      is:</para>

    <screen>&prompt.root; <userinput>cd /usr/src/usr.sbin/sendmail/cf/cf</userinput>
&prompt.root; <userinput>make foo.cf</userinput>
&prompt.root; <userinput>cp foo.cf /etc/mail/sendmail.cf</userinput></screen>

    <para>A typical <filename>.mc</filename> file might look
        like:</para>

    <programlisting>VERSIONID(`<replaceable>Your version number</replaceable>') OSTYPE(bsd4.4)

FEATURE(accept_unresolvable_domains)
FEATURE(nocanonify)
FEATURE(mailertable, `hash -o /etc/mail/mailertable')

define(`UUCP_RELAY', <replaceable>your.uucp.relay</replaceable>)
define(`UUCP_MAX_SIZE', 200000)
define(`confDONT_PROBE_INTERFACES')

MAILER(local)
MAILER(smtp)
MAILER(uucp)

Cw    <replaceable>your.alias.host.name</replaceable>
Cw    <replaceable>youruucpnodename.UUCP</replaceable></programlisting>

    <para>The lines containing
      <literal>accept_unresolvable_domains</literal>,
      <literal>nocanonify</literal>, and
      <literal>confDONT_PROBE_INTERFACES</literal> features will
      prevent any usage of the DNS during mail delivery.  The
      <literal>UUCP_RELAY</literal> clause is needed to support UUCP
      delivery.  Simply put an Internet hostname there that is able to
      handle .UUCP pseudo-domain addresses; most likely, you will
      enter the mail relay of your ISP there.</para>

    <para>Once you have this, you need an
      <filename>/etc/mail/mailertable</filename> file.  If you have
      only one link to the outside that is used for all your mails,
      the following file will suffice:</para>

    <programlisting>#
# makemap hash /etc/mail/mailertable.db &lt; /etc/mail/mailertable
.                             uucp-dom:<replaceable>your.uucp.relay</replaceable></programlisting>

    <para>A more complex example might look like this:</para>

    <programlisting>#
# makemap hash /etc/mail/mailertable.db &lt; /etc/mail/mailertable
#
horus.interface-business.de   uucp-dom:horus
.interface-business.de        uucp-dom:if-bus
interface-business.de         uucp-dom:if-bus
.heep.sax.de                  smtp8:%1
horus.UUCP                    uucp-dom:horus
if-bus.UUCP                   uucp-dom:if-bus
.                             uucp-dom:</programlisting>


    <para>The first three lines handle special cases where
      domain-addressed mail should not be sent out to the default
      route, but instead to some UUCP neighbor in order to
      <quote>shortcut</quote> the delivery path. The next line handles
      mail to the local Ethernet domain that can be delivered using
      SMTP. Finally, the UUCP neighbors are mentioned in the .UUCP
      pseudo-domain notation, to allow for a
      <literal><replaceable>uucp-neighbor
      </replaceable>!<replaceable>recipient</replaceable></literal>
      override of the default rules. The last line is always a single
      dot, matching everything else, with UUCP delivery to a UUCP
      neighbor that serves as your universal mail gateway to the
      world. All of the node names behind the
      <literal>uucp-dom:</literal> keyword must be valid UUCP
      neighbors, as you can verify using the command
      <literal>uuname</literal>.</para>

    <para>As a reminder that this file needs to be converted into a
      DBM database file before use.  The command line to accomplish
      this is best placed as a comment at the top of the mailertable.
      You always have to execute this command each time you change
      your mailertable.</para>

    <para>Final hint: if you are uncertain whether some particular
      mail routing would work, remember the <option>-bt</option>
      option to <application>sendmail</application>. It starts <application>sendmail</application> in <emphasis>address test
      mode</emphasis>; simply enter <literal>3,0</literal>, followed
      by the address you wish to test for the mail routing.  The last
      line tells you the used internal mail agent, the destination
      host this agent will be called with, and the (possibly
      translated) address. Leave this mode by typing <keycombo
      action="simul"><keycap>Ctrl</keycap><keycap>D</keycap></keycombo>.</para>

    <screen>&prompt.user; <userinput>sendmail -bt</userinput>
ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)
Enter &lt;ruleset&gt; &lt;address&gt;
<prompt>&gt;</prompt> <userinput>3,0 foo@example.com</userinput>
canonify           input: foo @ example . com
...
parse            returns: $# uucp-dom $@ <replaceable>your.uucp.relay</replaceable> $: foo &lt; @ example . com . &gt;
<prompt>&gt;</prompt> <userinput>^D</userinput></screen>
  </sect1>

  <sect1 id="SMTP-dialup">
    <title>Using Mail with a Dialup Connection</title> 

    <para>If you have a static IP address, you should not need to
      adjust anything from the defaults.  Set your host name to your
      assigned Internet name and <application>sendmail</application> will do the rest.</para>

    <para>If you have a dynamically assigned IP number and use a
      dialup PPP connection to the Internet, you will probably have a
      mailbox on your ISPs mail server. Let's assume your ISP's domain
      is <hostid role="domainname">example.net</hostid>, and that your
      user name is <username>user</username>, you have called your
      machine <hostid role="fqdn">bsd.home</hostid>, and your ISP has
      told you that you may use <hostid
      role="fqdn">relay.example.net</hostid> as a mail relay.</para>

    <para>In order to retrieve mail from your mailbox, you must
      install a retrieval agent. The <application>fetchmail</application> utility
      is a good choice as it supports many different protocols.
      Usually, your ISP will provide POP3. If you are using user-PPP,
      you can automatically fetch your mail when an Internet
      connection is established with the following entry in
      <filename>/etc/ppp/ppp.linkup</filename>:</para>

    <programlisting>MYADDR:
!bg su user -c fetchmail</programlisting>

    <para>If you are using <application>sendmail</application> (as
      shown below) to deliver mail to non-local accounts, you probably
      want to have <application>sendmail</application> process your
      mailqueue as soon as your Internet connection is established.
      To do this, put this command after the
      <command>fetchmail</command> command in
      <filename>/etc/ppp/ppp.linkup</filename>.</para>

    <programlisting>  !bg su user -c "sendmail -q"</programlisting>

    <para>Assume that you have an account for
      <username>user</username> on <hostid
      role="fqdn">bsd.home</hostid>. In the home directory of
      <username>user</username> on <hostid
      role="fqdn">bsd.home</hostid>, create a
      <filename>.fetchmailrc</filename> file:</para>

    <programlisting>poll example.net protocol pop3 fetchall pass MySecret</programlisting>

    <para>This file should not be readable by anyone except
      <username>user</username> as it contains the password
      <literal>MySecret</literal>.</para>

    <para>In order to send mail with the correct
      <literal>from:</literal> header, you must tell
      <application>sendmail</application> to use
      <literal>user@example.net</literal> rather than
      <literal>user@bsd.home</literal>. You may also wish to tell
      <application>sendmail</application> to send all mail via <hostid
      role="fqdn">relay.example.net</hostid>, allowing quicker mail
      transmission.</para>

    <para>The following <filename>.mc</filename> file should
      suffice:</para>

    <programlisting>VERSIONID(`bsd.home.mc version 1.0')
OSTYPE(bsd4.4)dnl
FEATURE(nouucp)dnl
MAILER(local)dnl
MAILER(smtp)dnl
Cwlocalhost
Cwbsd.home
MASQUERADE_AS(`example.net')dnl
FEATURE(allmasquerade)dnl
FEATURE(masquerade_envelope)dnl
FEATURE(nocanonify)dnl
FEATURE(nodns)dnl
define(`SMART_HOST', `relay.example.net')
Dmbsd.home
define(`confDOMAIN_NAME',`bsd.home')dnl
define(`confDELIVERY_MODE',`deferred')dnl</programlisting>

    <para>Refer to the previous section for details of how to turn
      this <filename>.mc</filename> file into a
      <filename>sendmail.cf</filename> file.  Also, do not forget to
      restart <application>sendmail</application> after updating
      <filename>sendmail.cf</filename>.</para>
  </sect1>

  <sect1 id="SMTP-Auth">
    <title>SMTP Authentication</title>
    
    <para>Having <acronym>SMTP</acronym> Authentication in place on
      your mail server has a number of benefits.
      <acronym>SMTP</acronym> Authentication can add another layer
      of security to <application>sendmail</application>, and has the benefit of giving mobile
      users who switch hosts the ability to use the same mail server
      without the need to reconfigure their mail client settings
      each time.</para>

    <procedure>
      <step>
	<para>Install <filename role="package">security/cyrus-sasl</filename>
	  from the ports. You can find this port in
	  <filename role="package">security/cyrus-sasl</filename>.
	  <filename role="package">security/cyrus-sasl</filename> has
	  a number of compile time options to choose from and, for
	  the method we will be using here, make sure to select the
	  <option>pwcheck</option> option.</para>
      </step>


      <step>
	<para>After installing <filename role="package">security/cyrus-sasl</filename>,
	  edit <filename>/usr/local/lib/sasl/Sendmail.conf</filename>
	  (or create it if it does not exist) and add the following
	  line:</para>

	<programlisting>pwcheck_method: passwd</programlisting>

	<para>This method will enable <application>sendmail</application>
	  to authenticate against your FreeBSD <filename>passwd</filename>
	  database.  This saves the trouble of creating a new set of usernames
	  and passwords for each user that needs to use
	  <acronym>SMTP</acronym> authentication, and keeps the login
	  and mail password the same.</para>
      </step>

      <step>
	<para>Now edit <filename>/etc/make.conf</filename> and add the
	  following lines:</para>

	<programlisting>SENDMAIL_CFLAGS=-I/usr/local/include/sasl1 -DSASL
SENDMAIL_LDFLAGS=-L/usr/local/lib
SENDMAIL_LDADD=-lsasl</programlisting>

	<para>These lines will give <application>sendmail</application>
	the proper configuration options for linking
	to <filename role="package">cyrus-sasl</filename> at compile time.
	Make sure that <filename role="package">cyrus-sasl</filename>
	has been installed before recompiling
	<application>sendmail</application>.</para>
      </step>

      <step>
	<para>Recompile <application>sendmail</application> by executing the following commands:</para>

	<screen>&prompt.root; <userinput>cd /usr/src/usr.sbin/sendmail</userinput>
&prompt.root; <userinput>make cleandir</userinput>
&prompt.root; <userinput>make obj</userinput>
&prompt.root; <userinput>make</userinput>
&prompt.root; <userinput>make install</userinput></screen>

	<para>The compile of <application>sendmail</application> should not have any problems
	  if <filename>/usr/src</filename> has not been changed extensively
	  and the shared libraries it needs are available.</para>
      </step>

      <step>
	<para>After <application>sendmail</application> has been compiled
	  and reinstalled, edit your <filename>/etc/mail/freebsd.mc</filename>
	  file (or whichever file you use as your <filename>.mc</filename> file. Many administrators
	  choose to use the output from &man.hostname.1; as the <filename>.mc</filename> file for
	  uniqueness).  Add these lines to it:</para>

	<programlisting>dnl set SASL options
TRUST_AUTH_MECH(`GSSAPI DIGEST-MD5 CRAM-MD5 LOGIN')dnl
define(`confAUTH_MECHANISMS', `GSSAPI DIGEST-MD5 CRAM-MD5 LOGIN')dnl
define(`confDEF_AUTH_INFO', `/etc/mail/auth-info')dnl</programlisting>

	<para>These options configure the different methods available to
	<application>sendmail</application> for authenticating users.
	If you would like to use a method other than
	<application>pwcheck</application>, please see the
	included documentation.</para>
      </step>

      <step>
	<para>Finally, run &man.make.1; while in <filename>/etc/mail</filename>.
	  That will run your new <filename>.mc</filename> file and create a <filename>.cf</filename> file named
	  <filename>freebsd.cf</filename> (or whatever name you have used
	  for your <filename>.mc</filename> file).  Then use the
	  command <command>make install restart</command>, which will
	  copy the file to <filename>sendmail.cf</filename>, and will
	  properly restart <application>sendmail</application>.
	  For more information about this process, you should refer
	  to <filename>/etc/mail/Makefile</filename>.</para>
      </step>
    </procedure>

    <para>If all has gone correctly, you should be able to enter your login
      information into the mail client and send a test message.
      For further investigation, set the <option>LogLevel</option> of
      <application>sendmail</application> to 13 and watch
      <filename>/var/log/maillog</filename> for any errors.</para>

    <para>You may wish to add the following lines to <filename>/etc/rc.conf</filename>
      so this service will be available after every system boot:</para>

    <programlisting>sasl_pwcheck_enable="YES"
sasl_pwcheck_program="/usr/local/sbin/pwcheck"</programlisting>

    <para>This will ensure the initialization of <acronym>SMTP_AUTH</acronym> upon system
      boot.</para>

    <para>For more information, please see the <application>sendmail</application>
      page regarding
      <ulink url="http://www.sendmail.org/~ca/email/auth.html">
      <acronym>SMTP</acronym> authentication</ulink>.</para>

  </sect1>

</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
